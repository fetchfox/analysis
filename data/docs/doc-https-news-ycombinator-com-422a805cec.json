{
  "url": "https://news.ycombinator.com/item?id=41530190",
  "body": "<html lang=\"en\" op=\"item\"><head><meta name=\"referrer\" content=\"origin\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link rel=\"stylesheet\" type=\"text/css\" href=\"news.css?u0LUEXpE1l7JwndlBn23\">\n        <link rel=\"icon\" href=\"y18.svg\">\n    <link rel=\"canonical\" href=\"https://news.ycombinator.com/item?id=41530190\"/>            <title>Show HN: FlowTracker – Track data flowing through Java programs | Hacker News</title></head><body><center><table id=\"hnmain\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"85%\" bgcolor=\"#f6f6ef\">\n        <tr><td bgcolor=\"#ff6600\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"padding:2px\"><tr><td style=\"width:18px;padding-right:4px\"><a href=\"https://news.ycombinator.com\"><img src=\"y18.svg\" width=\"18\" height=\"18\" style=\"border:1px white solid; display:block\"></a></td>\n                  <td style=\"line-height:12pt; height:10px;\"><span class=\"pagetop\"><b class=\"hnname\"><a href=\"news\">Hacker News</a></b>\n                            <a href=\"newest\">new</a> | <a href=\"front\">past</a> | <a href=\"newcomments\">comments</a> | <a href=\"ask\">ask</a> | <a href=\"show\">show</a> | <a href=\"jobs\">jobs</a> | <a href=\"submit\" rel=\"nofollow\">submit</a>            </span></td><td style=\"text-align:right;padding-right:4px;\"><span class=\"pagetop\">\n                              <a href=\"login?goto=item%3Fid%3D41530190\">login</a>\n                          </span></td>\n              </tr></table></td></tr>\n<tr id=\"pagespace\" title=\"Show HN: FlowTracker – Track data flowing through Java programs\" style=\"height:10px\"></tr><tr><td><table class=\"fatitem\" border=\"0\">\n        <tr class='athing' id='41530190'>\n      <td align=\"right\" valign=\"top\" class=\"title\"><span class=\"rank\"></span></td>      <td valign=\"top\" class=\"votelinks\"><center><a id='up_41530190' href='vote?id=41530190&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center></td><td class=\"title\"><span class=\"titleline\"><a href=\"https://github.com/coekie/flowtracker\">Show HN: FlowTracker – Track data flowing through Java programs</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/coekie\"><span class=\"sitestr\">github.com/coekie</span></a>)</span></span></td></tr><tr><td colspan=\"2\"></td><td class=\"subtext\"><span class=\"subline\">\n          <span class=\"score\" id=\"score_41530190\">275 points</span> by <a href=\"user?id=coekie\" class=\"hnuser\">coekie</a> <span class=\"age\" title=\"2024-09-13T11:33:28.000000Z\"><a href=\"item?id=41530190\">1 day ago</a></span> <span id=\"unv_41530190\"></span> | <a href=\"hide?id=41530190&amp;goto=item%3Fid%3D41530190\">hide</a> | <a href=\"https://hn.algolia.com/?query=Show%20HN%3A%20FlowTracker%20%E2%80%93%20Track%20data%20flowing%20through%20Java%20programs&type=story&dateRange=all&sort=byDate&storyText=false&prefix&page=0\" class=\"hnpast\">past</a> | <a href=\"fave?id=41530190&amp;auth=23c91053f3e536054e0b51cad9d947283b8937d1\">favorite</a> | <a href=\"item?id=41530190\">32&nbsp;comments</a>        </span>\n              </td></tr>\n    <tr><td style=\"height:2px\"></td></tr><tr><td colspan=\"2\"></td><td><div class=\"toptext\">FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it.<p>Watch the video or explore the live demo yourself, and read how it works at <a href=\"https:&#x2F;&#x2F;github.com&#x2F;coekie&#x2F;flowtracker\">https:&#x2F;&#x2F;github.com&#x2F;coekie&#x2F;flowtracker</a></div></td></tr>        <tr><td style=\"height:10px\"></td></tr><tr><td colspan=\"2\"></td><td><form action=\"comment\" method=\"post\"><input type=\"hidden\" name=\"parent\" value=\"41530190\"><input type=\"hidden\" name=\"goto\" value=\"item?id=41530190\"><input type=\"hidden\" name=\"hmac\" value=\"b05d081d9e22e854fef1a5cf102fd4016a2226bd\"><textarea name=\"text\" rows=\"8\" cols=\"80\" wrap=\"virtual\"></textarea><br><br>\n<input type=\"submit\" value=\"add comment\"></form></td></tr>  </table><br><br><table border=\"0\" class='comment-tree'>\n            <tr class='athing comtr' id='41530692'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530692' href='vote?id=41530692&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T12:42:13.000000Z\"><a href=\"item?id=41530692\">1 day ago</a></span> <span id=\"unv_41530692\"></span>          <span class='navs'>\n             | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530692\" n=\"7\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Cool! I wrote something on the same spirit but for Clojure, called FlowStorm <a href=\"http:&#x2F;&#x2F;www.flow-storm.org&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;www.flow-storm.org&#x2F;</a><p>For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers.<p>Edit: Since the OP demo is about exploring a web app for people interested in this topics I&#x27;m leaving a demo of FlowStorm debugging a web app also <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h8AFpZkAwPo\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h8AFpZkAwPo</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530692&amp;goto=item%3Fid%3D41530190%2341530692\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41533383'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533383' href='vote?id=41533383&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=udkl\" class=\"hnuser\">udkl</a> <span class=\"age\" title=\"2024-09-13T17:39:28.000000Z\"><a href=\"item?id=41533383\">1 day ago</a></span> <span id=\"unv_41533383\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533383\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533383&amp;goto=item%3Fid%3D41530190%2341533383\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41534187'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41534187' href='vote?id=41534187&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T19:13:22.000000Z\"><a href=\"item?id=41534187\">1 day ago</a></span> <span id=\"unv_41534187\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41533383\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41534187\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thanks! I started with cljfx and then moved to pure javafx, first because it wasn&#x27;t straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don&#x27;t conflict with debuggee one&#x27;s.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41534187&amp;goto=item%3Fid%3D41530190%2341534187\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41530938'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530938' href='vote?id=41530938&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jiehong\" class=\"hnuser\">jiehong</a> <span class=\"age\" title=\"2024-09-13T13:10:04.000000Z\"><a href=\"item?id=41530938\">1 day ago</a></span> <span id=\"unv_41530938\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533383\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530938\" n=\"4\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Nice!<p>Do you like use data structure metadata for tracking values?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530938&amp;goto=item%3Fid%3D41530190%2341530938\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531102'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531102' href='vote?id=41531102&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T13:30:48.000000Z\"><a href=\"item?id=41531102\">1 day ago</a></span> <span id=\"unv_41531102\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531102\" n=\"3\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Not sure I follow, can expand on that? I gave a presentation on it recently <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BuSpMvVU7j4\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BuSpMvVU7j4</a> which goes over demos and implementation details if you are interested in those topics.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531102&amp;goto=item%3Fid%3D41530190%2341531102\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531191'><td><table border='0'>  <tr>    <td class='ind' indent='3'><img src=\"s.gif\" height=\"1\" width=\"120\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531191' href='vote?id=41531191&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jiehong\" class=\"hnuser\">jiehong</a> <span class=\"age\" title=\"2024-09-13T13:40:12.000000Z\"><a href=\"item?id=41531191\">1 day ago</a></span> <span id=\"unv_41531191\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531102\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531191\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up.<p>Thanks for the video, I&#x27;m gonna go watch it.<p>[0[: <a href=\"https:&#x2F;&#x2F;clojure.org&#x2F;reference&#x2F;metadata\" rel=\"nofollow\">https:&#x2F;&#x2F;clojure.org&#x2F;reference&#x2F;metadata</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531191&amp;goto=item%3Fid%3D41530190%2341531191\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531229'><td><table border='0'>  <tr>    <td class='ind' indent='4'><img src=\"s.gif\" height=\"1\" width=\"160\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531229' href='vote?id=41531229&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T13:46:19.000000Z\"><a href=\"item?id=41531229\">1 day ago</a></span> <span id=\"unv_41531229\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531191\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531229\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">So recording in FlowStorm doesn&#x27;t use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531229&amp;goto=item%3Fid%3D41530190%2341531229\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                                    <tr class='athing comtr' id='41533337'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533337' href='vote?id=41533337&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=ysleepy\" class=\"hnuser\">ysleepy</a> <span class=\"age\" title=\"2024-09-13T17:34:45.000000Z\"><a href=\"item?id=41533337\">1 day ago</a></span> <span id=\"unv_41533337\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533337\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is incredibly cool.<p>I love how good the tooling is in the java&#x2F;jvm ecosystem.\nLast time I was this blown away was with jitwatch ( <a href=\"https:&#x2F;&#x2F;github.com&#x2F;AdoptOpenJDK&#x2F;jitwatch\">https:&#x2F;&#x2F;github.com&#x2F;AdoptOpenJDK&#x2F;jitwatch</a> )<p>FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation.<p>search keywords are &quot;dynamic taint tracking&#x2F;analysis&quot;<p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;gmu-swe&#x2F;phosphor\">https:&#x2F;&#x2F;github.com&#x2F;gmu-swe&#x2F;phosphor</a><p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;soot-oss&#x2F;SootUp\">https:&#x2F;&#x2F;github.com&#x2F;soot-oss&#x2F;SootUp</a><p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;feliam&#x2F;klee-taint\">https:&#x2F;&#x2F;github.com&#x2F;feliam&#x2F;klee-taint</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533337&amp;goto=item%3Fid%3D41530190%2341533337\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41530837'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530837' href='vote?id=41530837&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=BoppreH\" class=\"hnuser\">BoppreH</a> <span class=\"age\" title=\"2024-09-13T12:59:49.000000Z\"><a href=\"item?id=41530837\">1 day ago</a></span> <span id=\"unv_41530837\"></span>          <span class='navs'>\n             | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530837\" n=\"6\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Blown away by the demo tracking an HTML element back to the <i>SQL statement that added that value to the database</i>.<p>I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530837&amp;goto=item%3Fid%3D41530190%2341530837\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531355'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531355' href='vote?id=41531355&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=coekie\" class=\"hnuser\">coekie</a> <span class=\"age\" title=\"2024-09-13T14:02:17.000000Z\"><a href=\"item?id=41531355\">1 day ago</a></span> <span id=\"unv_41531355\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41531707\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531355\" n=\"4\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thanks.<p>As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through.<p>But the HTML element linking back to the SQL script that added that data into the database wasn&#x27;t like that.\nI didn&#x27;t expect or work towards it, that <i>just happened</i>, so it blew me away a little too and got me excited about what else this approach could accomplish.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531355&amp;goto=item%3Fid%3D41530190%2341531355\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41533349'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533349' href='vote?id=41533349&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=Noumenon72\" class=\"hnuser\">Noumenon72</a> <span class=\"age\" title=\"2024-09-13T17:35:32.000000Z\"><a href=\"item?id=41533349\">1 day ago</a></span> <span id=\"unv_41533349\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41532153\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533349\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I didn&#x27;t make it to that element of the demo because I don&#x27;t need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that &quot;wow&quot; element earlier in the demo.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533349&amp;goto=item%3Fid%3D41530190%2341533349\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41536747'><td><table border='0'>  <tr>    <td class='ind' indent='3'><img src=\"s.gif\" height=\"1\" width=\"120\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41536747' href='vote?id=41536747&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=noisy_boy\" class=\"hnuser\">noisy_boy</a> <span class=\"age\" title=\"2024-09-14T01:20:41.000000Z\"><a href=\"item?id=41536747\">23 hours ago</a></span> <span id=\"unv_41536747\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41533349\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41532153\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41536747\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Or maybe split the demo into shorter demos&#x2F;gifs where each highlights a specific part. Very cool project, should get more attention.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41536747&amp;goto=item%3Fid%3D41530190%2341536747\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41532153'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532153' href='vote?id=41532153&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=immibis\" class=\"hnuser\">immibis</a> <span class=\"age\" title=\"2024-09-13T15:32:12.000000Z\"><a href=\"item?id=41532153\">1 day ago</a></span> <span id=\"unv_41532153\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533349\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531707\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532153\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532153&amp;goto=item%3Fid%3D41530190%2341532153\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41531707'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531707' href='vote?id=41531707&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=actionfromafar\" class=\"hnuser\">actionfromafar</a> <span class=\"age\" title=\"2024-09-13T14:43:28.000000Z\"><a href=\"item?id=41531707\">1 day ago</a></span> <span id=\"unv_41531707\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531707\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data.<p>Maybe also some way to track if the data is meant to be transient or meant to be written back.<p>The more such constraints which could be described up front, the better.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531707&amp;goto=item%3Fid%3D41530190%2341531707\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41530602'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530602' href='vote?id=41530602&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=smartmic\" class=\"hnuser\">smartmic</a> <span class=\"age\" title=\"2024-09-13T12:30:47.000000Z\"><a href=\"item?id=41530602\">1 day ago</a></span> <span id=\"unv_41530602\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530669\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530602\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530602&amp;goto=item%3Fid%3D41530190%2341530602\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41530669'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530669' href='vote?id=41530669&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=michaelmior\" class=\"hnuser\">michaelmior</a> <span class=\"age\" title=\"2024-09-13T12:39:51.000000Z\"><a href=\"item?id=41530669\">1 day ago</a></span> <span id=\"unv_41530669\"></span>          <span class='navs'>\n             | <a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533252\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530669\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530669&amp;goto=item%3Fid%3D41530190%2341530669\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533252'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533252' href='vote?id=41533252&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=hoten\" class=\"hnuser\">hoten</a> <span class=\"age\" title=\"2024-09-13T17:26:20.000000Z\"><a href=\"item?id=41533252\">1 day ago</a></span> <span id=\"unv_41533252\"></span>          <span class='navs'>\n             | <a href=\"#41530669\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533526\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533252\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn&#x27;t manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution.<p>Integration of any solution like this into existing frameworks feels like a big challenge.<p>[1] HTML Source Maps - <a href=\"https:&#x2F;&#x2F;github.com&#x2F;connorjclark&#x2F;html-source-maps\">https:&#x2F;&#x2F;github.com&#x2F;connorjclark&#x2F;html-source-maps</a> <a href=\"https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;19XYWiPL9h9vA6QcOrGV9NfkrPZ8r_irDb2C1mI1lqIQ&#x2F;edit\" rel=\"nofollow\">https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;19XYWiPL9h9vA6QcOrGV9Nfkr...</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533252&amp;goto=item%3Fid%3D41530190%2341533252\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533526'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533526' href='vote?id=41533526&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=svieira\" class=\"hnuser\">svieira</a> <span class=\"age\" title=\"2024-09-13T18:00:20.000000Z\"><a href=\"item?id=41533526\">1 day ago</a></span> <span id=\"unv_41533526\"></span>          <span class='navs'>\n             | <a href=\"#41533252\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533526\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking &quot;why is &lt;the UI element&gt; <i>not</i> here?&quot;  Fantastic work!<p><a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TWAMr72VaaU&amp;t=164s\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TWAMr72VaaU&amp;t=164s</a> and <a href=\"https:&#x2F;&#x2F;witheve.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;witheve.com&#x2F;</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533526&amp;goto=item%3Fid%3D41530190%2341533526\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41532291'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532291' href='vote?id=41532291&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=peterpost2\" class=\"hnuser\">peterpost2</a> <span class=\"age\" title=\"2024-09-13T15:45:50.000000Z\"><a href=\"item?id=41532291\">1 day ago</a></span> <span id=\"unv_41532291\"></span>          <span class='navs'>\n             | <a href=\"#41533526\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532291\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532291&amp;goto=item%3Fid%3D41530190%2341532291\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41532522'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532522' href='vote?id=41532522&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=coekie\" class=\"hnuser\">coekie</a> <span class=\"age\" title=\"2024-09-13T16:08:44.000000Z\"><a href=\"item?id=41532522\">1 day ago</a></span> <span id=\"unv_41532522\"></span>          <span class='navs'>\n             | <a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532522\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">No, that must have been something different.<p>It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it&#x27;s possible the tool you&#x27;re thinking of used a similar approach.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532522&amp;goto=item%3Fid%3D41530190%2341532522\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41533368'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533368' href='vote?id=41533368&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=SeriousM\" class=\"hnuser\">SeriousM</a> <span class=\"age\" title=\"2024-09-13T17:37:53.000000Z\"><a href=\"item?id=41533368\">1 day ago</a></span> <span id=\"unv_41533368\"></span>          <span class='navs'>\n             | <a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531811\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533368\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr &quot;what did this string have seen from creation till it reached my screen&quot;.\nThis is a step into this direction.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533368&amp;goto=item%3Fid%3D41530190%2341533368\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41531811'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531811' href='vote?id=41531811&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=BadJo0Jo0\" class=\"hnuser\">BadJo0Jo0</a> <span class=\"age\" title=\"2024-09-13T14:55:25.000000Z\"><a href=\"item?id=41531811\">1 day ago</a></span> <span id=\"unv_41531811\"></span>          <span class='navs'>\n             | <a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41541090\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531811\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thanks for this!<p>Been trying to get this work with VSCode with a project I&#x27;m trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531811&amp;goto=item%3Fid%3D41530190%2341531811\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41541090'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41541090' href='vote?id=41541090&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=apnew\" class=\"hnuser\">apnew</a> <span class=\"age\" title=\"2024-09-14T17:06:45.000000Z\"><a href=\"item?id=41541090\">7 hours ago</a></span> <span id=\"unv_41541090\"></span>          <span class='navs'>\n             | <a href=\"#41531811\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533120\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41541090\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Very very impressive.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41541090&amp;goto=item%3Fid%3D41530190%2341541090\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533120'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533120' href='vote?id=41533120&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=yellow_lead\" class=\"hnuser\">yellow_lead</a> <span class=\"age\" title=\"2024-09-13T17:12:11.000000Z\"><a href=\"item?id=41533120\">1 day ago</a></span> <span id=\"unv_41533120\"></span>          <span class='navs'>\n             | <a href=\"#41541090\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530800\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533120\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533120&amp;goto=item%3Fid%3D41530190%2341533120\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41530800'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530800' href='vote?id=41530800&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=exabrial\" class=\"hnuser\">exabrial</a> <span class=\"age\" title=\"2024-09-13T12:55:20.000000Z\"><a href=\"item?id=41530800\">1 day ago</a></span> <span id=\"unv_41530800\"></span>          <span class='navs'>\n             | <a href=\"#41533120\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530800\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is awesome! Reminds me of Java flight recorder!</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530800&amp;goto=item%3Fid%3D41530190%2341530800\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533415'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533415' href='vote?id=41533415&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=hansoolo\" class=\"hnuser\">hansoolo</a> <span class=\"age\" title=\"2024-09-13T17:44:08.000000Z\"><a href=\"item?id=41533415\">1 day ago</a></span> <span id=\"unv_41533415\"></span>          <span class='navs'>\n             | <a href=\"#41530800\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533415\" n=\"3\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is pretty cool! Do you think something similar is possible for c#, too?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533415&amp;goto=item%3Fid%3D41530190%2341533415\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41534434'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41534434' href='vote?id=41534434&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=neonsunset\" class=\"hnuser\">neonsunset</a> <span class=\"age\" title=\"2024-09-13T19:38:11.000000Z\"><a href=\"item?id=41534434\">1 day ago</a></span> <span id=\"unv_41534434\"></span>          <span class='navs'>\n             | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41534434\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">There&#x27;s an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace&#x2F;-monitor&#x2F;-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that&#x27;s what .NET Aspire uses.<p>I think a similar experience can be quickly achieved with tracing in aspire: <a href=\"https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;dotnet&#x2F;introducing-dotnet-aspire-simplifying-cloud-native-development-with-dotnet-8&#x2F;#observability\" rel=\"nofollow\">https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;dotnet&#x2F;introducing-dotnet-asp...</a><p>It&#x27;s a bit different but I don&#x27;t know if anyone made a quick handy GUI tool to hook up to .NET&#x27;s EventPipe and display its data in a nice way, but the extensive API for that is there.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41534434&amp;goto=item%3Fid%3D41530190%2341534434\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41538723'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41538723' href='vote?id=41538723&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=hansoolo\" class=\"hnuser\">hansoolo</a> <span class=\"age\" title=\"2024-09-14T10:00:30.000000Z\"><a href=\"item?id=41538723\">14 hours ago</a></span> <span id=\"unv_41538723\"></span>          <span class='navs'>\n             | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41534434\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41538723\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thank you. To be honest, I hadn&#x27;t heard of Aspire before, so TIL.<p>From a quick skim read, it sounds similar in some aspects. And also it&#x27;s a good starting point.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41538723&amp;goto=item%3Fid%3D41530190%2341538723\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                        <tr class='athing comtr' id='41533905'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533905' href='vote?id=41533905&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=KomoD\" class=\"hnuser\">KomoD</a> <span class=\"age\" title=\"2024-09-13T18:41:21.000000Z\"><a href=\"item?id=41533905\">1 day ago</a></span> <span id=\"unv_41533905\"></span>          <span class='navs'>\n             | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533905\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">That is really cool, really like that there&#x27;s a browser demo too</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533905&amp;goto=item%3Fid%3D41530190%2341533905\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41531068'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531068' href='vote?id=41531068&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=larusso\" class=\"hnuser\">larusso</a> <span class=\"age\" title=\"2024-09-13T13:27:01.000000Z\"><a href=\"item?id=41531068\">1 day ago</a></span> <span id=\"unv_41531068\"></span>          <span class='navs'>\n             | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531626\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531068\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Hmm would love to connect this to our gralde builds :)</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531068&amp;goto=item%3Fid%3D41530190%2341531068\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41532688'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532688' href='vote?id=41532688&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=mdaniel\" class=\"hnuser\">mdaniel</a> <span class=\"age\" title=\"2024-09-13T16:25:03.000000Z\"><a href=\"item?id=41532688\">1 day ago</a></span> <span id=\"unv_41532688\"></span>          <span class='navs'>\n             | <a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41531626\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532688\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I know you may be tongue-in-cheek but if you&#x27;re on the .gradle.kts flavor there&#x27;s a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532688&amp;goto=item%3Fid%3D41530190%2341532688\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41531626'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531626' href='vote?id=41531626&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=kitd\" class=\"hnuser\">kitd</a> <span class=\"age\" title=\"2024-09-13T14:34:45.000000Z\"><a href=\"item?id=41531626\">1 day ago</a></span> <span id=\"unv_41531626\"></span>          <span class='navs'>\n             | <a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">prev</a> <a class=\"togg clicky\" id=\"41531626\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Very impressive!</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531626&amp;goto=item%3Fid%3D41530190%2341531626\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            </table>\n  <br><br>\n</td></tr>\n<tr><td><img src=\"s.gif\" height=\"10\" width=\"0\"><table width=\"100%\" cellspacing=\"0\" cellpadding=\"1\"><tr><td bgcolor=\"#ff6600\"></td></tr></table><br>\n<center><span class=\"yclinks\"><a href=\"newsguidelines.html\">Guidelines</a> | <a href=\"newsfaq.html\">FAQ</a> | <a href=\"lists\">Lists</a> | <a href=\"https://github.com/HackerNews/API\">API</a> | <a href=\"security.html\">Security</a> | <a href=\"https://www.ycombinator.com/legal/\">Legal</a> | <a href=\"https://www.ycombinator.com/apply/\">Apply to YC</a> | <a href=\"mailto:hn@ycombinator.com\">Contact</a></span><br><br>\n<form method=\"get\" action=\"//hn.algolia.com/\">Search: <input type=\"text\" name=\"q\" size=\"17\" autocorrect=\"off\" spellcheck=\"false\" autocapitalize=\"off\" autocomplete=\"off\"></form></center></td></tr>      </table></center></body>\n      <script type='text/javascript' src='hn.js?u0LUEXpE1l7JwndlBn23'></script>\n  </html>\n",
  "html": "<html lang=\"en\" op=\"item\"><head><meta name=\"referrer\" content=\"origin\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link rel=\"stylesheet\" type=\"text/css\" href=\"news.css?u0LUEXpE1l7JwndlBn23\">\n        <link rel=\"icon\" href=\"y18.svg\">\n    <link rel=\"canonical\" href=\"https://news.ycombinator.com/item?id=41530190\"/>            <title>Show HN: FlowTracker – Track data flowing through Java programs | Hacker News</title></head><body><center><table id=\"hnmain\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"85%\" bgcolor=\"#f6f6ef\">\n        <tr><td bgcolor=\"#ff6600\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"padding:2px\"><tr><td style=\"width:18px;padding-right:4px\"><a href=\"https://news.ycombinator.com\"><img src=\"y18.svg\" width=\"18\" height=\"18\" style=\"border:1px white solid; display:block\"></a></td>\n                  <td style=\"line-height:12pt; height:10px;\"><span class=\"pagetop\"><b class=\"hnname\"><a href=\"news\">Hacker News</a></b>\n                            <a href=\"newest\">new</a> | <a href=\"front\">past</a> | <a href=\"newcomments\">comments</a> | <a href=\"ask\">ask</a> | <a href=\"show\">show</a> | <a href=\"jobs\">jobs</a> | <a href=\"submit\" rel=\"nofollow\">submit</a>            </span></td><td style=\"text-align:right;padding-right:4px;\"><span class=\"pagetop\">\n                              <a href=\"login?goto=item%3Fid%3D41530190\">login</a>\n                          </span></td>\n              </tr></table></td></tr>\n<tr id=\"pagespace\" title=\"Show HN: FlowTracker – Track data flowing through Java programs\" style=\"height:10px\"></tr><tr><td><table class=\"fatitem\" border=\"0\">\n        <tr class='athing' id='41530190'>\n      <td align=\"right\" valign=\"top\" class=\"title\"><span class=\"rank\"></span></td>      <td valign=\"top\" class=\"votelinks\"><center><a id='up_41530190' href='vote?id=41530190&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center></td><td class=\"title\"><span class=\"titleline\"><a href=\"https://github.com/coekie/flowtracker\">Show HN: FlowTracker – Track data flowing through Java programs</a><span class=\"sitebit comhead\"> (<a href=\"from?site=github.com/coekie\"><span class=\"sitestr\">github.com/coekie</span></a>)</span></span></td></tr><tr><td colspan=\"2\"></td><td class=\"subtext\"><span class=\"subline\">\n          <span class=\"score\" id=\"score_41530190\">275 points</span> by <a href=\"user?id=coekie\" class=\"hnuser\">coekie</a> <span class=\"age\" title=\"2024-09-13T11:33:28.000000Z\"><a href=\"item?id=41530190\">1 day ago</a></span> <span id=\"unv_41530190\"></span> | <a href=\"hide?id=41530190&amp;goto=item%3Fid%3D41530190\">hide</a> | <a href=\"https://hn.algolia.com/?query=Show%20HN%3A%20FlowTracker%20%E2%80%93%20Track%20data%20flowing%20through%20Java%20programs&type=story&dateRange=all&sort=byDate&storyText=false&prefix&page=0\" class=\"hnpast\">past</a> | <a href=\"fave?id=41530190&amp;auth=23c91053f3e536054e0b51cad9d947283b8937d1\">favorite</a> | <a href=\"item?id=41530190\">32&nbsp;comments</a>        </span>\n              </td></tr>\n    <tr><td style=\"height:2px\"></td></tr><tr><td colspan=\"2\"></td><td><div class=\"toptext\">FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it.<p>Watch the video or explore the live demo yourself, and read how it works at <a href=\"https:&#x2F;&#x2F;github.com&#x2F;coekie&#x2F;flowtracker\">https:&#x2F;&#x2F;github.com&#x2F;coekie&#x2F;flowtracker</a></div></td></tr>        <tr><td style=\"height:10px\"></td></tr><tr><td colspan=\"2\"></td><td><form action=\"comment\" method=\"post\"><input type=\"hidden\" name=\"parent\" value=\"41530190\"><input type=\"hidden\" name=\"goto\" value=\"item?id=41530190\"><input type=\"hidden\" name=\"hmac\" value=\"b05d081d9e22e854fef1a5cf102fd4016a2226bd\"><textarea name=\"text\" rows=\"8\" cols=\"80\" wrap=\"virtual\"></textarea><br><br>\n<input type=\"submit\" value=\"add comment\"></form></td></tr>  </table><br><br><table border=\"0\" class='comment-tree'>\n            <tr class='athing comtr' id='41530692'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530692' href='vote?id=41530692&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T12:42:13.000000Z\"><a href=\"item?id=41530692\">1 day ago</a></span> <span id=\"unv_41530692\"></span>          <span class='navs'>\n             | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530692\" n=\"7\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Cool! I wrote something on the same spirit but for Clojure, called FlowStorm <a href=\"http:&#x2F;&#x2F;www.flow-storm.org&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;www.flow-storm.org&#x2F;</a><p>For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers.<p>Edit: Since the OP demo is about exploring a web app for people interested in this topics I&#x27;m leaving a demo of FlowStorm debugging a web app also <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h8AFpZkAwPo\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h8AFpZkAwPo</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530692&amp;goto=item%3Fid%3D41530190%2341530692\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41533383'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533383' href='vote?id=41533383&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=udkl\" class=\"hnuser\">udkl</a> <span class=\"age\" title=\"2024-09-13T17:39:28.000000Z\"><a href=\"item?id=41533383\">1 day ago</a></span> <span id=\"unv_41533383\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533383\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533383&amp;goto=item%3Fid%3D41530190%2341533383\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41534187'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41534187' href='vote?id=41534187&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T19:13:22.000000Z\"><a href=\"item?id=41534187\">1 day ago</a></span> <span id=\"unv_41534187\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41533383\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41534187\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thanks! I started with cljfx and then moved to pure javafx, first because it wasn&#x27;t straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don&#x27;t conflict with debuggee one&#x27;s.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41534187&amp;goto=item%3Fid%3D41530190%2341534187\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41530938'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530938' href='vote?id=41530938&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jiehong\" class=\"hnuser\">jiehong</a> <span class=\"age\" title=\"2024-09-13T13:10:04.000000Z\"><a href=\"item?id=41530938\">1 day ago</a></span> <span id=\"unv_41530938\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533383\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530938\" n=\"4\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Nice!<p>Do you like use data structure metadata for tracking values?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530938&amp;goto=item%3Fid%3D41530190%2341530938\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531102'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531102' href='vote?id=41531102&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T13:30:48.000000Z\"><a href=\"item?id=41531102\">1 day ago</a></span> <span id=\"unv_41531102\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531102\" n=\"3\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Not sure I follow, can expand on that? I gave a presentation on it recently <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BuSpMvVU7j4\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BuSpMvVU7j4</a> which goes over demos and implementation details if you are interested in those topics.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531102&amp;goto=item%3Fid%3D41530190%2341531102\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531191'><td><table border='0'>  <tr>    <td class='ind' indent='3'><img src=\"s.gif\" height=\"1\" width=\"120\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531191' href='vote?id=41531191&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jiehong\" class=\"hnuser\">jiehong</a> <span class=\"age\" title=\"2024-09-13T13:40:12.000000Z\"><a href=\"item?id=41531191\">1 day ago</a></span> <span id=\"unv_41531191\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531102\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531191\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up.<p>Thanks for the video, I&#x27;m gonna go watch it.<p>[0[: <a href=\"https:&#x2F;&#x2F;clojure.org&#x2F;reference&#x2F;metadata\" rel=\"nofollow\">https:&#x2F;&#x2F;clojure.org&#x2F;reference&#x2F;metadata</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531191&amp;goto=item%3Fid%3D41530190%2341531191\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531229'><td><table border='0'>  <tr>    <td class='ind' indent='4'><img src=\"s.gif\" height=\"1\" width=\"160\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531229' href='vote?id=41531229&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a> <span class=\"age\" title=\"2024-09-13T13:46:19.000000Z\"><a href=\"item?id=41531229\">1 day ago</a></span> <span id=\"unv_41531229\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531191\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531229\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">So recording in FlowStorm doesn&#x27;t use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531229&amp;goto=item%3Fid%3D41530190%2341531229\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                                    <tr class='athing comtr' id='41533337'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533337' href='vote?id=41533337&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=ysleepy\" class=\"hnuser\">ysleepy</a> <span class=\"age\" title=\"2024-09-13T17:34:45.000000Z\"><a href=\"item?id=41533337\">1 day ago</a></span> <span id=\"unv_41533337\"></span>          <span class='navs'>\n             | <a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533337\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is incredibly cool.<p>I love how good the tooling is in the java&#x2F;jvm ecosystem.\nLast time I was this blown away was with jitwatch ( <a href=\"https:&#x2F;&#x2F;github.com&#x2F;AdoptOpenJDK&#x2F;jitwatch\">https:&#x2F;&#x2F;github.com&#x2F;AdoptOpenJDK&#x2F;jitwatch</a> )<p>FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation.<p>search keywords are &quot;dynamic taint tracking&#x2F;analysis&quot;<p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;gmu-swe&#x2F;phosphor\">https:&#x2F;&#x2F;github.com&#x2F;gmu-swe&#x2F;phosphor</a><p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;soot-oss&#x2F;SootUp\">https:&#x2F;&#x2F;github.com&#x2F;soot-oss&#x2F;SootUp</a><p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;feliam&#x2F;klee-taint\">https:&#x2F;&#x2F;github.com&#x2F;feliam&#x2F;klee-taint</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533337&amp;goto=item%3Fid%3D41530190%2341533337\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41530837'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530837' href='vote?id=41530837&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=BoppreH\" class=\"hnuser\">BoppreH</a> <span class=\"age\" title=\"2024-09-13T12:59:49.000000Z\"><a href=\"item?id=41530837\">1 day ago</a></span> <span id=\"unv_41530837\"></span>          <span class='navs'>\n             | <a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530837\" n=\"6\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Blown away by the demo tracking an HTML element back to the <i>SQL statement that added that value to the database</i>.<p>I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530837&amp;goto=item%3Fid%3D41530190%2341530837\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41531355'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531355' href='vote?id=41531355&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=coekie\" class=\"hnuser\">coekie</a> <span class=\"age\" title=\"2024-09-13T14:02:17.000000Z\"><a href=\"item?id=41531355\">1 day ago</a></span> <span id=\"unv_41531355\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41531707\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531355\" n=\"4\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thanks.<p>As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through.<p>But the HTML element linking back to the SQL script that added that data into the database wasn&#x27;t like that.\nI didn&#x27;t expect or work towards it, that <i>just happened</i>, so it blew me away a little too and got me excited about what else this approach could accomplish.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531355&amp;goto=item%3Fid%3D41530190%2341531355\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41533349'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533349' href='vote?id=41533349&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=Noumenon72\" class=\"hnuser\">Noumenon72</a> <span class=\"age\" title=\"2024-09-13T17:35:32.000000Z\"><a href=\"item?id=41533349\">1 day ago</a></span> <span id=\"unv_41533349\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41532153\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533349\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I didn&#x27;t make it to that element of the demo because I don&#x27;t need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that &quot;wow&quot; element earlier in the demo.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533349&amp;goto=item%3Fid%3D41530190%2341533349\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41536747'><td><table border='0'>  <tr>    <td class='ind' indent='3'><img src=\"s.gif\" height=\"1\" width=\"120\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41536747' href='vote?id=41536747&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=noisy_boy\" class=\"hnuser\">noisy_boy</a> <span class=\"age\" title=\"2024-09-14T01:20:41.000000Z\"><a href=\"item?id=41536747\">23 hours ago</a></span> <span id=\"unv_41536747\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41533349\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41532153\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41536747\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Or maybe split the demo into shorter demos&#x2F;gifs where each highlights a specific part. Very cool project, should get more attention.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41536747&amp;goto=item%3Fid%3D41530190%2341536747\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41532153'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532153' href='vote?id=41532153&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=immibis\" class=\"hnuser\">immibis</a> <span class=\"age\" title=\"2024-09-13T15:32:12.000000Z\"><a href=\"item?id=41532153\">1 day ago</a></span> <span id=\"unv_41532153\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533349\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531707\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532153\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532153&amp;goto=item%3Fid%3D41530190%2341532153\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41531707'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531707' href='vote?id=41531707&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=actionfromafar\" class=\"hnuser\">actionfromafar</a> <span class=\"age\" title=\"2024-09-13T14:43:28.000000Z\"><a href=\"item?id=41531707\">1 day ago</a></span> <span id=\"unv_41531707\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531707\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data.<p>Maybe also some way to track if the data is meant to be transient or meant to be written back.<p>The more such constraints which could be described up front, the better.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531707&amp;goto=item%3Fid%3D41530190%2341531707\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41530602'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530602' href='vote?id=41530602&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=smartmic\" class=\"hnuser\">smartmic</a> <span class=\"age\" title=\"2024-09-13T12:30:47.000000Z\"><a href=\"item?id=41530602\">1 day ago</a></span> <span id=\"unv_41530602\"></span>          <span class='navs'>\n             | <a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530669\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530602\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530602&amp;goto=item%3Fid%3D41530190%2341530602\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41530669'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530669' href='vote?id=41530669&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=michaelmior\" class=\"hnuser\">michaelmior</a> <span class=\"age\" title=\"2024-09-13T12:39:51.000000Z\"><a href=\"item?id=41530669\">1 day ago</a></span> <span id=\"unv_41530669\"></span>          <span class='navs'>\n             | <a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533252\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530669\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530669&amp;goto=item%3Fid%3D41530190%2341530669\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533252'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533252' href='vote?id=41533252&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=hoten\" class=\"hnuser\">hoten</a> <span class=\"age\" title=\"2024-09-13T17:26:20.000000Z\"><a href=\"item?id=41533252\">1 day ago</a></span> <span id=\"unv_41533252\"></span>          <span class='navs'>\n             | <a href=\"#41530669\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533526\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533252\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn&#x27;t manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution.<p>Integration of any solution like this into existing frameworks feels like a big challenge.<p>[1] HTML Source Maps - <a href=\"https:&#x2F;&#x2F;github.com&#x2F;connorjclark&#x2F;html-source-maps\">https:&#x2F;&#x2F;github.com&#x2F;connorjclark&#x2F;html-source-maps</a> <a href=\"https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;19XYWiPL9h9vA6QcOrGV9NfkrPZ8r_irDb2C1mI1lqIQ&#x2F;edit\" rel=\"nofollow\">https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;19XYWiPL9h9vA6QcOrGV9Nfkr...</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533252&amp;goto=item%3Fid%3D41530190%2341533252\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533526'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533526' href='vote?id=41533526&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=svieira\" class=\"hnuser\">svieira</a> <span class=\"age\" title=\"2024-09-13T18:00:20.000000Z\"><a href=\"item?id=41533526\">1 day ago</a></span> <span id=\"unv_41533526\"></span>          <span class='navs'>\n             | <a href=\"#41533252\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533526\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking &quot;why is &lt;the UI element&gt; <i>not</i> here?&quot;  Fantastic work!<p><a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TWAMr72VaaU&amp;t=164s\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TWAMr72VaaU&amp;t=164s</a> and <a href=\"https:&#x2F;&#x2F;witheve.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;witheve.com&#x2F;</a></div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533526&amp;goto=item%3Fid%3D41530190%2341533526\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41532291'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532291' href='vote?id=41532291&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=peterpost2\" class=\"hnuser\">peterpost2</a> <span class=\"age\" title=\"2024-09-13T15:45:50.000000Z\"><a href=\"item?id=41532291\">1 day ago</a></span> <span id=\"unv_41532291\"></span>          <span class='navs'>\n             | <a href=\"#41533526\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532291\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532291&amp;goto=item%3Fid%3D41530190%2341532291\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41532522'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532522' href='vote?id=41532522&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=coekie\" class=\"hnuser\">coekie</a> <span class=\"age\" title=\"2024-09-13T16:08:44.000000Z\"><a href=\"item?id=41532522\">1 day ago</a></span> <span id=\"unv_41532522\"></span>          <span class='navs'>\n             | <a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532522\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">No, that must have been something different.<p>It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it&#x27;s possible the tool you&#x27;re thinking of used a similar approach.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532522&amp;goto=item%3Fid%3D41530190%2341532522\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41533368'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533368' href='vote?id=41533368&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=SeriousM\" class=\"hnuser\">SeriousM</a> <span class=\"age\" title=\"2024-09-13T17:37:53.000000Z\"><a href=\"item?id=41533368\">1 day ago</a></span> <span id=\"unv_41533368\"></span>          <span class='navs'>\n             | <a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531811\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533368\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr &quot;what did this string have seen from creation till it reached my screen&quot;.\nThis is a step into this direction.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533368&amp;goto=item%3Fid%3D41530190%2341533368\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41531811'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531811' href='vote?id=41531811&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=BadJo0Jo0\" class=\"hnuser\">BadJo0Jo0</a> <span class=\"age\" title=\"2024-09-13T14:55:25.000000Z\"><a href=\"item?id=41531811\">1 day ago</a></span> <span id=\"unv_41531811\"></span>          <span class='navs'>\n             | <a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41541090\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531811\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thanks for this!<p>Been trying to get this work with VSCode with a project I&#x27;m trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531811&amp;goto=item%3Fid%3D41530190%2341531811\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41541090'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41541090' href='vote?id=41541090&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=apnew\" class=\"hnuser\">apnew</a> <span class=\"age\" title=\"2024-09-14T17:06:45.000000Z\"><a href=\"item?id=41541090\">7 hours ago</a></span> <span id=\"unv_41541090\"></span>          <span class='navs'>\n             | <a href=\"#41531811\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533120\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41541090\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Very very impressive.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41541090&amp;goto=item%3Fid%3D41530190%2341541090\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533120'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533120' href='vote?id=41533120&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=yellow_lead\" class=\"hnuser\">yellow_lead</a> <span class=\"age\" title=\"2024-09-13T17:12:11.000000Z\"><a href=\"item?id=41533120\">1 day ago</a></span> <span id=\"unv_41533120\"></span>          <span class='navs'>\n             | <a href=\"#41541090\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41530800\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533120\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533120&amp;goto=item%3Fid%3D41530190%2341533120\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41530800'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41530800' href='vote?id=41530800&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=exabrial\" class=\"hnuser\">exabrial</a> <span class=\"age\" title=\"2024-09-13T12:55:20.000000Z\"><a href=\"item?id=41530800\">1 day ago</a></span> <span id=\"unv_41530800\"></span>          <span class='navs'>\n             | <a href=\"#41533120\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41530800\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is awesome! Reminds me of Java flight recorder!</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41530800&amp;goto=item%3Fid%3D41530190%2341530800\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41533415'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533415' href='vote?id=41533415&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=hansoolo\" class=\"hnuser\">hansoolo</a> <span class=\"age\" title=\"2024-09-13T17:44:08.000000Z\"><a href=\"item?id=41533415\">1 day ago</a></span> <span id=\"unv_41533415\"></span>          <span class='navs'>\n             | <a href=\"#41530800\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533415\" n=\"3\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">This is pretty cool! Do you think something similar is possible for c#, too?</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533415&amp;goto=item%3Fid%3D41530190%2341533415\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41534434'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41534434' href='vote?id=41534434&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=neonsunset\" class=\"hnuser\">neonsunset</a> <span class=\"age\" title=\"2024-09-13T19:38:11.000000Z\"><a href=\"item?id=41534434\">1 day ago</a></span> <span id=\"unv_41534434\"></span>          <span class='navs'>\n             | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41534434\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">There&#x27;s an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace&#x2F;-monitor&#x2F;-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that&#x27;s what .NET Aspire uses.<p>I think a similar experience can be quickly achieved with tracing in aspire: <a href=\"https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;dotnet&#x2F;introducing-dotnet-aspire-simplifying-cloud-native-development-with-dotnet-8&#x2F;#observability\" rel=\"nofollow\">https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;dotnet&#x2F;introducing-dotnet-asp...</a><p>It&#x27;s a bit different but I don&#x27;t know if anyone made a quick handy GUI tool to hook up to .NET&#x27;s EventPipe and display its data in a nice way, but the extensive API for that is there.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41534434&amp;goto=item%3Fid%3D41530190%2341534434\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41538723'><td><table border='0'>  <tr>    <td class='ind' indent='2'><img src=\"s.gif\" height=\"1\" width=\"80\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41538723' href='vote?id=41538723&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=hansoolo\" class=\"hnuser\">hansoolo</a> <span class=\"age\" title=\"2024-09-14T10:00:30.000000Z\"><a href=\"item?id=41538723\">14 hours ago</a></span> <span id=\"unv_41538723\"></span>          <span class='navs'>\n             | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">root</a> | <a href=\"#41534434\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41538723\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Thank you. To be honest, I hadn&#x27;t heard of Aspire before, so TIL.<p>From a quick skim read, it sounds similar in some aspects. And also it&#x27;s a good starting point.</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41538723&amp;goto=item%3Fid%3D41530190%2341538723\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                        <tr class='athing comtr' id='41533905'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41533905' href='vote?id=41533905&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=KomoD\" class=\"hnuser\">KomoD</a> <span class=\"age\" title=\"2024-09-13T18:41:21.000000Z\"><a href=\"item?id=41533905\">1 day ago</a></span> <span id=\"unv_41533905\"></span>          <span class='navs'>\n             | <a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41533905\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">That is really cool, really like that there&#x27;s a browser demo too</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41533905&amp;goto=item%3Fid%3D41530190%2341533905\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            <tr class='athing comtr' id='41531068'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531068' href='vote?id=41531068&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=larusso\" class=\"hnuser\">larusso</a> <span class=\"age\" title=\"2024-09-13T13:27:01.000000Z\"><a href=\"item?id=41531068\">1 day ago</a></span> <span id=\"unv_41531068\"></span>          <span class='navs'>\n             | <a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">prev</a> | <a href=\"#41531626\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41531068\" n=\"2\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Hmm would love to connect this to our gralde builds :)</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531068&amp;goto=item%3Fid%3D41530190%2341531068\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                <tr class='athing comtr' id='41532688'><td><table border='0'>  <tr>    <td class='ind' indent='1'><img src=\"s.gif\" height=\"1\" width=\"40\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41532688' href='vote?id=41532688&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=mdaniel\" class=\"hnuser\">mdaniel</a> <span class=\"age\" title=\"2024-09-13T16:25:03.000000Z\"><a href=\"item?id=41532688\">1 day ago</a></span> <span id=\"unv_41532688\"></span>          <span class='navs'>\n             | <a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">parent</a> | <a href=\"#41531626\" class=\"clicky\" aria-hidden=\"true\">next</a> <a class=\"togg clicky\" id=\"41532688\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">I know you may be tongue-in-cheek but if you&#x27;re on the .gradle.kts flavor there&#x27;s a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41532688&amp;goto=item%3Fid%3D41530190%2341532688\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n                  <tr class='athing comtr' id='41531626'><td><table border='0'>  <tr>    <td class='ind' indent='0'><img src=\"s.gif\" height=\"1\" width=\"0\"></td><td valign=\"top\" class=\"votelinks\">\n      <center><a id='up_41531626' href='vote?id=41531626&amp;how=up&amp;goto=item%3Fid%3D41530190'><div class='votearrow' title='upvote'></div></a></center>    </td><td class=\"default\"><div style=\"margin-top:2px; margin-bottom:-10px;\"><span class=\"comhead\">\n          <a href=\"user?id=kitd\" class=\"hnuser\">kitd</a> <span class=\"age\" title=\"2024-09-13T14:34:45.000000Z\"><a href=\"item?id=41531626\">1 day ago</a></span> <span id=\"unv_41531626\"></span>          <span class='navs'>\n             | <a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">prev</a> <a class=\"togg clicky\" id=\"41531626\" n=\"1\" href=\"javascript:void(0)\">[–]</a><span class=\"onstory\"></span>          </span>\n                  </span></div><br><div class=\"comment\">\n                  <div class=\"commtext c00\">Very impressive!</div>\n              <div class='reply'>        <p><font size=\"1\">\n                      <u><a href=\"reply?id=41531626&amp;goto=item%3Fid%3D41530190%2341531626\" rel=\"nofollow\">reply</a></u>\n                  </font>\n      </div></div></td></tr>\n        </table></td></tr>\n            </table>\n  <br><br>\n</td></tr>\n<tr><td><img src=\"s.gif\" height=\"10\" width=\"0\"><table width=\"100%\" cellspacing=\"0\" cellpadding=\"1\"><tr><td bgcolor=\"#ff6600\"></td></tr></table><br>\n<center><span class=\"yclinks\"><a href=\"newsguidelines.html\">Guidelines</a> | <a href=\"newsfaq.html\">FAQ</a> | <a href=\"lists\">Lists</a> | <a href=\"https://github.com/HackerNews/API\">API</a> | <a href=\"security.html\">Security</a> | <a href=\"https://www.ycombinator.com/legal/\">Legal</a> | <a href=\"https://www.ycombinator.com/apply/\">Apply to YC</a> | <a href=\"mailto:hn@ycombinator.com\">Contact</a></span><br><br>\n<form method=\"get\" action=\"//hn.algolia.com/\">Search: <input type=\"text\" name=\"q\" size=\"17\" autocorrect=\"off\" spellcheck=\"false\" autocapitalize=\"off\" autocomplete=\"off\"></form></center></td></tr>      </table></center></body>\n      <script type='text/javascript' src='hn.js?u0LUEXpE1l7JwndlBn23'></script>\n  </html>\n",
  "text": "        Show HN: FlowTracker – Track data flowing through Java programs | Hacker News    Hacker News  new | past | comments | ask | show | jobs | submit   login          Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                       jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply              Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:             Show HN: FlowTracker – Track data flowing through Java programs | Hacker News Show HN: FlowTracker – Track data flowing through Java programs | Hacker News    Hacker News  new | past | comments | ask | show | jobs | submit   login          Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                       jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply              Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:        Hacker News  new | past | comments | ask | show | jobs | submit   login          Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                       jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply              Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:      Hacker News  new | past | comments | ask | show | jobs | submit   login          Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                       jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply              Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:     Hacker News  new | past | comments | ask | show | jobs | submit   login          Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                       jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply              Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:     Hacker News  new | past | comments | ask | show | jobs | submit   login     Hacker News  new | past | comments | ask | show | jobs | submit   login     Hacker News  new | past | comments | ask | show | jobs | submit   login     Hacker News  new | past | comments | ask | show | jobs | submit   login     Hacker News  new | past | comments | ask | show | jobs | submit   login     Hacker News  new | past | comments | ask | show | jobs | submit  Hacker News  new | past | comments | ask | show | jobs | submit  Hacker News Hacker News new past comments ask show jobs submit  login   login  login      Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                       jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply              Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                       jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply              Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                 Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments      FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker                 Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie )     Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie ) Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie ) Show HN: FlowTracker – Track data flowing through Java programs ( github.com/coekie ) github.com/coekie github.com/coekie   275 points by coekie  1 day ago   | hide | past | favorite | 32 comments    275 points by coekie  1 day ago   | hide | past | favorite | 32 comments    275 points by coekie  1 day ago   | hide | past | favorite | 32 comments  275 points coekie 1 day ago 1 day ago hide past favorite 32 comments   FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker FlowTracker, a Java agent that tracks data flowing through Java programs.\nIt helps you understand where any program got its output from, what it means, and why it wrote it. Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker Watch the video or explore the live demo yourself, and read how it works at https://github.com/coekie/flowtracker https://github.com/coekie/flowtracker                                   jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply            jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply            udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply            jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply            jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply            jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply            jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply            ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply            BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply            coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply            Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply            noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply            immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply            actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply            smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply            michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply            hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply            svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply            peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply            coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply            SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply            BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply            apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply            yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply            exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply            hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply            neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply            hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply            KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply            larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply            mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply            kitd  1 day ago    | prev  [–]      Very impressive!    reply            jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply           jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply           jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply          jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply          jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply          jpmonettas  1 day ago    | next  [–]      Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply    jpmonettas  1 day ago    | next  [–]     jpmonettas  1 day ago    | next  [–]    jpmonettas 1 day ago 1 day ago | next  [–]   next [–]  Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo    reply   Cool! I wrote something on the same spirit but for Clojure, called FlowStorm http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo http://www.flow-storm.org/ For instrumentation, instead of an instrumenting agent it uses a fork of the official Clojure compiler (in Clojure you can easily swap compilers at dev) that adds extra bytecode. What is interesting about recording Clojure programs execution is that most values are immutable, so you can snapshot them by just retaining the pointers. Edit: Since the OP demo is about exploring a web app for people interested in this topics I'm leaving a demo of FlowStorm debugging a web app also https://www.youtube.com/watch?v=h8AFpZkAwPo https://www.youtube.com/watch?v=h8AFpZkAwPo   reply    reply    reply  reply reply        udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply           udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply           udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply          udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply          udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply          udkl  1 day ago    | parent | next  [–]      This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply    udkl  1 day ago    | parent | next  [–]     udkl  1 day ago    | parent | next  [–]    udkl 1 day ago 1 day ago | parent | next  [–]   parent next [–]  This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?    reply   This is beautiful! great job! - What was the reason you choose javafx? After you choose fx, did you look at cljfx?   reply    reply    reply  reply reply        jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply           jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply           jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply    jpmonettas  1 day ago    | root | parent | next  [–]     jpmonettas  1 day ago    | root | parent | next  [–]    jpmonettas 1 day ago 1 day ago | root | parent | next  [–]   root parent next [–]  Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.    reply   Thanks! I started with cljfx and then moved to pure javafx, first because it wasn't straight forward for me to understand the performance overhead of cljfx under different scenarios (when using subscriptions and contexts), and second because I want to drag as few dependencies as possible so they don't conflict with debuggee one's.   reply    reply    reply  reply reply        jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply           jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply           jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply          jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply          jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply          jiehong  1 day ago    | parent | prev | next  [–]      Nice! Do you like use data structure metadata for tracking values?    reply    jiehong  1 day ago    | parent | prev | next  [–]     jiehong  1 day ago    | parent | prev | next  [–]    jiehong 1 day ago 1 day ago | parent | prev | next  [–]   parent prev next [–]  Nice! Do you like use data structure metadata for tracking values?    reply   Nice! Do you like use data structure metadata for tracking values? Do you like use data structure metadata for tracking values?   reply    reply    reply  reply reply        jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply           jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply           jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply    jpmonettas  1 day ago    | root | parent | next  [–]     jpmonettas  1 day ago    | root | parent | next  [–]    jpmonettas 1 day ago 1 day ago | root | parent | next  [–]   root parent next [–]  Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics.    reply   Not sure I follow, can expand on that? I gave a presentation on it recently https://www.youtube.com/watch?v=BuSpMvVU7j4 which goes over demos and implementation details if you are interested in those topics. https://www.youtube.com/watch?v=BuSpMvVU7j4   reply    reply    reply  reply reply        jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply           jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply           jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply          jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply          jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply          jiehong  1 day ago    | root | parent | next  [–]      I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply    jiehong  1 day ago    | root | parent | next  [–]     jiehong  1 day ago    | root | parent | next  [–]    jiehong 1 day ago 1 day ago | root | parent | next  [–]   root parent next [–]  I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata    reply   I meant this [0], and so tracking a data via tagging it with a metadata and seeing where it ends up. Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata Thanks for the video, I'm gonna go watch it. [0[: https://clojure.org/reference/metadata https://clojure.org/reference/metadata   reply    reply    reply  reply reply        jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply           jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply           jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply          jpmonettas  1 day ago    | root | parent | next  [–]      So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply    jpmonettas  1 day ago    | root | parent | next  [–]     jpmonettas  1 day ago    | root | parent | next  [–]    jpmonettas 1 day ago 1 day ago | root | parent | next  [–]   root parent next [–]  So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.    reply   So recording in FlowStorm doesn't use Clojure metadata capabilities in any way, it is basically about storing function calls, function returns and the pointers to all expressions intermediate immutable values together with their code coordinates.   reply    reply    reply  reply reply        ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply           ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply           ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply          ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply          ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply          ysleepy  1 day ago    | prev | next  [–]      This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply    ysleepy  1 day ago    | prev | next  [–]     ysleepy  1 day ago    | prev | next  [–]    ysleepy 1 day ago 1 day ago | prev | next  [–]   prev next [–]  This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint    reply   This is incredibly cool. I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint I love how good the tooling is in the java/jvm ecosystem.\nLast time I was this blown away was with jitwatch ( https://github.com/AdoptOpenJDK/jitwatch ) https://github.com/AdoptOpenJDK/jitwatch FlowTracker reminds me a little of taint analysis, which is used for tracking unvalidated user inputs or secrets through a program, making sure it is not leaked or used without validation. search keywords are \"dynamic taint tracking/analysis\" https://github.com/gmu-swe/phosphor https://github.com/gmu-swe/phosphor https://github.com/soot-oss/SootUp https://github.com/soot-oss/SootUp https://github.com/feliam/klee-taint https://github.com/feliam/klee-taint   reply    reply    reply  reply reply        BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply           BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply           BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply          BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply          BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply          BoppreH  1 day ago    | prev | next  [–]      Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply    BoppreH  1 day ago    | prev | next  [–]     BoppreH  1 day ago    | prev | next  [–]    BoppreH 1 day ago 1 day ago | prev | next  [–]   prev next [–]  Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.    reply   Blown away by the demo tracking an HTML element back to the SQL statement that added that value to the database . I can totally see a future where tools like this are the first line of defense when troubleshooting bugs. SQL statement that added that value to the database I can totally see a future where tools like this are the first line of defense when troubleshooting bugs.   reply    reply    reply  reply reply        coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply           coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply           coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply          coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply          coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply          coekie  1 day ago    | parent | next  [–]      Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply    coekie  1 day ago    | parent | next  [–]     coekie  1 day ago    | parent | next  [–]    coekie 1 day ago 1 day ago | parent | next  [–]   parent next [–]  Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish.    reply   Thanks. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish. As I was developing FlowTracker, a lot of the work was driven by making tracking of specific example programs work.\nI knew what result I was aiming for, but it was hard to predict what lower level mechanisms needed to be supported to make a specific example work. That often depended on internal implementation details of the JDK or libraries being used where the data was passing through. But the HTML element linking back to the SQL script that added that data into the database wasn't like that.\nI didn't expect or work towards it, that just happened , so it blew me away a little too and got me excited about what else this approach could accomplish. just happened   reply    reply    reply  reply reply        Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply           Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply           Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply          Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply          Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply          Noumenon72  1 day ago    | root | parent | next  [–]      I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply    Noumenon72  1 day ago    | root | parent | next  [–]     Noumenon72  1 day ago    | root | parent | next  [–]    Noumenon72 1 day ago 1 day ago | root | parent | next  [–]   root parent next [–]  I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.    reply   I didn't make it to that element of the demo because I don't need a tool to help me find which file HTML text strings are from or that HTTP headers come from my web server. So I would recommend putting that \"wow\" element earlier in the demo.   reply    reply    reply  reply reply        noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply           noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply           noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply          noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply          noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply          noisy_boy  23 hours ago    | root | parent | next  [–]      Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply    noisy_boy  23 hours ago    | root | parent | next  [–]     noisy_boy  23 hours ago    | root | parent | next  [–]    noisy_boy 23 hours ago 23 hours ago | root | parent | next  [–]   root parent next [–]  Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.    reply   Or maybe split the demo into shorter demos/gifs where each highlights a specific part. Very cool project, should get more attention.   reply    reply    reply  reply reply        immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply           immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply           immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply          immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply          immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply          immibis  1 day ago    | root | parent | prev | next  [–]      A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply    immibis  1 day ago    | root | parent | prev | next  [–]     immibis  1 day ago    | root | parent | prev | next  [–]    immibis 1 day ago 1 day ago | root | parent | prev | next  [–]   root parent prev next [–]  A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.    reply   A great example of how design of good products should be guided by the end goal instead of by the technical mechanism, when possible.  You went out of your way to make sure the functionality was not limited by a certain single mechanism.   reply    reply    reply  reply reply        actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply           actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply           actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply          actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply          actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply          actionfromafar  1 day ago    | parent | prev | next  [–]      When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply    actionfromafar  1 day ago    | parent | prev | next  [–]     actionfromafar  1 day ago    | parent | prev | next  [–]    actionfromafar 1 day ago 1 day ago | parent | prev | next  [–]   parent prev next [–]  When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.    reply   When you think about it, so many problems could have been prevented and so many business rules could have been easier to express if there was some standard way to track the origins and veracity of data. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better. Maybe also some way to track if the data is meant to be transient or meant to be written back. The more such constraints which could be described up front, the better.   reply    reply    reply  reply reply        smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply           smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply           smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply          smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply          smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply          smartmic  1 day ago    | prev | next  [–]      I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply    smartmic  1 day ago    | prev | next  [–]     smartmic  1 day ago    | prev | next  [–]    smartmic 1 day ago 1 day ago | prev | next  [–]   prev next [–]  I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).    reply   I am not really sure if I get the full picture and how it might be used - but it somehow reminds me of a Smalltalk environment where I can also inspect everything (all are objects and messages and you can trace back and interact with it those).   reply    reply    reply  reply reply        michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply           michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply           michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply          michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply          michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply          michaelmior  1 day ago    | prev | next  [–]      Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply    michaelmior  1 day ago    | prev | next  [–]     michaelmior  1 day ago    | prev | next  [–]    michaelmior 1 day ago 1 day ago | prev | next  [–]   prev next [–]  Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.    reply   Very cool! I love the demo video and I could definitely see how this would be useful when diving into an unfamiliar codebase.   reply    reply    reply  reply reply        hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply           hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply           hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply          hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply          hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply          hoten  1 day ago    | prev | next  [–]      Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply    hoten  1 day ago    | prev | next  [–]     hoten  1 day ago    | prev | next  [–]    hoten 1 day ago 1 day ago | prev | next  [–]   prev next [–]  Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...    reply   Years ago I experimented[1] with a similar concept (wanting something like JavaScript source maps, but for HTML). I didn't manage to find the time to expand on it, but I think web developer tooling would really benefit from this sort of full-stack attribution. Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr... Integration of any solution like this into existing frameworks feels like a big challenge. [1] HTML Source Maps - https://github.com/connorjclark/html-source-maps  https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr... https://github.com/connorjclark/html-source-maps https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...   reply    reply    reply  reply reply        svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply           svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply           svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply          svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply          svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply          svieira  1 day ago    | prev | next  [–]      This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply    svieira  1 day ago    | prev | next  [–]     svieira  1 day ago    | prev | next  [–]    svieira 1 day ago 1 day ago | prev | next  [–]   prev next [–]  This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/    reply   This reminds me (in the best way possible) of the Eve-lang demos of debugging a program by simply asking \"why is <the UI element> not here?\"  Fantastic work! https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/ not https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s and https://witheve.com/ https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s https://witheve.com/   reply    reply    reply  reply reply        peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply           peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply           peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply          peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply          peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply          peterpost2  1 day ago    | prev | next  [–]      If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply    peterpost2  1 day ago    | prev | next  [–]     peterpost2  1 day ago    | prev | next  [–]    peterpost2 1 day ago 1 day ago | prev | next  [–]   prev next [–]  If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?    reply   If I recall  there was a paper on a similar tool that was used for finding SQL-injections dynamically in java programs. Is this the same tool?   reply    reply    reply  reply reply        coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply           coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply           coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply          coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply          coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply          coekie  1 day ago    | parent | next  [–]      No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply    coekie  1 day ago    | parent | next  [–]     coekie  1 day ago    | parent | next  [–]    coekie 1 day ago 1 day ago | parent | next  [–]   parent next [–]  No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.    reply   No, that must have been something different. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach. It would be possible to extend what FlowTracker does to also find SQL (or other) injection vulnerabilities. So it's possible the tool you're thinking of used a similar approach.   reply    reply    reply  reply reply        SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply           SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply           SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply          SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply          SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply          SeriousM  1 day ago    | prev | next  [–]      Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply    SeriousM  1 day ago    | prev | next  [–]     SeriousM  1 day ago    | prev | next  [–]    SeriousM 1 day ago 1 day ago | prev | next  [–]   prev next [–]  Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.    reply   Once I had the vision to track data over the internet, like where came the image from, on which cdn was it.\nOr \"what did this string have seen from creation till it reached my screen\".\nThis is a step into this direction.   reply    reply    reply  reply reply        BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply           BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply           BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply          BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply          BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply          BadJo0Jo0  1 day ago    | prev | next  [–]      Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply    BadJo0Jo0  1 day ago    | prev | next  [–]     BadJo0Jo0  1 day ago    | prev | next  [–]    BadJo0Jo0 1 day ago 1 day ago | prev | next  [–]   prev next [–]  Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.    reply   Thanks for this! Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it. Been trying to get this work with VSCode with a project I'm trying to make sense of. Having to take a pause on it right now, but looking forward to getting it working and playing with it.   reply    reply    reply  reply reply        apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply           apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply           apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply          apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply          apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply          apnew  7 hours ago    | prev | next  [–]      Very very impressive.    reply    apnew  7 hours ago    | prev | next  [–]     apnew  7 hours ago    | prev | next  [–]    apnew 7 hours ago 7 hours ago | prev | next  [–]   prev next [–]  Very very impressive.    reply   Very very impressive.   reply    reply    reply  reply reply        yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply           yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply           yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply          yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply          yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply          yellow_lead  1 day ago    | prev | next  [–]      This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply    yellow_lead  1 day ago    | prev | next  [–]     yellow_lead  1 day ago    | prev | next  [–]    yellow_lead 1 day ago 1 day ago | prev | next  [–]   prev next [–]  This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.    reply   This looks really cool, I think this could have saved me some time hunting bugs when I was working with Spring in the past.   reply    reply    reply  reply reply        exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply           exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply           exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply          exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply          exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply          exabrial  1 day ago    | prev | next  [–]      This is awesome! Reminds me of Java flight recorder!    reply    exabrial  1 day ago    | prev | next  [–]     exabrial  1 day ago    | prev | next  [–]    exabrial 1 day ago 1 day ago | prev | next  [–]   prev next [–]  This is awesome! Reminds me of Java flight recorder!    reply   This is awesome! Reminds me of Java flight recorder!   reply    reply    reply  reply reply        hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply           hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply           hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply          hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply          hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply          hansoolo  1 day ago    | prev | next  [–]      This is pretty cool! Do you think something similar is possible for c#, too?    reply    hansoolo  1 day ago    | prev | next  [–]     hansoolo  1 day ago    | prev | next  [–]    hansoolo 1 day ago 1 day ago | prev | next  [–]   prev next [–]  This is pretty cool! Do you think something similar is possible for c#, too?    reply   This is pretty cool! Do you think something similar is possible for c#, too?   reply    reply    reply  reply reply        neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply           neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply           neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply          neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply          neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply          neonsunset  1 day ago    | parent | next  [–]      There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply    neonsunset  1 day ago    | parent | next  [–]     neonsunset  1 day ago    | parent | next  [–]    neonsunset 1 day ago 1 day ago | parent | next  [–]   parent next [–]  There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.    reply   There's an event system that is integrated into all kinds of bits in the standard library and surrounding ecosystem, which plugs into all kinds of high level tools: dotnet-trace/-monitor/-counters, profiling in VS and Rider, etc. There are also telemetry hooks but I have not looked into them in closer details, supposedly that's what .NET Aspire uses. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there. I think a similar experience can be quickly achieved with tracing in aspire: https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp... It's a bit different but I don't know if anyone made a quick handy GUI tool to hook up to .NET's EventPipe and display its data in a nice way, but the extensive API for that is there.   reply    reply    reply  reply reply        hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply           hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply           hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply          hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply          hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply          hansoolo  14 hours ago    | root | parent | next  [–]      Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply    hansoolo  14 hours ago    | root | parent | next  [–]     hansoolo  14 hours ago    | root | parent | next  [–]    hansoolo 14 hours ago 14 hours ago | root | parent | next  [–]   root parent next [–]  Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.    reply   Thank you. To be honest, I hadn't heard of Aspire before, so TIL. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point. From a quick skim read, it sounds similar in some aspects. And also it's a good starting point.   reply    reply    reply  reply reply        KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply           KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply           KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply          KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply          KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply          KomoD  1 day ago    | prev | next  [–]      That is really cool, really like that there's a browser demo too    reply    KomoD  1 day ago    | prev | next  [–]     KomoD  1 day ago    | prev | next  [–]    KomoD 1 day ago 1 day ago | prev | next  [–]   prev next [–]  That is really cool, really like that there's a browser demo too    reply   That is really cool, really like that there's a browser demo too   reply    reply    reply  reply reply        larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply           larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply           larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply          larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply          larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply          larusso  1 day ago    | prev | next  [–]      Hmm would love to connect this to our gralde builds :)    reply    larusso  1 day ago    | prev | next  [–]     larusso  1 day ago    | prev | next  [–]    larusso 1 day ago 1 day ago | prev | next  [–]   prev next [–]  Hmm would love to connect this to our gralde builds :)    reply   Hmm would love to connect this to our gralde builds :)   reply    reply    reply  reply reply        mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply           mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply           mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply          mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply          mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply          mdaniel  1 day ago    | parent | next  [–]      I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply    mdaniel  1 day ago    | parent | next  [–]     mdaniel  1 day ago    | parent | next  [–]    mdaniel 1 day ago 1 day ago | parent | next  [–]   parent next [–]  I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)    reply   I know you may be tongue-in-cheek but if you're on the .gradle.kts flavor there's a reasonable chance it would work. The Groovy ones are, I suspect, just entirely too dynamic dispatch for it to make any sense (e.g. all flows are from org.groovy.SomeRandoThing and good luck)   reply    reply    reply  reply reply        kitd  1 day ago    | prev  [–]      Very impressive!    reply           kitd  1 day ago    | prev  [–]      Very impressive!    reply           kitd  1 day ago    | prev  [–]      Very impressive!    reply          kitd  1 day ago    | prev  [–]      Very impressive!    reply          kitd  1 day ago    | prev  [–]      Very impressive!    reply          kitd  1 day ago    | prev  [–]      Very impressive!    reply    kitd  1 day ago    | prev  [–]     kitd  1 day ago    | prev  [–]    kitd 1 day ago 1 day ago | prev  [–]   prev [–]  Very impressive!    reply   Very impressive!   reply    reply    reply  reply reply     Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:      Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:     Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact    Search:  Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact Guidelines FAQ Lists API Security Legal Apply to YC Contact Search: ",
  "links": [
    {
      "id": 1,
      "url": "https://news.ycombinator.com/",
      "html": "<a href=\"https://news.ycombinator.com\"><img src=\"y18.svg\" width=\"18\" height=\"18\" style=\"border:1px white solid; display:block\"></a>",
      "text": ""
    },
    {
      "id": 2,
      "url": "https://news.ycombinator.com/news",
      "html": "<a href=\"news\">Hacker News</a>",
      "text": "Hacker News"
    },
    {
      "id": 3,
      "url": "https://news.ycombinator.com/newest",
      "html": "<a href=\"newest\">new</a>",
      "text": "new"
    },
    {
      "id": 4,
      "url": "https://news.ycombinator.com/front",
      "html": "<a href=\"front\">past</a>",
      "text": "past"
    },
    {
      "id": 5,
      "url": "https://news.ycombinator.com/newcomments",
      "html": "<a href=\"newcomments\">comments</a>",
      "text": "comments"
    },
    {
      "id": 6,
      "url": "https://news.ycombinator.com/ask",
      "html": "<a href=\"ask\">ask</a>",
      "text": "ask"
    },
    {
      "id": 7,
      "url": "https://news.ycombinator.com/show",
      "html": "<a href=\"show\">show</a>",
      "text": "show"
    },
    {
      "id": 8,
      "url": "https://news.ycombinator.com/jobs",
      "html": "<a href=\"jobs\">jobs</a>",
      "text": "jobs"
    },
    {
      "id": 9,
      "url": "https://news.ycombinator.com/submit",
      "html": "<a href=\"submit\" rel=\"nofollow\">submit</a>",
      "text": "submit"
    },
    {
      "id": 10,
      "url": "https://news.ycombinator.com/login?goto=item%3Fid%3D41530190",
      "html": "<a href=\"login?goto=item%3Fid%3D41530190\">login</a>",
      "text": "login"
    },
    {
      "id": 11,
      "url": "https://news.ycombinator.com/vote?id=41530190&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41530190\" href=\"vote?id=41530190&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 12,
      "url": "https://github.com/coekie/flowtracker",
      "html": "<a href=\"https://github.com/coekie/flowtracker\">Show HN: FlowTracker – Track data flowing through Java programs</a>",
      "text": "Show HN: FlowTracker – Track data flowing through Java programs"
    },
    {
      "id": 13,
      "url": "https://news.ycombinator.com/from?site=github.com/coekie",
      "html": "<a href=\"from?site=github.com/coekie\"><span class=\"sitestr\">github.com/coekie</span></a>",
      "text": "github.com/coekie"
    },
    {
      "id": 14,
      "url": "https://news.ycombinator.com/user?id=coekie",
      "html": "<a href=\"user?id=coekie\" class=\"hnuser\">coekie</a>",
      "text": "coekie"
    },
    {
      "id": 15,
      "url": "https://news.ycombinator.com/item?id=41530190",
      "html": "<a href=\"item?id=41530190\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 16,
      "url": "https://news.ycombinator.com/hide?id=41530190&goto=item%3Fid%3D41530190",
      "html": "<a href=\"hide?id=41530190&amp;goto=item%3Fid%3D41530190\">hide</a>",
      "text": "hide"
    },
    {
      "id": 17,
      "url": "https://hn.algolia.com/?query=Show%20HN%3A%20FlowTracker%20%E2%80%93%20Track%20data%20flowing%20through%20Java%20programs&type=story&dateRange=all&sort=byDate&storyText=false&prefix&page=0",
      "html": "<a href=\"https://hn.algolia.com/?query=Show%20HN%3A%20FlowTracker%20%E2%80%93%20Track%20data%20flowing%20through%20Java%20programs&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0\" class=\"hnpast\">past</a>",
      "text": "past"
    },
    {
      "id": 18,
      "url": "https://news.ycombinator.com/fave?id=41530190&auth=23c91053f3e536054e0b51cad9d947283b8937d1",
      "html": "<a href=\"fave?id=41530190&amp;auth=23c91053f3e536054e0b51cad9d947283b8937d1\">favorite</a>",
      "text": "favorite"
    },
    {
      "id": 19,
      "url": "https://news.ycombinator.com/item?id=41530190",
      "html": "<a href=\"item?id=41530190\">32&nbsp;comments</a>",
      "text": "32 comments"
    },
    {
      "id": 20,
      "url": "https://github.com/coekie/flowtracker",
      "html": "<a href=\"https://github.com/coekie/flowtracker\">https://github.com/coekie/flowtracker</a>",
      "text": "https://github.com/coekie/flowtracker"
    },
    {
      "id": 21,
      "url": "https://news.ycombinator.com/vote?id=41530692&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41530692\" href=\"vote?id=41530692&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 22,
      "url": "https://news.ycombinator.com/user?id=jpmonettas",
      "html": "<a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a>",
      "text": "jpmonettas"
    },
    {
      "id": 23,
      "url": "https://news.ycombinator.com/item?id=41530692",
      "html": "<a href=\"item?id=41530692\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 24,
      "url": "https://news.ycombinator.com/item?id=41530190#41533337",
      "html": "<a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 25,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41530692\" n=\"7\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 26,
      "url": "http://www.flow-storm.org/",
      "html": "<a href=\"http://www.flow-storm.org/\" rel=\"nofollow\">http://www.flow-storm.org/</a>",
      "text": "http://www.flow-storm.org/"
    },
    {
      "id": 27,
      "url": "https://www.youtube.com/watch?v=h8AFpZkAwPo",
      "html": "<a href=\"https://www.youtube.com/watch?v=h8AFpZkAwPo\" rel=\"nofollow\">https://www.youtube.com/watch?v=h8AFpZkAwPo</a>",
      "text": "https://www.youtube.com/watch?v=h8AFpZkAwPo"
    },
    {
      "id": 28,
      "url": "https://news.ycombinator.com/reply?id=41530692&goto=item%3Fid%3D41530190%2341530692",
      "html": "<a href=\"reply?id=41530692&amp;goto=item%3Fid%3D41530190%2341530692\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 29,
      "url": "https://news.ycombinator.com/vote?id=41533383&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533383\" href=\"vote?id=41533383&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 30,
      "url": "https://news.ycombinator.com/user?id=udkl",
      "html": "<a href=\"user?id=udkl\" class=\"hnuser\">udkl</a>",
      "text": "udkl"
    },
    {
      "id": 31,
      "url": "https://news.ycombinator.com/item?id=41533383",
      "html": "<a href=\"item?id=41533383\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 32,
      "url": "https://news.ycombinator.com/item?id=41530190#41530692",
      "html": "<a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 33,
      "url": "https://news.ycombinator.com/item?id=41530190#41530938",
      "html": "<a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 34,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533383\" n=\"2\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 35,
      "url": "https://news.ycombinator.com/reply?id=41533383&goto=item%3Fid%3D41530190%2341533383",
      "html": "<a href=\"reply?id=41533383&amp;goto=item%3Fid%3D41530190%2341533383\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 36,
      "url": "https://news.ycombinator.com/vote?id=41534187&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41534187\" href=\"vote?id=41534187&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 37,
      "url": "https://news.ycombinator.com/user?id=jpmonettas",
      "html": "<a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a>",
      "text": "jpmonettas"
    },
    {
      "id": 38,
      "url": "https://news.ycombinator.com/item?id=41534187",
      "html": "<a href=\"item?id=41534187\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 39,
      "url": "https://news.ycombinator.com/item?id=41530190#41530692",
      "html": "<a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 40,
      "url": "https://news.ycombinator.com/item?id=41530190#41533383",
      "html": "<a href=\"#41533383\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 41,
      "url": "https://news.ycombinator.com/item?id=41530190#41530938",
      "html": "<a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 42,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41534187\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 43,
      "url": "https://news.ycombinator.com/reply?id=41534187&goto=item%3Fid%3D41530190%2341534187",
      "html": "<a href=\"reply?id=41534187&amp;goto=item%3Fid%3D41530190%2341534187\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 44,
      "url": "https://news.ycombinator.com/vote?id=41530938&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41530938\" href=\"vote?id=41530938&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 45,
      "url": "https://news.ycombinator.com/user?id=jiehong",
      "html": "<a href=\"user?id=jiehong\" class=\"hnuser\">jiehong</a>",
      "text": "jiehong"
    },
    {
      "id": 46,
      "url": "https://news.ycombinator.com/item?id=41530938",
      "html": "<a href=\"item?id=41530938\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 47,
      "url": "https://news.ycombinator.com/item?id=41530190#41530692",
      "html": "<a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 48,
      "url": "https://news.ycombinator.com/item?id=41530190#41533383",
      "html": "<a href=\"#41533383\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 49,
      "url": "https://news.ycombinator.com/item?id=41530190#41533337",
      "html": "<a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 50,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41530938\" n=\"4\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 51,
      "url": "https://news.ycombinator.com/reply?id=41530938&goto=item%3Fid%3D41530190%2341530938",
      "html": "<a href=\"reply?id=41530938&amp;goto=item%3Fid%3D41530190%2341530938\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 52,
      "url": "https://news.ycombinator.com/vote?id=41531102&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531102\" href=\"vote?id=41531102&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 53,
      "url": "https://news.ycombinator.com/user?id=jpmonettas",
      "html": "<a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a>",
      "text": "jpmonettas"
    },
    {
      "id": 54,
      "url": "https://news.ycombinator.com/item?id=41531102",
      "html": "<a href=\"item?id=41531102\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 55,
      "url": "https://news.ycombinator.com/item?id=41530190#41530692",
      "html": "<a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 56,
      "url": "https://news.ycombinator.com/item?id=41530190#41530938",
      "html": "<a href=\"#41530938\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 57,
      "url": "https://news.ycombinator.com/item?id=41530190#41533337",
      "html": "<a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 58,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531102\" n=\"3\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 59,
      "url": "https://www.youtube.com/watch?v=BuSpMvVU7j4",
      "html": "<a href=\"https://www.youtube.com/watch?v=BuSpMvVU7j4\" rel=\"nofollow\">https://www.youtube.com/watch?v=BuSpMvVU7j4</a>",
      "text": "https://www.youtube.com/watch?v=BuSpMvVU7j4"
    },
    {
      "id": 60,
      "url": "https://news.ycombinator.com/reply?id=41531102&goto=item%3Fid%3D41530190%2341531102",
      "html": "<a href=\"reply?id=41531102&amp;goto=item%3Fid%3D41530190%2341531102\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 61,
      "url": "https://news.ycombinator.com/vote?id=41531191&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531191\" href=\"vote?id=41531191&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 62,
      "url": "https://news.ycombinator.com/user?id=jiehong",
      "html": "<a href=\"user?id=jiehong\" class=\"hnuser\">jiehong</a>",
      "text": "jiehong"
    },
    {
      "id": 63,
      "url": "https://news.ycombinator.com/item?id=41531191",
      "html": "<a href=\"item?id=41531191\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 64,
      "url": "https://news.ycombinator.com/item?id=41530190#41530692",
      "html": "<a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 65,
      "url": "https://news.ycombinator.com/item?id=41530190#41531102",
      "html": "<a href=\"#41531102\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 66,
      "url": "https://news.ycombinator.com/item?id=41530190#41533337",
      "html": "<a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 67,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531191\" n=\"2\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 68,
      "url": "https://clojure.org/reference/metadata",
      "html": "<a href=\"https://clojure.org/reference/metadata\" rel=\"nofollow\">https://clojure.org/reference/metadata</a>",
      "text": "https://clojure.org/reference/metadata"
    },
    {
      "id": 69,
      "url": "https://news.ycombinator.com/reply?id=41531191&goto=item%3Fid%3D41530190%2341531191",
      "html": "<a href=\"reply?id=41531191&amp;goto=item%3Fid%3D41530190%2341531191\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 70,
      "url": "https://news.ycombinator.com/vote?id=41531229&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531229\" href=\"vote?id=41531229&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 71,
      "url": "https://news.ycombinator.com/user?id=jpmonettas",
      "html": "<a href=\"user?id=jpmonettas\" class=\"hnuser\">jpmonettas</a>",
      "text": "jpmonettas"
    },
    {
      "id": 72,
      "url": "https://news.ycombinator.com/item?id=41531229",
      "html": "<a href=\"item?id=41531229\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 73,
      "url": "https://news.ycombinator.com/item?id=41530190#41530692",
      "html": "<a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 74,
      "url": "https://news.ycombinator.com/item?id=41530190#41531191",
      "html": "<a href=\"#41531191\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 75,
      "url": "https://news.ycombinator.com/item?id=41530190#41533337",
      "html": "<a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 76,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531229\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 77,
      "url": "https://news.ycombinator.com/reply?id=41531229&goto=item%3Fid%3D41530190%2341531229",
      "html": "<a href=\"reply?id=41531229&amp;goto=item%3Fid%3D41530190%2341531229\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 78,
      "url": "https://news.ycombinator.com/vote?id=41533337&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533337\" href=\"vote?id=41533337&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 79,
      "url": "https://news.ycombinator.com/user?id=ysleepy",
      "html": "<a href=\"user?id=ysleepy\" class=\"hnuser\">ysleepy</a>",
      "text": "ysleepy"
    },
    {
      "id": 80,
      "url": "https://news.ycombinator.com/item?id=41533337",
      "html": "<a href=\"item?id=41533337\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 81,
      "url": "https://news.ycombinator.com/item?id=41530190#41530692",
      "html": "<a href=\"#41530692\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 82,
      "url": "https://news.ycombinator.com/item?id=41530190#41530837",
      "html": "<a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 83,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533337\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 84,
      "url": "https://github.com/AdoptOpenJDK/jitwatch",
      "html": "<a href=\"https://github.com/AdoptOpenJDK/jitwatch\">https://github.com/AdoptOpenJDK/jitwatch</a>",
      "text": "https://github.com/AdoptOpenJDK/jitwatch"
    },
    {
      "id": 85,
      "url": "https://github.com/gmu-swe/phosphor",
      "html": "<a href=\"https://github.com/gmu-swe/phosphor\">https://github.com/gmu-swe/phosphor</a>",
      "text": "https://github.com/gmu-swe/phosphor"
    },
    {
      "id": 86,
      "url": "https://github.com/soot-oss/SootUp",
      "html": "<a href=\"https://github.com/soot-oss/SootUp\">https://github.com/soot-oss/SootUp</a>",
      "text": "https://github.com/soot-oss/SootUp"
    },
    {
      "id": 87,
      "url": "https://github.com/feliam/klee-taint",
      "html": "<a href=\"https://github.com/feliam/klee-taint\">https://github.com/feliam/klee-taint</a>",
      "text": "https://github.com/feliam/klee-taint"
    },
    {
      "id": 88,
      "url": "https://news.ycombinator.com/reply?id=41533337&goto=item%3Fid%3D41530190%2341533337",
      "html": "<a href=\"reply?id=41533337&amp;goto=item%3Fid%3D41530190%2341533337\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 89,
      "url": "https://news.ycombinator.com/vote?id=41530837&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41530837\" href=\"vote?id=41530837&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 90,
      "url": "https://news.ycombinator.com/user?id=BoppreH",
      "html": "<a href=\"user?id=BoppreH\" class=\"hnuser\">BoppreH</a>",
      "text": "BoppreH"
    },
    {
      "id": 91,
      "url": "https://news.ycombinator.com/item?id=41530837",
      "html": "<a href=\"item?id=41530837\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 92,
      "url": "https://news.ycombinator.com/item?id=41530190#41533337",
      "html": "<a href=\"#41533337\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 93,
      "url": "https://news.ycombinator.com/item?id=41530190#41530602",
      "html": "<a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 94,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41530837\" n=\"6\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 95,
      "url": "https://news.ycombinator.com/reply?id=41530837&goto=item%3Fid%3D41530190%2341530837",
      "html": "<a href=\"reply?id=41530837&amp;goto=item%3Fid%3D41530190%2341530837\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 96,
      "url": "https://news.ycombinator.com/vote?id=41531355&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531355\" href=\"vote?id=41531355&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 97,
      "url": "https://news.ycombinator.com/user?id=coekie",
      "html": "<a href=\"user?id=coekie\" class=\"hnuser\">coekie</a>",
      "text": "coekie"
    },
    {
      "id": 98,
      "url": "https://news.ycombinator.com/item?id=41531355",
      "html": "<a href=\"item?id=41531355\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 99,
      "url": "https://news.ycombinator.com/item?id=41530190#41530837",
      "html": "<a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 100,
      "url": "https://news.ycombinator.com/item?id=41530190#41531707",
      "html": "<a href=\"#41531707\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 101,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531355\" n=\"4\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 102,
      "url": "https://news.ycombinator.com/reply?id=41531355&goto=item%3Fid%3D41530190%2341531355",
      "html": "<a href=\"reply?id=41531355&amp;goto=item%3Fid%3D41530190%2341531355\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 103,
      "url": "https://news.ycombinator.com/vote?id=41533349&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533349\" href=\"vote?id=41533349&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 104,
      "url": "https://news.ycombinator.com/user?id=Noumenon72",
      "html": "<a href=\"user?id=Noumenon72\" class=\"hnuser\">Noumenon72</a>",
      "text": "Noumenon72"
    },
    {
      "id": 105,
      "url": "https://news.ycombinator.com/item?id=41533349",
      "html": "<a href=\"item?id=41533349\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 106,
      "url": "https://news.ycombinator.com/item?id=41530190#41530837",
      "html": "<a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 107,
      "url": "https://news.ycombinator.com/item?id=41530190#41531355",
      "html": "<a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 108,
      "url": "https://news.ycombinator.com/item?id=41530190#41532153",
      "html": "<a href=\"#41532153\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 109,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533349\" n=\"2\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 110,
      "url": "https://news.ycombinator.com/reply?id=41533349&goto=item%3Fid%3D41530190%2341533349",
      "html": "<a href=\"reply?id=41533349&amp;goto=item%3Fid%3D41530190%2341533349\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 111,
      "url": "https://news.ycombinator.com/vote?id=41536747&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41536747\" href=\"vote?id=41536747&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 112,
      "url": "https://news.ycombinator.com/user?id=noisy_boy",
      "html": "<a href=\"user?id=noisy_boy\" class=\"hnuser\">noisy_boy</a>",
      "text": "noisy_boy"
    },
    {
      "id": 113,
      "url": "https://news.ycombinator.com/item?id=41536747",
      "html": "<a href=\"item?id=41536747\">23 hours ago</a>",
      "text": "23 hours ago"
    },
    {
      "id": 114,
      "url": "https://news.ycombinator.com/item?id=41530190#41530837",
      "html": "<a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 115,
      "url": "https://news.ycombinator.com/item?id=41530190#41533349",
      "html": "<a href=\"#41533349\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 116,
      "url": "https://news.ycombinator.com/item?id=41530190#41532153",
      "html": "<a href=\"#41532153\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 117,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41536747\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 118,
      "url": "https://news.ycombinator.com/reply?id=41536747&goto=item%3Fid%3D41530190%2341536747",
      "html": "<a href=\"reply?id=41536747&amp;goto=item%3Fid%3D41530190%2341536747\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 119,
      "url": "https://news.ycombinator.com/vote?id=41532153&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41532153\" href=\"vote?id=41532153&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 120,
      "url": "https://news.ycombinator.com/user?id=immibis",
      "html": "<a href=\"user?id=immibis\" class=\"hnuser\">immibis</a>",
      "text": "immibis"
    },
    {
      "id": 121,
      "url": "https://news.ycombinator.com/item?id=41532153",
      "html": "<a href=\"item?id=41532153\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 122,
      "url": "https://news.ycombinator.com/item?id=41530190#41530837",
      "html": "<a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 123,
      "url": "https://news.ycombinator.com/item?id=41530190#41531355",
      "html": "<a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 124,
      "url": "https://news.ycombinator.com/item?id=41530190#41533349",
      "html": "<a href=\"#41533349\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 125,
      "url": "https://news.ycombinator.com/item?id=41530190#41531707",
      "html": "<a href=\"#41531707\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 126,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41532153\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 127,
      "url": "https://news.ycombinator.com/reply?id=41532153&goto=item%3Fid%3D41530190%2341532153",
      "html": "<a href=\"reply?id=41532153&amp;goto=item%3Fid%3D41530190%2341532153\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 128,
      "url": "https://news.ycombinator.com/vote?id=41531707&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531707\" href=\"vote?id=41531707&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 129,
      "url": "https://news.ycombinator.com/user?id=actionfromafar",
      "html": "<a href=\"user?id=actionfromafar\" class=\"hnuser\">actionfromafar</a>",
      "text": "actionfromafar"
    },
    {
      "id": 130,
      "url": "https://news.ycombinator.com/item?id=41531707",
      "html": "<a href=\"item?id=41531707\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 131,
      "url": "https://news.ycombinator.com/item?id=41530190#41530837",
      "html": "<a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 132,
      "url": "https://news.ycombinator.com/item?id=41530190#41531355",
      "html": "<a href=\"#41531355\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 133,
      "url": "https://news.ycombinator.com/item?id=41530190#41530602",
      "html": "<a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 134,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531707\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 135,
      "url": "https://news.ycombinator.com/reply?id=41531707&goto=item%3Fid%3D41530190%2341531707",
      "html": "<a href=\"reply?id=41531707&amp;goto=item%3Fid%3D41530190%2341531707\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 136,
      "url": "https://news.ycombinator.com/vote?id=41530602&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41530602\" href=\"vote?id=41530602&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 137,
      "url": "https://news.ycombinator.com/user?id=smartmic",
      "html": "<a href=\"user?id=smartmic\" class=\"hnuser\">smartmic</a>",
      "text": "smartmic"
    },
    {
      "id": 138,
      "url": "https://news.ycombinator.com/item?id=41530602",
      "html": "<a href=\"item?id=41530602\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 139,
      "url": "https://news.ycombinator.com/item?id=41530190#41530837",
      "html": "<a href=\"#41530837\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 140,
      "url": "https://news.ycombinator.com/item?id=41530190#41530669",
      "html": "<a href=\"#41530669\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 141,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41530602\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 142,
      "url": "https://news.ycombinator.com/reply?id=41530602&goto=item%3Fid%3D41530190%2341530602",
      "html": "<a href=\"reply?id=41530602&amp;goto=item%3Fid%3D41530190%2341530602\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 143,
      "url": "https://news.ycombinator.com/vote?id=41530669&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41530669\" href=\"vote?id=41530669&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 144,
      "url": "https://news.ycombinator.com/user?id=michaelmior",
      "html": "<a href=\"user?id=michaelmior\" class=\"hnuser\">michaelmior</a>",
      "text": "michaelmior"
    },
    {
      "id": 145,
      "url": "https://news.ycombinator.com/item?id=41530669",
      "html": "<a href=\"item?id=41530669\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 146,
      "url": "https://news.ycombinator.com/item?id=41530190#41530602",
      "html": "<a href=\"#41530602\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 147,
      "url": "https://news.ycombinator.com/item?id=41530190#41533252",
      "html": "<a href=\"#41533252\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 148,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41530669\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 149,
      "url": "https://news.ycombinator.com/reply?id=41530669&goto=item%3Fid%3D41530190%2341530669",
      "html": "<a href=\"reply?id=41530669&amp;goto=item%3Fid%3D41530190%2341530669\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 150,
      "url": "https://news.ycombinator.com/vote?id=41533252&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533252\" href=\"vote?id=41533252&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 151,
      "url": "https://news.ycombinator.com/user?id=hoten",
      "html": "<a href=\"user?id=hoten\" class=\"hnuser\">hoten</a>",
      "text": "hoten"
    },
    {
      "id": 152,
      "url": "https://news.ycombinator.com/item?id=41533252",
      "html": "<a href=\"item?id=41533252\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 153,
      "url": "https://news.ycombinator.com/item?id=41530190#41530669",
      "html": "<a href=\"#41530669\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 154,
      "url": "https://news.ycombinator.com/item?id=41530190#41533526",
      "html": "<a href=\"#41533526\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 155,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533252\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 156,
      "url": "https://github.com/connorjclark/html-source-maps",
      "html": "<a href=\"https://github.com/connorjclark/html-source-maps\">https://github.com/connorjclark/html-source-maps</a>",
      "text": "https://github.com/connorjclark/html-source-maps"
    },
    {
      "id": 157,
      "url": "https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9NfkrPZ8r_irDb2C1mI1lqIQ/edit",
      "html": "<a href=\"https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9NfkrPZ8r_irDb2C1mI1lqIQ/edit\" rel=\"nofollow\">https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr...</a>",
      "text": "https://docs.google.com/document/d/19XYWiPL9h9vA6QcOrGV9Nfkr..."
    },
    {
      "id": 158,
      "url": "https://news.ycombinator.com/reply?id=41533252&goto=item%3Fid%3D41530190%2341533252",
      "html": "<a href=\"reply?id=41533252&amp;goto=item%3Fid%3D41530190%2341533252\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 159,
      "url": "https://news.ycombinator.com/vote?id=41533526&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533526\" href=\"vote?id=41533526&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 160,
      "url": "https://news.ycombinator.com/user?id=svieira",
      "html": "<a href=\"user?id=svieira\" class=\"hnuser\">svieira</a>",
      "text": "svieira"
    },
    {
      "id": 161,
      "url": "https://news.ycombinator.com/item?id=41533526",
      "html": "<a href=\"item?id=41533526\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 162,
      "url": "https://news.ycombinator.com/item?id=41530190#41533252",
      "html": "<a href=\"#41533252\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 163,
      "url": "https://news.ycombinator.com/item?id=41530190#41532291",
      "html": "<a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 164,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533526\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 165,
      "url": "https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s",
      "html": "<a href=\"https://www.youtube.com/watch?v=TWAMr72VaaU&amp;t=164s\" rel=\"nofollow\">https://www.youtube.com/watch?v=TWAMr72VaaU&amp;t=164s</a>",
      "text": "https://www.youtube.com/watch?v=TWAMr72VaaU&t=164s"
    },
    {
      "id": 166,
      "url": "https://witheve.com/",
      "html": "<a href=\"https://witheve.com/\" rel=\"nofollow\">https://witheve.com/</a>",
      "text": "https://witheve.com/"
    },
    {
      "id": 167,
      "url": "https://news.ycombinator.com/reply?id=41533526&goto=item%3Fid%3D41530190%2341533526",
      "html": "<a href=\"reply?id=41533526&amp;goto=item%3Fid%3D41530190%2341533526\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 168,
      "url": "https://news.ycombinator.com/vote?id=41532291&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41532291\" href=\"vote?id=41532291&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 169,
      "url": "https://news.ycombinator.com/user?id=peterpost2",
      "html": "<a href=\"user?id=peterpost2\" class=\"hnuser\">peterpost2</a>",
      "text": "peterpost2"
    },
    {
      "id": 170,
      "url": "https://news.ycombinator.com/item?id=41532291",
      "html": "<a href=\"item?id=41532291\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 171,
      "url": "https://news.ycombinator.com/item?id=41530190#41533526",
      "html": "<a href=\"#41533526\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 172,
      "url": "https://news.ycombinator.com/item?id=41530190#41533368",
      "html": "<a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 173,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41532291\" n=\"2\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 174,
      "url": "https://news.ycombinator.com/reply?id=41532291&goto=item%3Fid%3D41530190%2341532291",
      "html": "<a href=\"reply?id=41532291&amp;goto=item%3Fid%3D41530190%2341532291\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 175,
      "url": "https://news.ycombinator.com/vote?id=41532522&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41532522\" href=\"vote?id=41532522&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 176,
      "url": "https://news.ycombinator.com/user?id=coekie",
      "html": "<a href=\"user?id=coekie\" class=\"hnuser\">coekie</a>",
      "text": "coekie"
    },
    {
      "id": 177,
      "url": "https://news.ycombinator.com/item?id=41532522",
      "html": "<a href=\"item?id=41532522\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 178,
      "url": "https://news.ycombinator.com/item?id=41530190#41532291",
      "html": "<a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 179,
      "url": "https://news.ycombinator.com/item?id=41530190#41533368",
      "html": "<a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 180,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41532522\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 181,
      "url": "https://news.ycombinator.com/reply?id=41532522&goto=item%3Fid%3D41530190%2341532522",
      "html": "<a href=\"reply?id=41532522&amp;goto=item%3Fid%3D41530190%2341532522\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 182,
      "url": "https://news.ycombinator.com/vote?id=41533368&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533368\" href=\"vote?id=41533368&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 183,
      "url": "https://news.ycombinator.com/user?id=SeriousM",
      "html": "<a href=\"user?id=SeriousM\" class=\"hnuser\">SeriousM</a>",
      "text": "SeriousM"
    },
    {
      "id": 184,
      "url": "https://news.ycombinator.com/item?id=41533368",
      "html": "<a href=\"item?id=41533368\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 185,
      "url": "https://news.ycombinator.com/item?id=41530190#41532291",
      "html": "<a href=\"#41532291\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 186,
      "url": "https://news.ycombinator.com/item?id=41530190#41531811",
      "html": "<a href=\"#41531811\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 187,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533368\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 188,
      "url": "https://news.ycombinator.com/reply?id=41533368&goto=item%3Fid%3D41530190%2341533368",
      "html": "<a href=\"reply?id=41533368&amp;goto=item%3Fid%3D41530190%2341533368\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 189,
      "url": "https://news.ycombinator.com/vote?id=41531811&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531811\" href=\"vote?id=41531811&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 190,
      "url": "https://news.ycombinator.com/user?id=BadJo0Jo0",
      "html": "<a href=\"user?id=BadJo0Jo0\" class=\"hnuser\">BadJo0Jo0</a>",
      "text": "BadJo0Jo0"
    },
    {
      "id": 191,
      "url": "https://news.ycombinator.com/item?id=41531811",
      "html": "<a href=\"item?id=41531811\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 192,
      "url": "https://news.ycombinator.com/item?id=41530190#41533368",
      "html": "<a href=\"#41533368\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 193,
      "url": "https://news.ycombinator.com/item?id=41530190#41541090",
      "html": "<a href=\"#41541090\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 194,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531811\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 195,
      "url": "https://news.ycombinator.com/reply?id=41531811&goto=item%3Fid%3D41530190%2341531811",
      "html": "<a href=\"reply?id=41531811&amp;goto=item%3Fid%3D41530190%2341531811\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 196,
      "url": "https://news.ycombinator.com/vote?id=41541090&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41541090\" href=\"vote?id=41541090&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 197,
      "url": "https://news.ycombinator.com/user?id=apnew",
      "html": "<a href=\"user?id=apnew\" class=\"hnuser\">apnew</a>",
      "text": "apnew"
    },
    {
      "id": 198,
      "url": "https://news.ycombinator.com/item?id=41541090",
      "html": "<a href=\"item?id=41541090\">7 hours ago</a>",
      "text": "7 hours ago"
    },
    {
      "id": 199,
      "url": "https://news.ycombinator.com/item?id=41530190#41531811",
      "html": "<a href=\"#41531811\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 200,
      "url": "https://news.ycombinator.com/item?id=41530190#41533120",
      "html": "<a href=\"#41533120\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 201,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41541090\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 202,
      "url": "https://news.ycombinator.com/reply?id=41541090&goto=item%3Fid%3D41530190%2341541090",
      "html": "<a href=\"reply?id=41541090&amp;goto=item%3Fid%3D41530190%2341541090\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 203,
      "url": "https://news.ycombinator.com/vote?id=41533120&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533120\" href=\"vote?id=41533120&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 204,
      "url": "https://news.ycombinator.com/user?id=yellow_lead",
      "html": "<a href=\"user?id=yellow_lead\" class=\"hnuser\">yellow_lead</a>",
      "text": "yellow_lead"
    },
    {
      "id": 205,
      "url": "https://news.ycombinator.com/item?id=41533120",
      "html": "<a href=\"item?id=41533120\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 206,
      "url": "https://news.ycombinator.com/item?id=41530190#41541090",
      "html": "<a href=\"#41541090\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 207,
      "url": "https://news.ycombinator.com/item?id=41530190#41530800",
      "html": "<a href=\"#41530800\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 208,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533120\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 209,
      "url": "https://news.ycombinator.com/reply?id=41533120&goto=item%3Fid%3D41530190%2341533120",
      "html": "<a href=\"reply?id=41533120&amp;goto=item%3Fid%3D41530190%2341533120\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 210,
      "url": "https://news.ycombinator.com/vote?id=41530800&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41530800\" href=\"vote?id=41530800&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 211,
      "url": "https://news.ycombinator.com/user?id=exabrial",
      "html": "<a href=\"user?id=exabrial\" class=\"hnuser\">exabrial</a>",
      "text": "exabrial"
    },
    {
      "id": 212,
      "url": "https://news.ycombinator.com/item?id=41530800",
      "html": "<a href=\"item?id=41530800\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 213,
      "url": "https://news.ycombinator.com/item?id=41530190#41533120",
      "html": "<a href=\"#41533120\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 214,
      "url": "https://news.ycombinator.com/item?id=41530190#41533415",
      "html": "<a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 215,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41530800\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 216,
      "url": "https://news.ycombinator.com/reply?id=41530800&goto=item%3Fid%3D41530190%2341530800",
      "html": "<a href=\"reply?id=41530800&amp;goto=item%3Fid%3D41530190%2341530800\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 217,
      "url": "https://news.ycombinator.com/vote?id=41533415&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533415\" href=\"vote?id=41533415&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 218,
      "url": "https://news.ycombinator.com/user?id=hansoolo",
      "html": "<a href=\"user?id=hansoolo\" class=\"hnuser\">hansoolo</a>",
      "text": "hansoolo"
    },
    {
      "id": 219,
      "url": "https://news.ycombinator.com/item?id=41533415",
      "html": "<a href=\"item?id=41533415\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 220,
      "url": "https://news.ycombinator.com/item?id=41530190#41530800",
      "html": "<a href=\"#41530800\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 221,
      "url": "https://news.ycombinator.com/item?id=41530190#41533905",
      "html": "<a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 222,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533415\" n=\"3\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 223,
      "url": "https://news.ycombinator.com/reply?id=41533415&goto=item%3Fid%3D41530190%2341533415",
      "html": "<a href=\"reply?id=41533415&amp;goto=item%3Fid%3D41530190%2341533415\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 224,
      "url": "https://news.ycombinator.com/vote?id=41534434&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41534434\" href=\"vote?id=41534434&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 225,
      "url": "https://news.ycombinator.com/user?id=neonsunset",
      "html": "<a href=\"user?id=neonsunset\" class=\"hnuser\">neonsunset</a>",
      "text": "neonsunset"
    },
    {
      "id": 226,
      "url": "https://news.ycombinator.com/item?id=41534434",
      "html": "<a href=\"item?id=41534434\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 227,
      "url": "https://news.ycombinator.com/item?id=41530190#41533415",
      "html": "<a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 228,
      "url": "https://news.ycombinator.com/item?id=41530190#41533905",
      "html": "<a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 229,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41534434\" n=\"2\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 230,
      "url": "https://devblogs.microsoft.com/dotnet/introducing-dotnet-aspire-simplifying-cloud-native-development-with-dotnet-8/#observability",
      "html": "<a href=\"https://devblogs.microsoft.com/dotnet/introducing-dotnet-aspire-simplifying-cloud-native-development-with-dotnet-8/#observability\" rel=\"nofollow\">https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp...</a>",
      "text": "https://devblogs.microsoft.com/dotnet/introducing-dotnet-asp..."
    },
    {
      "id": 231,
      "url": "https://news.ycombinator.com/reply?id=41534434&goto=item%3Fid%3D41530190%2341534434",
      "html": "<a href=\"reply?id=41534434&amp;goto=item%3Fid%3D41530190%2341534434\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 232,
      "url": "https://news.ycombinator.com/vote?id=41538723&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41538723\" href=\"vote?id=41538723&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 233,
      "url": "https://news.ycombinator.com/user?id=hansoolo",
      "html": "<a href=\"user?id=hansoolo\" class=\"hnuser\">hansoolo</a>",
      "text": "hansoolo"
    },
    {
      "id": 234,
      "url": "https://news.ycombinator.com/item?id=41538723",
      "html": "<a href=\"item?id=41538723\">14 hours ago</a>",
      "text": "14 hours ago"
    },
    {
      "id": 235,
      "url": "https://news.ycombinator.com/item?id=41530190#41533415",
      "html": "<a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">root</a>",
      "text": "root"
    },
    {
      "id": 236,
      "url": "https://news.ycombinator.com/item?id=41530190#41534434",
      "html": "<a href=\"#41534434\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 237,
      "url": "https://news.ycombinator.com/item?id=41530190#41533905",
      "html": "<a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 238,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41538723\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 239,
      "url": "https://news.ycombinator.com/reply?id=41538723&goto=item%3Fid%3D41530190%2341538723",
      "html": "<a href=\"reply?id=41538723&amp;goto=item%3Fid%3D41530190%2341538723\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 240,
      "url": "https://news.ycombinator.com/vote?id=41533905&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41533905\" href=\"vote?id=41533905&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 241,
      "url": "https://news.ycombinator.com/user?id=KomoD",
      "html": "<a href=\"user?id=KomoD\" class=\"hnuser\">KomoD</a>",
      "text": "KomoD"
    },
    {
      "id": 242,
      "url": "https://news.ycombinator.com/item?id=41533905",
      "html": "<a href=\"item?id=41533905\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 243,
      "url": "https://news.ycombinator.com/item?id=41530190#41533415",
      "html": "<a href=\"#41533415\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 244,
      "url": "https://news.ycombinator.com/item?id=41530190#41531068",
      "html": "<a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 245,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41533905\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 246,
      "url": "https://news.ycombinator.com/reply?id=41533905&goto=item%3Fid%3D41530190%2341533905",
      "html": "<a href=\"reply?id=41533905&amp;goto=item%3Fid%3D41530190%2341533905\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 247,
      "url": "https://news.ycombinator.com/vote?id=41531068&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531068\" href=\"vote?id=41531068&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 248,
      "url": "https://news.ycombinator.com/user?id=larusso",
      "html": "<a href=\"user?id=larusso\" class=\"hnuser\">larusso</a>",
      "text": "larusso"
    },
    {
      "id": 249,
      "url": "https://news.ycombinator.com/item?id=41531068",
      "html": "<a href=\"item?id=41531068\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 250,
      "url": "https://news.ycombinator.com/item?id=41530190#41533905",
      "html": "<a href=\"#41533905\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 251,
      "url": "https://news.ycombinator.com/item?id=41530190#41531626",
      "html": "<a href=\"#41531626\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 252,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531068\" n=\"2\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 253,
      "url": "https://news.ycombinator.com/reply?id=41531068&goto=item%3Fid%3D41530190%2341531068",
      "html": "<a href=\"reply?id=41531068&amp;goto=item%3Fid%3D41530190%2341531068\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 254,
      "url": "https://news.ycombinator.com/vote?id=41532688&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41532688\" href=\"vote?id=41532688&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 255,
      "url": "https://news.ycombinator.com/user?id=mdaniel",
      "html": "<a href=\"user?id=mdaniel\" class=\"hnuser\">mdaniel</a>",
      "text": "mdaniel"
    },
    {
      "id": 256,
      "url": "https://news.ycombinator.com/item?id=41532688",
      "html": "<a href=\"item?id=41532688\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 257,
      "url": "https://news.ycombinator.com/item?id=41530190#41531068",
      "html": "<a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">parent</a>",
      "text": "parent"
    },
    {
      "id": 258,
      "url": "https://news.ycombinator.com/item?id=41530190#41531626",
      "html": "<a href=\"#41531626\" class=\"clicky\" aria-hidden=\"true\">next</a>",
      "text": "next"
    },
    {
      "id": 259,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41532688\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 260,
      "url": "https://news.ycombinator.com/reply?id=41532688&goto=item%3Fid%3D41530190%2341532688",
      "html": "<a href=\"reply?id=41532688&amp;goto=item%3Fid%3D41530190%2341532688\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 261,
      "url": "https://news.ycombinator.com/vote?id=41531626&how=up&goto=item%3Fid%3D41530190",
      "html": "<a id=\"up_41531626\" href=\"vote?id=41531626&amp;how=up&amp;goto=item%3Fid%3D41530190\"><div class=\"votearrow\" title=\"upvote\"></div></a>",
      "text": ""
    },
    {
      "id": 262,
      "url": "https://news.ycombinator.com/user?id=kitd",
      "html": "<a href=\"user?id=kitd\" class=\"hnuser\">kitd</a>",
      "text": "kitd"
    },
    {
      "id": 263,
      "url": "https://news.ycombinator.com/item?id=41531626",
      "html": "<a href=\"item?id=41531626\">1 day ago</a>",
      "text": "1 day ago"
    },
    {
      "id": 264,
      "url": "https://news.ycombinator.com/item?id=41530190#41531068",
      "html": "<a href=\"#41531068\" class=\"clicky\" aria-hidden=\"true\">prev</a>",
      "text": "prev"
    },
    {
      "id": 265,
      "url": "javascript:void(0)",
      "html": "<a class=\"togg clicky\" id=\"41531626\" n=\"1\" href=\"javascript:void(0)\">[–]</a>",
      "text": "[–]"
    },
    {
      "id": 266,
      "url": "https://news.ycombinator.com/reply?id=41531626&goto=item%3Fid%3D41530190%2341531626",
      "html": "<a href=\"reply?id=41531626&amp;goto=item%3Fid%3D41530190%2341531626\" rel=\"nofollow\">reply</a>",
      "text": "reply"
    },
    {
      "id": 267,
      "url": "https://news.ycombinator.com/newsguidelines.html",
      "html": "<a href=\"newsguidelines.html\">Guidelines</a>",
      "text": "Guidelines"
    },
    {
      "id": 268,
      "url": "https://news.ycombinator.com/newsfaq.html",
      "html": "<a href=\"newsfaq.html\">FAQ</a>",
      "text": "FAQ"
    },
    {
      "id": 269,
      "url": "https://news.ycombinator.com/lists",
      "html": "<a href=\"lists\">Lists</a>",
      "text": "Lists"
    },
    {
      "id": 270,
      "url": "https://github.com/HackerNews/API",
      "html": "<a href=\"https://github.com/HackerNews/API\">API</a>",
      "text": "API"
    },
    {
      "id": 271,
      "url": "https://news.ycombinator.com/security.html",
      "html": "<a href=\"security.html\">Security</a>",
      "text": "Security"
    },
    {
      "id": 272,
      "url": "https://www.ycombinator.com/legal/",
      "html": "<a href=\"https://www.ycombinator.com/legal/\">Legal</a>",
      "text": "Legal"
    },
    {
      "id": 273,
      "url": "https://www.ycombinator.com/apply/",
      "html": "<a href=\"https://www.ycombinator.com/apply/\">Apply to YC</a>",
      "text": "Apply to YC"
    },
    {
      "id": 274,
      "url": "mailto:hn@ycombinator.com",
      "html": "<a href=\"mailto:hn@ycombinator.com\">Contact</a>",
      "text": "Contact"
    }
  ],
  "resp": {
    "url": "https://news.ycombinator.com/item?id=41530190",
    "status": 200,
    "statusText": "OK",
    "headers": {
      "cache-control": "private; max-age=0",
      "connection": "keep-alive",
      "content-encoding": "gzip",
      "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ https://cdnjs.cloudflare.com/; frame-src 'self' https://www.google.com/recaptcha/; style-src 'self' 'unsafe-inline'; img-src 'self' https://account.ycombinator.com; frame-ancestors 'self'",
      "content-type": "text/html; charset=utf-8",
      "date": "Sun, 15 Sep 2024 00:45:37 GMT",
      "referrer-policy": "origin",
      "server": "nginx",
      "strict-transport-security": "max-age=31556900",
      "transfer-encoding": "chunked",
      "vary": "Accept-Encoding",
      "x-content-type-options": "nosniff",
      "x-frame-options": "DENY",
      "x-xss-protection": "1; mode=block"
    }
  },
  "contentType": "text/html",
  "req": {
    "url": "https://news.ycombinator.com/item?id=41530190"
  }
}