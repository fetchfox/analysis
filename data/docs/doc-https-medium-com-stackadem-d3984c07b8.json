{
  "url": "https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30?gi=da69aaf03284&source=topic_portal_recommended_stories------backend---1-107----------backend----------9b0ff235_7ba9_4567_be8a_1f42936dd1f9-------",
  "body": "<!doctype html><html lang=\"en\"><head><title data-rh=\"true\">The Ultimate Golang Framework for Microservices: GoFr | by Mundhraumang | Stackademic</title><meta data-rh=\"true\" charset=\"utf-8\"/><meta data-rh=\"true\" name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1\"/><meta data-rh=\"true\" name=\"theme-color\" content=\"#000000\"/><meta data-rh=\"true\" name=\"twitter:app:name:iphone\" content=\"Medium\"/><meta data-rh=\"true\" name=\"twitter:app:id:iphone\" content=\"828256236\"/><meta data-rh=\"true\" property=\"al:ios:app_name\" content=\"Medium\"/><meta data-rh=\"true\" property=\"al:ios:app_store_id\" content=\"828256236\"/><meta data-rh=\"true\" property=\"al:android:package\" content=\"com.medium.reader\"/><meta data-rh=\"true\" property=\"fb:app_id\" content=\"542599432471018\"/><meta data-rh=\"true\" property=\"og:site_name\" content=\"Medium\"/><meta data-rh=\"true\" property=\"og:type\" content=\"article\"/><meta data-rh=\"true\" property=\"article:published_time\" content=\"2024-07-10T07:24:47.939Z\"/><meta data-rh=\"true\" name=\"title\" content=\"The Ultimate Golang Framework for Microservices: GoFr | by Mundhraumang | Stackademic\"/><meta data-rh=\"true\" property=\"og:title\" content=\"The Ultimate Golang Framework for Microservices: GoFr\"/><meta data-rh=\"true\" property=\"al:android:url\" content=\"medium://p/eb4071cded30\"/><meta data-rh=\"true\" property=\"al:ios:url\" content=\"medium://p/eb4071cded30\"/><meta data-rh=\"true\" property=\"al:android:app_name\" content=\"Medium\"/><meta data-rh=\"true\" name=\"description\" content=\"Discover GoFr, the ultimate Golang framework for microservices. Learn about its powerful features, ease of use, and optimal performance compared to other frameworks\"/><meta data-rh=\"true\" property=\"og:description\" content=\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of…\"/><meta data-rh=\"true\" property=\"og:url\" content=\"https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"/><meta data-rh=\"true\" property=\"al:web:url\" content=\"https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"/><meta data-rh=\"true\" property=\"og:image\" content=\"https://miro.medium.com/v2/resize:fit:1200/1*E-Fpb9HhcKKlz6W7AsW2LA.png\"/><meta data-rh=\"true\" property=\"article:author\" content=\"https://medium.com/@mundhraumang.02\"/><meta data-rh=\"true\" name=\"author\" content=\"Mundhraumang\"/><meta data-rh=\"true\" name=\"robots\" content=\"index,noarchive,follow,max-image-preview:large\"/><meta data-rh=\"true\" name=\"referrer\" content=\"unsafe-url\"/><meta data-rh=\"true\" property=\"twitter:title\" content=\"The Ultimate Golang Framework for Microservices: GoFr\"/><meta data-rh=\"true\" name=\"twitter:site\" content=\"@stackademichq\"/><meta data-rh=\"true\" name=\"twitter:app:url:iphone\" content=\"medium://p/eb4071cded30\"/><meta data-rh=\"true\" property=\"twitter:description\" content=\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of…\"/><meta data-rh=\"true\" name=\"twitter:image:src\" content=\"https://miro.medium.com/v2/resize:fit:1200/1*E-Fpb9HhcKKlz6W7AsW2LA.png\"/><meta data-rh=\"true\" name=\"twitter:card\" content=\"summary_large_image\"/><meta data-rh=\"true\" name=\"twitter:label1\" content=\"Reading time\"/><meta data-rh=\"true\" name=\"twitter:data1\" content=\"8 min read\"/><link data-rh=\"true\" rel=\"icon\" href=\"https://miro.medium.com/v2/resize:fill:256:256/1*PHy3rMit8grpdoTXxC9aaw.png\"/><link data-rh=\"true\" rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"Medium\" href=\"/osd.xml\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"https://miro.medium.com/v2/resize:fill:304:304/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"https://miro.medium.com/v2/resize:fill:240:240/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"https://miro.medium.com/v2/resize:fill:152:152/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"https://miro.medium.com/v2/resize:fill:120:120/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"mask-icon\" href=\"https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png\" color=\"#171717\"/><link data-rh=\"true\" id=\"glyph_preload_link\" rel=\"preload\" as=\"style\" type=\"text/css\" href=\"https://glyph.medium.com/css/unbound.css\"/><link data-rh=\"true\" id=\"glyph_link\" rel=\"stylesheet\" type=\"text/css\" href=\"https://glyph.medium.com/css/unbound.css\"/><link data-rh=\"true\" rel=\"author\" href=\"https://medium.com/@mundhraumang.02\"/><link data-rh=\"true\" rel=\"canonical\" href=\"https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"/><link data-rh=\"true\" rel=\"alternate\" href=\"android-app://com.medium.reader/https/medium.com/p/eb4071cded30\"/><script data-rh=\"true\" type=\"application/ld+json\">{\"@context\":\"http:\\u002F\\u002Fschema.org\",\"@type\":\"NewsArticle\",\"image\":[\"https:\\u002F\\u002Fmiro.medium.com\\u002Fv2\\u002Fresize:fit:1200\\u002F1*E-Fpb9HhcKKlz6W7AsW2LA.png\"],\"url\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"dateCreated\":\"2024-07-09T14:00:02.981Z\",\"datePublished\":\"2024-07-09T14:00:02.981Z\",\"dateModified\":\"2024-07-15T16:26:38.814Z\",\"headline\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"name\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"description\":\"Discover GoFr, the ultimate Golang framework for microservices. Learn about its powerful features, ease of use, and optimal performance compared to other frameworks\",\"identifier\":\"eb4071cded30\",\"author\":{\"@type\":\"Person\",\"name\":\"Mundhraumang\",\"url\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002F@mundhraumang.02\"},\"creator\":[\"Mundhraumang\"],\"publisher\":{\"@type\":\"Organization\",\"name\":\"Stackademic\",\"url\":\"blog.stackademic.com\",\"logo\":{\"@type\":\"ImageObject\",\"width\":60,\"height\":60,\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fv2\\u002Fresize:fit:120\\u002F1*U-kjsW7IZUobnoy1gAp1UQ.png\"}},\"mainEntityOfPage\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"}</script><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"STATIC\">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden=\"true\"]{visibility:hidden;pointer-events:none}.grecaptcha-badge{visibility:hidden}\n/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;\n}/* Gray DOCTYPE selectors like WebKit */\n.xml .hljs-meta {color: #c0c0c0;\n}.hljs-comment,\n.hljs-quote {color: #007400;\n}.hljs-tag,\n.hljs-attribute,\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-literal,\n.hljs-name {color: #aa0d91;\n}.hljs-variable,\n.hljs-template-variable {color: #3F6E74;\n}.hljs-code,\n.hljs-string,\n.hljs-meta .hljs-string {color: #c41a16;\n}.hljs-regexp,\n.hljs-link {color: #0E0EFF;\n}.hljs-title,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-number {color: #1c00cf;\n}.hljs-section,\n.hljs-meta {color: #643820;\n}.hljs-title.class_,\n.hljs-class .hljs-title,\n.hljs-type,\n.hljs-built_in,\n.hljs-params {color: #5c2699;\n}.hljs-attr {color: #836C28;\n}.hljs-subst {color: #000;\n}.hljs-formula {background-color: #eee;font-style: italic;\n}.hljs-addition {background-color: #baeeba;\n}.hljs-deletion {background-color: #ffc8bd;\n}.hljs-selector-id,\n.hljs-selector-class {color: #9b703f;\n}.hljs-doctag,\n.hljs-strong {font-weight: bold;\n}.hljs-emphasis {font-style: italic;\n}\n</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"KEYFRAME\">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{width:auto}.av path{fill:#242424}.aw{height:25px}.ax{margin-left:16px}.ay{border:none}.az{border-radius:20px}.ba{width:240px}.bb{background:#F9F9F9}.bc path{fill:#6B6B6B}.be{outline:none}.bf{font-family:sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif}.bg{font-size:14px}.bh{width:100%}.bi{padding:10px 20px 10px 0}.bj{background-color:transparent}.bk{color:#242424}.bl::placeholder{color:#6B6B6B}.bm{display:inline-block}.bn{margin-left:12px}.bo{margin-right:12px}.bp{border-radius:4px}.bq{margin-left:24px}.br{height:24px}.bx{background-color:#F9F9F9}.by{border-radius:50%}.bz{height:32px}.ca{width:32px}.cb{justify-content:center}.ch{max-width:680px}.ci{min-width:0}.cj{animation:k1 1.2s ease-in-out infinite}.ck{height:100vh}.cl{margin-bottom:16px}.cm{margin-top:48px}.cn{align-items:flex-start}.co{flex-direction:column}.cp{justify-content:space-between}.cq{margin-bottom:24px}.cw{width:80%}.cx{background-color:#F2F2F2}.dd{height:44px}.de{width:44px}.df{margin:auto 0}.dg{margin-bottom:4px}.dh{height:16px}.di{width:120px}.dj{width:80px}.dp{margin-bottom:8px}.dq{width:96%}.dr{width:98%}.ds{width:81%}.dt{margin-left:8px}.du{color:#6B6B6B}.dv{font-size:13px}.dw{height:100%}.ep{color:#FFFFFF}.eq{fill:#FFFFFF}.er{background:#1A8917}.es{border-color:#1A8917}.ew:disabled{cursor:inherit !important}.ex:disabled{opacity:0.3}.ey:disabled:hover{background:#1A8917}.ez:disabled:hover{border-color:#1A8917}.fa{border-radius:99em}.fb{border-width:1px}.fc{border-style:solid}.fd{box-sizing:border-box}.fe{text-decoration:none}.ff{text-align:center}.fi{margin-right:32px}.fj{position:relative}.fk{fill:#6B6B6B}.fn{background:transparent}.fo svg{margin-left:4px}.fp svg{fill:#6B6B6B}.fr{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.fs{position:absolute}.fz{margin:0 24px}.gd{background:rgba(255, 255, 255, 1)}.ge{border:1px solid #F2F2F2}.gf{box-shadow:0 1px 4px #F2F2F2}.gg{max-height:100vh}.gh{overflow-y:auto}.gi{left:0}.gj{top:calc(100vh + 100px)}.gk{bottom:calc(100vh + 100px)}.gl{width:10px}.gm{pointer-events:none}.gn{word-break:break-word}.go{word-wrap:break-word}.gp:after{display:block}.gq:after{content:\"\"}.gr:after{clear:both}.gs{line-height:1.23}.gt{letter-spacing:0}.gu{font-style:normal}.gv{font-weight:700}.ia{align-items:baseline}.ib{width:48px}.ic{height:48px}.id{border:2px solid rgba(255, 255, 255, 1)}.ie{z-index:0}.if{box-shadow:none}.ig{border:1px solid rgba(0, 0, 0, 0.05)}.ih{margin-left:-12px}.ii{width:28px}.ij{height:28px}.ik{z-index:1}.il{width:24px}.im{margin-bottom:2px}.in{flex-wrap:nowrap}.io{font-size:16px}.ip{line-height:24px}.ir{margin:0 8px}.is{display:inline}.it{color:#1A8917}.iu{fill:#1A8917}.ix{flex:0 0 auto}.ja{flex-wrap:wrap}.jd{white-space:pre-wrap}.je{margin-right:4px}.jf{overflow:hidden}.jg{max-height:20px}.jh{text-overflow:ellipsis}.ji{display:-webkit-box}.jj{-webkit-line-clamp:1}.jk{-webkit-box-orient:vertical}.jl{word-break:break-all}.jn{padding-left:8px}.jo{padding-right:8px}.kp> *{flex-shrink:0}.kq{overflow-x:scroll}.kr::-webkit-scrollbar{display:none}.ks{scrollbar-width:none}.kt{-ms-overflow-style:none}.ku{width:74px}.kv{flex-direction:row}.kw{z-index:2}.kz{-webkit-user-select:none}.la{border:0}.lb{fill:rgba(117, 117, 117, 1)}.le{outline:0}.lf{user-select:none}.lg> svg{pointer-events:none}.lp{cursor:progress}.lq{margin-left:4px}.lr{margin-top:0px}.ls{opacity:1}.lt{padding:4px 0}.lw{width:16px}.ly{display:inline-flex}.me{max-width:100%}.mf{padding:8px 2px}.mg svg{color:#6B6B6B}.mx{margin-left:auto}.my{margin-right:auto}.mz{max-width:1316px}.nf{clear:both}.nh{cursor:zoom-in}.ni{z-index:auto}.nk{height:auto}.nl{line-height:1.58}.nm{letter-spacing:-0.004em}.nn{font-family:source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif}.oi{margin-bottom:-0.46em}.oj{text-decoration:underline}.ok{margin-top:32px}.ol{margin-bottom:14px}.om{padding-top:24px}.on{padding-bottom:10px}.oo{background-color:#000000}.op{height:3px}.oq{width:3px}.or{margin-right:20px}.os{line-height:1.12}.ot{letter-spacing:-0.022em}.ou{font-weight:600}.pp{margin-bottom:-0.28em}.pv{line-height:1.18}.qj{margin-bottom:-0.31em}.qk{padding:2px 4px}.ql{font-size:75%}.qm> strong{font-family:inherit}.qn{font-family:source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace}.qo{font-style:italic}.qu{overflow-x:auto}.qv{padding:32px}.qw{border:1px solid #E5E5E5}.qx{line-height:1.4}.qy{margin-top:-0.2em}.qz{margin-bottom:-0.2em}.ra{white-space:pre}.rb{min-width:fit-content}.rc{list-style-type:disc}.rd{margin-left:30px}.re{padding-left:0px}.rk{box-shadow:inset 3px 0 0 0 #242424}.rl{padding-left:23px}.rm{margin-left:-20px}.rs{margin-bottom:26px}.rt{margin-top:6px}.ru{margin-top:8px}.rv{margin-right:8px}.rw{padding:8px 16px}.rx{border-radius:100px}.ry{transition:background 300ms ease}.sa{white-space:nowrap}.sb{border-top:none}.sh{height:52px}.si{max-height:52px}.sj{box-sizing:content-box}.sk{position:static}.sm{max-width:155px}.sx{align-items:flex-end}.sy{width:76px}.sz{height:76px}.ta{border:2px solid #F9F9F9}.tb{height:72px}.tc{width:72px}.td{margin-left:-16px}.te{width:36px}.tf{height:36px}.tg{stroke:#F2F2F2}.th{color:#F2F2F2}.ti{fill:#F2F2F2}.tj{background:#F2F2F2}.tk{border-color:#F2F2F2}.tq{font-weight:500}.tr{font-size:24px}.ts{line-height:30px}.tt{letter-spacing:-0.016em}.tu{margin-top:16px}.tv{height:0px}.tw{border-bottom:solid 1px #E5E5E5}.tx{margin-top:72px}.ty{padding:24px 0}.tz{margin-bottom:0px}.ua{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.et:hover{background:#156D12}.eu:hover{border-color:#156D12}.ev:hover{cursor:pointer}.fl:hover{color:#242424}.fm:hover{fill:#242424}.fq:hover svg{fill:#242424}.ft:hover{background-color:rgba(0, 0, 0, 0.1)}.iq:hover{text-decoration:underline}.iv:hover:not(:disabled){color:#156D12}.iw:hover:not(:disabled){fill:#156D12}.ld:hover{fill:rgba(8, 8, 8, 1)}.lu:hover{fill:#000000}.lv:hover p{color:#000000}.lx:hover{color:#000000}.mh:hover svg{color:#000000}.rz:hover{background-color:#F2F2F2}.tl:hover{background:#F2F2F2}.tm:hover{border-color:#F2F2F2}.tn:hover{cursor:wait}.to:hover{color:#F2F2F2}.tp:hover{fill:#F2F2F2}.bd:focus-within path{fill:#242424}.lc:focus{fill:rgba(8, 8, 8, 1)}.mi:focus svg{color:#000000}.nj:focus{transform:scale(1.01)}.lh:active{border-style:none}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 1080px)\">.d{display:none}.bw{width:64px}.cg{margin:0 64px}.cv{height:48px}.dc{margin-bottom:52px}.do{margin-bottom:48px}.ef{font-size:14px}.eg{line-height:20px}.em{font-size:13px}.eo{padding:5px 12px}.fh{display:flex}.fy{margin-bottom:68px}.gc{max-width:680px}.hq{font-size:42px}.hr{margin-top:1.19em}.hs{margin-bottom:32px}.ht{line-height:52px}.hu{letter-spacing:-0.011em}.hz{align-items:center}.kb{border-top:solid 1px #F2F2F2}.kc{border-bottom:solid 1px #F2F2F2}.kd{margin:32px 0 0}.ke{padding:3px 8px}.kn> *{margin-right:24px}.ko> :last-child{margin-right:0}.lo{margin-top:0px}.md{margin:0}.ne{margin-top:40px}.oe{font-size:20px}.of{margin-top:2.14em}.og{line-height:32px}.oh{letter-spacing:-0.003em}.pl{font-size:24px}.pm{margin-top:1.25em}.pn{line-height:30px}.po{letter-spacing:-0.016em}.pu{margin-top:0.94em}.qg{margin-top:1.72em}.qh{line-height:24px}.qi{letter-spacing:0}.qt{margin-top:56px}.rj{margin-top:1.14em}.rr{margin-top:1.95em}.sg{margin-bottom:88px}.sr{display:inline-block}.sw{padding-top:72px}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 1079.98px)\">.e{display:none}.ln{margin-top:0px}.sq{display:inline-block}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 903.98px)\">.f{display:none}.lm{margin-top:0px}.sp{display:inline-block}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 727.98px)\">.g{display:none}.lk{margin-top:0px}.ll{margin-right:0px}.so{display:inline-block}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 551.98px)\">.h{display:none}.s{display:flex}.t{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dx{font-size:13px}.dy{line-height:20px}.eh{padding:0px 8px 1px}.fu{margin-bottom:4px}.gw{font-size:32px}.gx{margin-top:1.01em}.gy{margin-bottom:24px}.gz{line-height:38px}.ha{letter-spacing:-0.014em}.hv{align-items:flex-start}.iy{flex-direction:column}.jb{margin-bottom:2px}.jp{margin:24px -24px 0}.jq{padding:0}.kf> *{margin-right:8px}.kg> :last-child{margin-right:24px}.kx{margin-left:0px}.li{margin-top:0px}.lj{margin-right:0px}.lz{margin:0}.mj{border:1px solid #F2F2F2}.mk{border-radius:99em}.ml{padding:0px 16px 0px 12px}.mm{height:38px}.mn{align-items:center}.mp svg{margin-right:8px}.na{margin-top:32px}.no{font-size:18px}.np{margin-top:1.56em}.nq{line-height:28px}.nr{letter-spacing:-0.003em}.ov{font-size:20px}.ow{margin-top:0.93em}.ox{line-height:24px}.oy{letter-spacing:0}.pq{margin-top:0.67em}.pw{font-size:16px}.px{margin-top:1.23em}.qp{margin-top:40px}.rf{margin-top:1.34em}.rn{margin-top:1.2em}.sc{margin-bottom:80px}.sn{display:inline-block}.ss{padding-top:48px}.mo:hover{border-color:#E5E5E5}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 904px) and (max-width: 1079.98px)\">.i{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ed{font-size:14px}.ee{line-height:20px}.ek{font-size:13px}.el{padding:5px 12px}.fg{display:flex}.fx{margin-bottom:68px}.gb{max-width:680px}.hl{font-size:42px}.hm{margin-top:1.19em}.hn{margin-bottom:32px}.ho{line-height:52px}.hp{letter-spacing:-0.011em}.hy{align-items:center}.jx{border-top:solid 1px #F2F2F2}.jy{border-bottom:solid 1px #F2F2F2}.jz{margin:32px 0 0}.ka{padding:3px 8px}.kl> *{margin-right:24px}.km> :last-child{margin-right:0}.mc{margin:0}.nd{margin-top:40px}.oa{font-size:20px}.ob{margin-top:2.14em}.oc{line-height:32px}.od{letter-spacing:-0.003em}.ph{font-size:24px}.pi{margin-top:1.25em}.pj{line-height:30px}.pk{letter-spacing:-0.016em}.pt{margin-top:0.94em}.qd{margin-top:1.72em}.qe{line-height:24px}.qf{letter-spacing:0}.qs{margin-top:56px}.ri{margin-top:1.14em}.rq{margin-top:1.95em}.sf{margin-bottom:88px}.sv{padding-top:72px}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 728px) and (max-width: 903.98px)\">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bu{width:64px}.ce{margin:0 48px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{font-size:13px}.ec{line-height:20px}.ej{padding:0px 8px 1px}.fw{margin-bottom:68px}.ga{max-width:680px}.hg{font-size:42px}.hh{margin-top:1.19em}.hi{margin-bottom:32px}.hj{line-height:52px}.hk{letter-spacing:-0.011em}.hx{align-items:center}.jt{border-top:solid 1px #F2F2F2}.ju{border-bottom:solid 1px #F2F2F2}.jv{margin:32px 0 0}.jw{padding:3px 8px}.kj> *{margin-right:24px}.kk> :last-child{margin-right:0}.mb{margin:0}.nc{margin-top:40px}.nw{font-size:20px}.nx{margin-top:2.14em}.ny{line-height:32px}.nz{letter-spacing:-0.003em}.pd{font-size:24px}.pe{margin-top:1.25em}.pf{line-height:30px}.pg{letter-spacing:-0.016em}.ps{margin-top:0.94em}.qa{margin-top:1.72em}.qb{line-height:24px}.qc{letter-spacing:0}.qr{margin-top:56px}.rh{margin-top:1.14em}.rp{margin-top:1.95em}.se{margin-bottom:88px}.su{padding-top:72px}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 552px) and (max-width: 727.98px)\">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bt{width:24px}.cd{margin:0 24px}.cs{height:40px}.cz{margin-bottom:44px}.dl{margin-bottom:32px}.dz{font-size:13px}.ea{line-height:20px}.ei{padding:0px 8px 1px}.fv{margin-bottom:4px}.hb{font-size:32px}.hc{margin-top:1.01em}.hd{margin-bottom:24px}.he{line-height:38px}.hf{letter-spacing:-0.014em}.hw{align-items:flex-start}.iz{flex-direction:column}.jc{margin-bottom:2px}.jr{margin:24px 0 0}.js{padding:0}.kh> *{margin-right:8px}.ki> :last-child{margin-right:8px}.ky{margin-left:0px}.ma{margin:0}.mq{border:1px solid #F2F2F2}.mr{border-radius:99em}.ms{padding:0px 16px 0px 12px}.mt{height:38px}.mu{align-items:center}.mw svg{margin-right:8px}.nb{margin-top:32px}.ns{font-size:18px}.nt{margin-top:1.56em}.nu{line-height:28px}.nv{letter-spacing:-0.003em}.oz{font-size:20px}.pa{margin-top:0.93em}.pb{line-height:24px}.pc{letter-spacing:0}.pr{margin-top:0.67em}.py{font-size:16px}.pz{margin-top:1.23em}.qq{margin-top:40px}.rg{margin-top:1.34em}.ro{margin-top:1.2em}.sd{margin-bottom:80px}.st{padding-top:48px}.mv:hover{border-color:#E5E5E5}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"print\">.sl{display:none}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"(orientation: landscape) and (max-width: 903.98px)\">.jm{max-height:none}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"(prefers-reduced-motion: no-preference)\">.ng{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id=\"root\"><div class=\"a b c\"><div class=\"d e f g h i j k\"></div><script>document.domain = document.domain;</script><div class=\"l c\"><div class=\"l m n o c\"><div class=\"p q r s t u v w x i d y z\"><a class=\"du ag dv bf ak b am an ao ap aq ar as at s u w i d q dw z\" href=\"https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Feb4071cded30&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderCollection&amp;source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\">Open in app<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" fill=\"none\" viewBox=\"0 0 10 10\" class=\"dt\"><path fill=\"currentColor\" d=\"M.985 8.485a.375.375 0 1 0 .53.53zM8.75 1.25h.375A.375.375 0 0 0 8.75.875zM8.375 6.5a.375.375 0 1 0 .75 0zM3.5.875a.375.375 0 1 0 0 .75zm-1.985 8.14 7.5-7.5-.53-.53-7.5 7.5zm6.86-7.765V6.5h.75V1.25zM3.5 1.625h5.25v-.75H3.5z\"></path></svg></a><div class=\"ab q\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff\" data-testid=\"headerSignUpButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign up</a></span></p><div class=\"ax l\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSignInButton\" href=\"https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign in</a></span></p></div></div></div><div class=\"p q r ab ac\"><div class=\"ab q ae\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at ab\" aria-label=\"Homepage\" data-testid=\"headerMediumLogo\" href=\"https://medium.com/?source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"719\" height=\"160\" fill=\"none\" viewBox=\"0 0 719 160\" class=\"au av aw\"><path fill=\"#242424\" d=\"m174.104 9.734.215-.047V8.02H130.39L89.6 103.89 48.81 8.021H1.472v1.666l.212.047c8.018 1.81 12.09 4.509 12.09 14.242V137.93c0 9.734-4.087 12.433-12.106 14.243l-.212.047v1.671h32.118v-1.665l-.213-.048c-8.018-1.809-12.089-4.509-12.089-14.242V30.586l52.399 123.305h2.972l53.925-126.743V140.75c-.687 7.688-4.721 10.062-11.982 11.701l-.215.05v1.652h55.948v-1.652l-.215-.05c-7.269-1.639-11.4-4.013-12.087-11.701l-.037-116.774h.037c0-9.733 4.071-12.432 12.087-14.242m25.555 75.488c.915-20.474 8.268-35.252 20.606-35.507 3.806.063 6.998 1.312 9.479 3.714 5.272 5.118 7.751 15.812 7.368 31.793zm-.553 5.77h65.573v-.275c-.186-15.656-4.721-27.834-13.466-36.196-7.559-7.227-18.751-11.203-30.507-11.203h-.263c-6.101 0-13.584 1.48-18.909 4.16-6.061 2.807-11.407 7.003-15.855 12.511-7.161 8.874-11.499 20.866-12.554 34.343q-.05.606-.092 1.212a50 50 0 0 0-.065 1.151 85.807 85.807 0 0 0-.094 5.689c.71 30.524 17.198 54.917 46.483 54.917 25.705 0 40.675-18.791 44.407-44.013l-1.886-.664c-6.557 13.556-18.334 21.771-31.738 20.769-18.297-1.369-32.314-19.922-31.042-42.395m139.722 41.359c-2.151 5.101-6.639 7.908-12.653 7.908s-11.513-4.129-15.418-11.63c-4.197-8.053-6.405-19.436-6.405-32.92 0-28.067 8.729-46.22 22.24-46.22 5.657 0 10.111 2.807 12.236 7.704zm43.499 20.008c-8.019-1.897-12.089-4.722-12.089-14.951V1.309l-48.716 14.353v1.757l.299-.024c6.72-.543 11.278.386 13.925 2.83 2.072 1.915 3.082 4.853 3.082 8.987v18.66c-4.803-3.067-10.516-4.56-17.448-4.56-14.059 0-26.909 5.92-36.176 16.672-9.66 11.205-14.767 26.518-14.767 44.278-.003 31.72 15.612 53.039 38.851 53.039 13.595 0 24.533-7.449 29.54-20.013v16.865h43.711v-1.746zM424.1 19.819c0-9.904-7.468-17.374-17.375-17.374-9.859 0-17.573 7.632-17.573 17.374s7.721 17.374 17.573 17.374c9.907 0 17.375-7.47 17.375-17.374m11.499 132.546c-8.019-1.897-12.089-4.722-12.089-14.951h-.035V43.635l-43.714 12.551v1.705l.263.024c9.458.842 12.047 4.1 12.047 15.152v81.086h43.751v-1.746zm112.013 0c-8.018-1.897-12.089-4.722-12.089-14.951V43.635l-41.621 12.137v1.71l.246.026c7.733.813 9.967 4.257 9.967 15.36v59.279c-2.578 5.102-7.415 8.131-13.274 8.336-9.503 0-14.736-6.419-14.736-18.073V43.638l-43.714 12.55v1.703l.262.024c9.459.84 12.05 4.097 12.05 15.152v50.17a56.3 56.3 0 0 0 .91 10.444l.787 3.423c3.701 13.262 13.398 20.197 28.59 20.197 12.868 0 24.147-7.966 29.115-20.43v17.311h43.714v-1.747zm169.818 1.788v-1.749l-.213-.05c-8.7-2.006-12.089-5.789-12.089-13.49v-63.79c0-19.89-11.171-31.761-29.883-31.761-13.64 0-25.141 7.882-29.569 20.16-3.517-13.01-13.639-20.16-28.606-20.16-13.146 0-23.449 6.938-27.869 18.657V43.643L545.487 55.68v1.715l.263.024c9.345.829 12.047 4.181 12.047 14.95v81.784h40.787v-1.746l-.215-.053c-6.941-1.631-9.181-4.606-9.181-12.239V66.998c1.836-4.289 5.537-9.37 12.853-9.37 9.086 0 13.692 6.296 13.692 18.697v77.828h40.797v-1.746l-.215-.053c-6.94-1.631-9.18-4.606-9.18-12.239V75.066a42 42 0 0 0-.578-7.26c1.947-4.661 5.86-10.177 13.475-10.177 9.214 0 13.691 6.114 13.691 18.696v77.828z\"></path></svg></a><div class=\"ax h\"><div class=\"ab ay az ba bb q bc bd\"><div class=\"bm\" aria-hidden=\"false\" aria-describedby=\"searchResults\" aria-labelledby=\"searchResults\"></div><div class=\"bn bo ab\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z\" clip-rule=\"evenodd\"></path></svg></div><input role=\"combobox\" aria-controls=\"searchResults\" aria-expanded=\"false\" aria-label=\"search\" data-testid=\"headerSearchInput\" tabindex=\"0\" class=\"ay be bf bg z bh bi bj bk bl\" placeholder=\"Search\" value=\"\"/></div></div></div><div class=\"h k w fg fh\"><div class=\"fi ab\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerWriteButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---two_column_layout_nav-----------------------new_post_topnav-----------\" rel=\"noopener follow\"><div class=\"bf b bg z du fj fk ab q fl fm\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" aria-label=\"Write\"><path fill=\"currentColor\" d=\"M14 4a.5.5 0 0 0 0-1zm7 6a.5.5 0 0 0-1 0zm-7-7H4v1h10zM3 4v16h1V4zm1 17h16v-1H4zm17-1V10h-1v10zm-1 1a1 1 0 0 0 1-1h-1zM3 20a1 1 0 0 0 1 1v-1zM4 3a1 1 0 0 0-1 1h1z\"></path><path stroke=\"currentColor\" d=\"m17.5 4.5-8.458 8.458a.25.25 0 0 0-.06.098l-.824 2.47a.25.25 0 0 0 .316.316l2.47-.823a.25.25 0 0 0 .098-.06L19.5 6.5m-2-2 2.323-2.323a.25.25 0 0 1 .354 0l1.646 1.646a.25.25 0 0 1 0 .354L19.5 6.5m-2-2 2 2\"></path></svg><div class=\"dt l\">Write</div></div></a></span></div></div><div class=\"k j i d\"><div class=\"fi ab\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSearchButton\" href=\"https://medium.com/search?source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\"><div class=\"bf b bg z du fj fk ab q fl fm\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" aria-label=\"Search\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z\" clip-rule=\"evenodd\"></path></svg></div></a></div></div><div class=\"fi h k j\"><div class=\"ab q\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff\" data-testid=\"headerSignUpButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign up</a></span></p><div class=\"ax l\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSignInButton\" href=\"https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign in</a></span></p></div></div></div><div class=\"l\" aria-hidden=\"false\"><button class=\"ay fn am ab q ao fo fp fq\" aria-label=\"user options menu\" data-testid=\"headerUserIcon\"><div class=\"l fj\"><img alt=\"\" class=\"l fd by bz ca cx\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png\" width=\"32\" height=\"32\" loading=\"lazy\" role=\"presentation\"/><div class=\"fr by l bz ca fs n ay ft\"></div></div></button></div></div></div><div class=\"l\"><div class=\"fu fv fw fx fy l\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"></div></div><article><div class=\"l\"><div class=\"l\"><span class=\"l\"></span><section><div><div class=\"fs gi gj gk gl gm\"></div><div class=\"gn go gp gq gr\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div><h1 id=\"40b9\" class=\"pw-post-title gs gt gu bf gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hk hl hm hn ho hp hq hr hs ht hu bk\" data-testid=\"storyTitle\">The Ultimate Golang Framework for Microservices: GoFr</h1><div><div class=\"speechify-ignore ab cp\"><div class=\"speechify-ignore bh l\"><div class=\"hv hw hx hy hz ab\"><div><div class=\"ab ia\"><a href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l ib ic by id ie\"><div class=\"l fj\"><img alt=\"Mundhraumang\" class=\"l fd by dd de cx\" src=\"https://miro.medium.com/v2/da:true/resize:fill:88:88/0*1pfy5SWOFKWfx4rM\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/><div class=\"if by l dd de fs n ig ft\"></div></div></div></div></div></a><a href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener  ugc nofollow\"><div class=\"ih ab fj\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l ii ij by id ik\"><div class=\"l fj\"><img alt=\"Stackademic\" class=\"l fd by br il cx\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*U-kjsW7IZUobnoy1gAp1UQ.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/><div class=\"if by l br il fs n ig ft\"></div></div></div></div></div></div></a></div></div><div class=\"bn bh l\"><div class=\"ab\"><div style=\"flex:1\"><span class=\"bf b bg z bk\"><div class=\"im ab q\"><div class=\"ab q in\"><div class=\"ab q\"><div><div class=\"bm\" aria-hidden=\"false\"><p class=\"bf b io ip bk\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq\" data-testid=\"authorName\" href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\">Mundhraumang</a></p></div></div></div><span class=\"ir is\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span><p class=\"bf b io ip du\"><span><a class=\"it iu ah ai aj ak al am an ao ap aq ar ex iv iw\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------post_header-----------\" rel=\"noopener follow\">Follow</a></span></p></div></div></span></div></div><div class=\"l ix\"><span class=\"bf b bg z du\"><div class=\"ab cn iy iz ja\"><div class=\"jb jc ab\"><div class=\"bf b bg z du ab jd\"><span class=\"je l ix\">Published in</span><div><div class=\"l\" aria-hidden=\"false\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq ab q\" data-testid=\"publicationName\" href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener  ugc nofollow\"><p class=\"bf b bg z jf jg jh ji jj jk jl jm bk\">Stackademic</p></a></div></div></div><div class=\"h k\"><span class=\"ir is\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span></div></div><span class=\"bf b bg z du\"><div class=\"ab ae\"><span data-testid=\"storyReadTime\">8 min read</span><div class=\"jn jo l\" aria-hidden=\"true\"><span class=\"l\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span></div><span data-testid=\"storyPublishDate\">Jul 9, 2024</span></div></span></div></span></div></div></div><div class=\"ab cp jp jq jr js jt ju jv jw jx jy jz ka kb kc kd ke\"><div class=\"h k w fg fh q\"><div class=\"ku l\"><div class=\"ab q kv kw\"><div class=\"pw-multi-vote-icon fj je kx ky kz\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z\" clip-rule=\"evenodd\"></path></svg></div></div></div></a></span></div><div class=\"pw-multi-vote-count l li lj lk ll lm ln lo\"><p class=\"bf b dv z du\"><span class=\"lp\">--</span></p></div></div></div><div><div class=\"bm\" aria-hidden=\"false\"><button class=\"ao la ls lt ab q fk lu lv\" aria-label=\"responses\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" class=\"lr\"><path d=\"M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z\"></path></svg><p class=\"bf b dv z du\"><span class=\"pw-responses-count lq lr\">5</span></p></button></div></div></div><div class=\"ab q kf kg kh ki kj kk kl km kn ko kp kq kr ks kt\"><div class=\"lw k j i d\"></div><div class=\"h k\"><div><div class=\"bm\" aria-hidden=\"false\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerBookmarkButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=-----eb4071cded30---------------------bookmark_footer-----------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"none\" viewBox=\"0 0 25 25\" class=\"du lx\" aria-label=\"Add to list bookmark button\"><path fill=\"currentColor\" d=\"M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z\"></path></svg></a></span></div></div></div><div class=\"fd ly cn\"><div class=\"l ae\"><div class=\"ab cb\"><div class=\"lz ma mb mc md me ci bh\"><div class=\"ab\"><div class=\"bm bh\" aria-hidden=\"false\"><div><div class=\"bm\" aria-hidden=\"false\"><button aria-label=\"Listen\" data-testid=\"audioPlayButton\" class=\"af fk ah ai aj ak al mf an ao ap ex mg mh lv mi mj mk ml mm s mn mo mp mq mr ms mt u mu mv mw\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0m9-10C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2m3.376 10.416-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416l4.599 3.066a.5.5 0 0 1 0 .832\" clip-rule=\"evenodd\"></path></svg><div class=\"j i d\"><p class=\"bf b bg z du\">Listen</p></div></button></div></div></div></div></div></div></div></div><div class=\"bm\" aria-hidden=\"false\" aria-describedby=\"postFooterSocialMenu\" aria-labelledby=\"postFooterSocialMenu\"><div><div class=\"bm\" aria-hidden=\"false\"><button aria-controls=\"postFooterSocialMenu\" aria-expanded=\"false\" aria-label=\"Share Post\" data-testid=\"headerSocialShareButton\" class=\"af fk ah ai aj ak al mf an ao ap ex mg mh lv mi mj mk ml mm s mn mo mp mq mr ms mt u mu mv mw\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1\" clip-rule=\"evenodd\"></path></svg><div class=\"j i d\"><p class=\"bf b bg z du\">Share</p></div></button></div></div></div></div></div></div></div></div></div><figure class=\"na nb nc nd ne nf mx my paragraph-image\"><div role=\"button\" tabindex=\"0\" class=\"ng nh fj ni bh nj\"><div class=\"mx my mz\"><picture><source srcSet=\"https://miro.medium.com/v2/resize:fit:640/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\" type=\"image/webp\"/><source data-testid=\"og\" srcSet=\"https://miro.medium.com/v2/resize:fit:640/1*E-Fpb9HhcKKlz6W7AsW2LA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*E-Fpb9HhcKKlz6W7AsW2LA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*E-Fpb9HhcKKlz6W7AsW2LA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*E-Fpb9HhcKKlz6W7AsW2LA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*E-Fpb9HhcKKlz6W7AsW2LA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\"/><img alt=\"\" class=\"bh me nk c\" width=\"700\" height=\"538\" loading=\"eager\" role=\"presentation\"/></picture></div></div></figure><p id=\"fe50\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.<strong class=\"nn gv\"> </strong>Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves.</p><p id=\"49a1\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about <a class=\"af oj\" href=\"https://gofr.dev\" rel=\"noopener ugc nofollow\" target=\"_blank\">GoFr</a>, an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!</p></div></div></div><div class=\"ab cb ok ol om on\" role=\"separator\"><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq\"></span></div><div class=\"gn go gp gq gr\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><h1 id=\"f696\" class=\"os ot gu bf ou ov ow ox oy oz pa pb pc pd pe pf pg ph pi pj pk pl pm pn po pp bk\">GoFr &amp; It’s rich set of features:</h1><p id=\"c04f\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features:</p><h2 id=\"56ef\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">1. Efficient Configuration Management</h2><p id=\"9fed\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the <a class=\"af oj\" href=\"https://12factor.net/config\" rel=\"noopener ugc nofollow\" target=\"_blank\">Twelve-Factor App</a> methodology and enables applications to be built with portability.</p><p id=\"efcc\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an <code class=\"cx qk ql qm qn b\">.env</code> file inside the <strong class=\"nn gv\">configs </strong>directory of the application and GoFr automatically reads the values from that.</p><p id=\"5e48\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Here is the full <a class=\"af oj\" href=\"https://gofr.dev/docs/references/configs\" rel=\"noopener ugc nofollow\" target=\"_blank\">list of environment variables supported by GoFr</a>:</p><h2 id=\"403b\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">2. Seamless Database Interactions</h2><p id=\"b858\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases.</p><p id=\"49ea\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of using MySQL and Redis DB inside the handler.</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"aad0\" class=\"qx ot gu qn b bg qy qz l ra rb\">func DBHandler(c *gofr.Context) (interface{}, error) {<br/> var value int<br/><br/>// querying a SQL db<br/>err := c.SQL.QueryRowContext(c, &quot;select 2+2&quot;).Scan(&amp;value)<br/> if err != nil {<br/>  return nil, datasource.ErrorDB{Err: err, Message: &quot;error from sql db&quot;}<br/> }<br/><br/>// retrieving value from Redis<br/> _, err = c.Redis.Get(c, &quot;test&quot;).Result()<br/> if err != nil &amp;&amp; !errors.Is(err, redis.Nil) {<br/>  return nil, datasource.ErrorDB{Err: err, Message: &quot;error from redis db&quot;}<br/> }<br/><br/> return value, nil<br/>}</span></pre><h2 id=\"bfaa\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">3. Implementing Publisher-Subscriber architecture with ease:</h2><p id=\"2fad\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch.</p><p id=\"1449\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of using Publisher and Subscriber in a GoFr application:</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"9145\" class=\"qx ot gu qn b bg qy qz l ra rb\">package main<br/><br/>import (<br/> &quot;encoding/json&quot;<br/><br/> &quot;gofr.dev/pkg/gofr&quot;<br/>)<br/><br/>func main() {<br/> app := gofr.New()<br/><br/> app.POST(&quot;/publish-product&quot;, product)<br/><br/>// subscribing to products topic<br/> app.Subscribe(&quot;products&quot;, func(c *gofr.Context) error {<br/>  var productInfo struct {<br/>   ProductId string `json:&quot;productId&quot;`<br/>   Price     string `json:&quot;price&quot;`<br/>  }<br/><br/>  err := c.Bind(&amp;productInfo)<br/>  if err != nil {<br/>   c.Logger.Error(err)<br/><br/>   return nil<br/>  }<br/><br/>  c.Logger.Info(&quot;Received product &quot;, productInfo)<br/><br/>  return nil<br/> })<br/><br/> app.Run()<br/>}<br/><br/>func product(ctx *gofr.Context) (interface{}, error) {<br/> type productInfo struct {<br/>  ProductId string `json:&quot;productId&quot;`<br/>  Price     string `json:&quot;price&quot;`<br/> }<br/><br/> var data productInfo<br/><br/>// binding the request data to productInfo struct<br/> err := ctx.Bind(&amp;data)<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> msg, _ := json.Marshal(data)<br/><br/>// publishing message to producst topic using gofr context<br/> err = ctx.GetPublisher().Publish(ctx, &quot;products&quot;, msg)<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> return &quot;Published&quot;, nil<br/>}</span></pre><h2 id=\"76a0\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">4. Out of the Box Observability:</h2><p id=\"a957\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries.</p><ul class=\"\"><li id=\"13c4\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\"><strong class=\"nn gv\">Detailed Logging:</strong> GoFr offers structured logging with various log levels (<strong class=\"nn gv\">INFO</strong>, <strong class=\"nn gv\">DEBUG</strong>, <strong class=\"nn gv\">WARN</strong>, <strong class=\"nn gv\">ERROR</strong>, <strong class=\"nn gv\">FATAL</strong>) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging.</li><li id=\"a0f3\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Actionable Metrics:</strong> GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance.</li><li id=\"f545\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Distributed Tracing:</strong> GoFr integrates with popular tracing backends like <code class=\"cx qk ql qm qn b\">Zipkin</code> and <code class=\"cx qk ql qm qn b\">Jaeger</code>. Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems.</li></ul><p id=\"29e3\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation.</p><h2 id=\"4abf\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">5. Effortless Interservice HTTP Communication:</h2><p id=\"f639\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the <code class=\"cx qk ql qm qn b\">AddHTTPService</code> method.</p><p id=\"dcd6\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\">Configurational Options for HTTP Services</strong>:</p><p id=\"3a89\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr offers a variety of configuration options to enhance interservice communication:</p><ul class=\"\"><li id=\"3b37\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\"><strong class=\"nn gv\">Authentication</strong>: Supports <strong class=\"nn gv\">APIKeyConfig</strong>, <strong class=\"nn gv\">BasicAuthConfig</strong>, and OAuthConfig for secure authentication.</li><li id=\"aa22\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Default Headers</strong>: Allows setting default headers for all downstream HTTP service requests.</li><li id=\"3242\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Circuit Breaker</strong>: Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages.</li><li id=\"dbf0\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Health Checks</strong>: Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues.</li></ul><p id=\"5664\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">These features ensure that interservice communication is secure, reliable, and easily manageable.</p><p id=\"26aa\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of connecting to a HTTP Service and sending a GET request:</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"b1c1\" class=\"qx ot gu qn b bg qy qz l ra rb\">func main() {<br/> a := gofr.New()<br/><br/> a.AddHTTPService(&quot;cat-facts&quot;, &quot;https://catfact.ninja&quot;,<br/>  &amp;service.CircuitBreakerConfig{<br/>   Threshold: 4,<br/>   Interval:  1 * time.Second,<br/>  },<br/>  &amp;service.HealthConfig{<br/>   HealthEndpoint: &quot;breeds&quot;,<br/>  },<br/> )<br/><br/>a.GET(&quot;/fact&quot;, Handler)<br/><br/> a.Run()<br/>}<br/><br/>func Handler(c *gofr.Context) (any, error) {<br/> var data = struct {<br/>  Fact   string `json:&quot;fact&quot;`<br/>  Length int    `json:&quot;length&quot;`<br/> }{}<br/><br/> var catFacts = c.GetHTTPService(&quot;cat-facts&quot;)<br/><br/> resp, err := catFacts.Get(c, &quot;fact&quot;, map[string]interface{}{<br/>  &quot;max_length&quot;: 20,<br/> })<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> b, _ := io.ReadAll(resp.Body)<br/> err = json.Unmarshal(b, &amp;data)<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> return data, nil<br/>}</span></pre><h2 id=\"d4e6\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">6. Flexible Middleware Support for Enhanced Control:</h2><p id=\"cb4e\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler.</p><p id=\"9e31\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the <code class=\"cx qk ql qm qn b\">UseMiddleware</code> method on your GoFr application instance. Additionally, GoFr includes built-in <strong class=\"nn gv\">CORS (Cross-Origin Resource Sharing)</strong> middleware to handle CORS-related headers.</p><p id=\"ad5c\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of adding a custom middleware to GoFr application:</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"08a5\" class=\"qx ot gu qn b bg qy qz l ra rb\">import (<br/>    &quot;net/http&quot;<br/><br/>    gofrHTTP &quot;gofr.dev/pkg/gofr/http&quot;<br/>)<br/><br/>// Define your custom middleware function<br/>func customMiddleware() gofrHTTP.Middleware {<br/>    return func(inner http.Handler) http.Handler {<br/>        return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {<br/>            // Your custom logic here<br/>            // For example, logging, authentication, etc.<br/>            <br/>            // Call the next handler in the chain<br/>            inner.ServeHTTP(w, r)<br/>        })<br/>    }<br/>}<br/><br/>func main() {<br/>    // Create a new instance of your GoFr application<br/>    app := gofr.New()<br/><br/>    // Add your custom middleware to the application<br/>    app.UseMiddleware(customMiddleware())<br/><br/>    // Define your application routes and handlers<br/>    // ...<br/><br/>    // Run your GoFr application<br/>    app.Run()<br/>}</span></pre><h2 id=\"c5b9\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">7. Integrated Authentication Mechanisms:</h2><p id=\"456e\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch.</p><ul class=\"\"><li id=\"cb39\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\"><strong class=\"nn gv\">Basic Auth:</strong> Basic auth is the simplest way to authenticate your APIs. It’s built on <a class=\"af oj\" href=\"https://datatracker.ietf.org/doc/html/rfc7617\" rel=\"noopener ugc nofollow\" target=\"_blank\">HTTP protocol authentication scheme</a>. It involves sending the prefix <code class=\"cx qk ql qm qn b\">Basic</code> trailed by the Base64-encoded <code class=\"cx qk ql qm qn b\">&lt;username&gt;:&lt;password&gt;</code> within the standard <code class=\"cx qk ql qm qn b\">Authorization</code> header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function.</li><li id=\"e7ff\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">API Keys Auth: </strong><em class=\"qo\">API Key Authentication</em> is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function.</li><li id=\"f9b8\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">OAuth 2.0: </strong><a class=\"af oj\" href=\"https://www.rfc-editor.org/rfc/rfc6749\" rel=\"noopener ugc nofollow\" target=\"_blank\">OAuth</a> 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix <code class=\"cx qk ql qm qn b\">Bearer</code> trailed by the encoded token within the standard <code class=\"cx qk ql qm qn b\">Authorization</code> header. GoFr supports authenticating tokens encoded by algorithm <code class=\"cx qk ql qm qn b\">RS256/384/512</code>.</li></ul><p id=\"17cc\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Refer to the <a class=\"af oj\" href=\"https://gofr.dev/docs/advanced-guide/http-authentication\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\"><em class=\"qo\">GoFr’s Authentication Documentation</em></strong></a><strong class=\"nn gv\"><em class=\"qo\"> </em></strong>to see the examples of how to use these auth mechanisms and know more about it.</p><h2 id=\"aef4\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">8. Automatic Swagger UI Rendering:</h2><p id=\"cd37\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official <a class=\"af oj\" href=\"https://swagger.io/\" rel=\"noopener ugc nofollow\" target=\"_blank\">Swagger website</a>.</p><p id=\"9c13\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your <code class=\"cx qk ql qm qn b\">openapi.json</code> file inside the <code class=\"cx qk ql qm qn b\">static</code> directory of your project. GoFr will automatically render the Swagger documentation at the <code class=\"cx qk ql qm qn b\">/.well-known/swagger</code> endpoint.</p></div></div></div><div class=\"ab cb ok ol om on\" role=\"separator\"><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq\"></span></div><div class=\"gn go gp gq gr\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><h1 id=\"5d57\" class=\"os ot gu bf ou ov ow ox oy oz pa pb pc pd pe pf pg ph pi pj pk pl pm pn po pp bk\">Conclusion</h1><p id=\"d4c6\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process.</p><p id=\"3bc6\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance.</p><p id=\"c357\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities.</p><p id=\"76a9\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\">Get started with GoFr today!</strong></p><p id=\"2f19\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\">Here are some helpful resources:</strong></p><blockquote class=\"rk rl rm\"><p id=\"2860\" class=\"nl nm qo nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr Website: <a class=\"af oj\" href=\"https://gofr.dev/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://gofr.dev</a></p><p id=\"dd1d\" class=\"nl nm qo nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr GitHub Repository: <a class=\"af oj\" href=\"https://github.com/gofr-dev/gofr\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://github.com/gofr-dev/gofr</a></p><p id=\"31d2\" class=\"nl nm qo nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr Discord Server: <a class=\"af oj\" href=\"https://discord.gg/zyJkVhps\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://discord.gg/zyJkVhps</a></p></blockquote><h1 id=\"db72\" class=\"os ot gu bf ou ov rn ox oy oz ro pb pc pd rp pf pg ph rq pj pk pl rr pn po pp bk\">Stackademic 🎓</h1><p id=\"7f50\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Thank you for reading until the end. Before you go:</p><ul class=\"\"><li id=\"90fe\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\">Please consider <strong class=\"nn gv\">clapping</strong> and <strong class=\"nn gv\">following</strong> the writer! 👏</li><li id=\"823b\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\">Follow us <a class=\"af oj\" href=\"https://twitter.com/stackademichq\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">X</strong></a> | <a class=\"af oj\" href=\"https://www.linkedin.com/company/stackademic\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">LinkedIn</strong></a> | <a class=\"af oj\" href=\"https://www.youtube.com/c/stackademic\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">YouTube</strong></a> | <a class=\"af oj\" href=\"https://discord.gg/in-plain-english-709094664682340443\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Discord</strong></a></li><li id=\"3a6c\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\">Visit our other platforms: <a class=\"af oj\" href=\"https://plainenglish.io/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">In Plain English</strong></a> | <a class=\"af oj\" href=\"https://cofeed.app/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">CoFeed</strong></a> | <a class=\"af oj\" href=\"https://differ.blog/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Differ</strong></a></li><li id=\"09a3\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\">More content at <a class=\"af oj\" href=\"https://stackademic.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Stackademic.com</strong></a></li></ul></div></div></div></div></section></div></div></article></div><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"rs rt ab ja\"><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/backend?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Backend</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/technology?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Technology</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/golang?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Golang</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/microservices?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Microservices</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/framework?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Framework</div></a></div></div></div></div><div class=\"l\"></div><footer class=\"sb sc sd se sf sg sh si sj ab q sk ik c\"><div class=\"l ae\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"ab cp sl\"><div class=\"ab q kv\"><div class=\"sm l\"><span class=\"l sn so sp e d\"><div class=\"ab q kv kw\"><div class=\"pw-multi-vote-icon fj je kx ky kz\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z\" clip-rule=\"evenodd\"></path></svg></div></div></div></a></span></div><div class=\"pw-multi-vote-count l li lj lk ll lm ln lo\"><p class=\"bf b dv z du\"><span class=\"lp\">--</span></p></div></div></span><span class=\"l h g f sq sr\"><div class=\"ab q kv kw\"><div class=\"pw-multi-vote-icon fj je kx ky kz\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z\" clip-rule=\"evenodd\"></path></svg></div></div></div></a></span></div><div class=\"pw-multi-vote-count l li lj lk ll lm ln lo\"><p class=\"bf b dv z du\"><span class=\"lp\">--</span></p></div></div></span></div><div class=\"bq ab\"><div><div class=\"bm\" aria-hidden=\"false\"><button class=\"ao la ls lt ab q fk lu lv\" aria-label=\"responses\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" class=\"lr\"><path d=\"M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z\"></path></svg><p class=\"bf b bg z du\"><span class=\"pw-responses-count lq lr\">5</span></p></button></div></div></div></div><div class=\"ab q\"><div class=\"or l ix\"><div><div class=\"bm\" aria-hidden=\"false\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerBookmarkButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=--------------------------bookmark_footer-----------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"none\" viewBox=\"0 0 25 25\" class=\"du lx\" aria-label=\"Add to list bookmark button\"><path fill=\"currentColor\" d=\"M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z\"></path></svg></a></span></div></div></div><div class=\"or l ix\"><div class=\"bm\" aria-hidden=\"false\" aria-describedby=\"postFooterSocialMenu\" aria-labelledby=\"postFooterSocialMenu\"><div><div class=\"bm\" aria-hidden=\"false\"><button aria-controls=\"postFooterSocialMenu\" aria-expanded=\"false\" aria-label=\"Share Post\" data-testid=\"footerSocialShareButton\" class=\"af fk ah ai aj ak al mf an ao ap ex mg mh lv mi\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1\" clip-rule=\"evenodd\"></path></svg></button></div></div></div></div></div></div></div></div></div></footer><div class=\"ss st su sv sw l bx\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"cl ab sx cp\"><div class=\"ab ia\"><a href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"l sy sz by ta ie\"><div class=\"l fj\"><img alt=\"Mundhraumang\" class=\"l fd by tb tc cx\" src=\"https://miro.medium.com/v2/da:true/resize:fill:144:144/0*1pfy5SWOFKWfx4rM\" width=\"72\" height=\"72\" loading=\"lazy\"/><div class=\"if by l tb tc fs n ig ft\"></div></div></div></a><a href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"td ab fj\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l te tf by ta ik\"><div class=\"l fj\"><img alt=\"Stackademic\" class=\"l fd by bz ca cx\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*U-kjsW7IZUobnoy1gAp1UQ.png\" width=\"32\" height=\"32\" loading=\"lazy\"/><div class=\"if by l bz ca fs n ig ft\"></div></div></div></div></div></div></a></div><div class=\"j i d\"><div class=\"ab\"><span><a class=\"bf b bg z ep rw eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------\" rel=\"noopener follow\">Follow</a></span><div class=\"dt l\"><div><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;newsletterV3=f2cfcdc5c71&amp;newsletterV3Id=ca6d34bf839d&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------subscribe_user-----------\" rel=\"noopener follow\"><button class=\"bf b bg z th am ti tj tk tl tm tn to tp ew ex ey ez fa fb fc fd bm fe ff\" aria-label=\"Subscribe\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" fill=\"none\" viewBox=\"0 0 38 38\" class=\"tg tf te\"><rect width=\"0.5\" height=\"6.5\" x=\"26.25\" y=\"9.25\" rx=\"0.25\"></rect><rect width=\"0.5\" height=\"6.5\" x=\"29.75\" y=\"12.25\" rx=\"0.25\" transform=\"rotate(90 29.75 12.25)\"></rect><path d=\"M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5\"></path><path d=\"M11.5 14.5 19 20l4-3\"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class=\"ab cn cp\"><div class=\"l\"><div class=\"ab q\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at ab q\" href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><h2 class=\"pw-author-name bf tq tr ts tt bk\"><span class=\"gn jo\">Written by <!-- -->Mundhraumang</span></h2></a></div><div class=\"ru ab\"><div class=\"l ix\"><span class=\"pw-follower-count bf b bg z bk\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq\" href=\"https://medium.com/@mundhraumang.02/followers?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\">75 Followers</a></span></div><div class=\"bf b bg z jf jg jh ab jj jk jl jm du jd\"><span class=\"ir l\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span><span class=\"l ix\">Writer for </span><div><div class=\"l\" aria-hidden=\"false\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq ab q\" href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b bg z jf jg jh ji jj jk jl jm bk\">Stackademic</p></a></div></div></div></div><div class=\"tu l\"></div></div><div class=\"h k\"><div class=\"ab\"><span><a class=\"bf b bg z ep rw eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------\" rel=\"noopener follow\">Follow</a></span><div class=\"dt l\"><div><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;newsletterV3=f2cfcdc5c71&amp;newsletterV3Id=ca6d34bf839d&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------subscribe_user-----------\" rel=\"noopener follow\"><button class=\"bf b bg z th am ti tj tk tl tm tn to tp ew ex ey ez fa fb fc fd bm fe ff\" aria-label=\"Subscribe\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" fill=\"none\" viewBox=\"0 0 38 38\" class=\"tg tf te\"><rect width=\"0.5\" height=\"6.5\" x=\"26.25\" y=\"9.25\" rx=\"0.25\"></rect><rect width=\"0.5\" height=\"6.5\" x=\"29.75\" y=\"12.25\" rx=\"0.25\" transform=\"rotate(90 29.75 12.25)\"></rect><path d=\"M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5\"></path><path d=\"M11.5 14.5 19 20l4-3\"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class=\"tv bh tw na nb nc nd ne\"></div></div></div><div class=\"h k j\"><div class=\"tv bh tw tx\"></div><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"ty ab kv ja\"><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://help.medium.com/hc/en-us?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Help</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.statuspage.io/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Status</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/about?autoplay=1&amp;source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">About</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Careers</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"pressinquiries@medium.com?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Press</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://blog.medium.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Blog</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Privacy</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Terms</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://speechify.com/medium?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Text to speech</p></a></div><div class=\"tz l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/business?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__=\"main-20240913-183058-97d0bdd4c3\"</script><script>window.__GRAPHQL_URI__ = \"https://blog.stackademic.com/_/graphql\"</script><script>window.__PRELOADED_STATE__ = {\"algolia\":{\"queries\":{}},\"cache\":{\"experimentGroupSet\":true,\"reason\":\"This request is not using the cache middleware worker\",\"group\":\"disabled\",\"tags\":[\"group-edgeCachePosts\",\"post-eb4071cded30\",\"user-f2cfcdc5c71\",\"collection-d1baaa8417a4\"],\"serverVariantState\":\"\",\"middlewareEnabled\":false,\"cacheStatus\":\"DYNAMIC\",\"shouldUseCache\":false,\"vary\":[],\"lohpSummerUpsellEnabled\":false,\"logoUpdatePhase3Enabled\":false},\"client\":{\"hydrated\":false,\"isUs\":false,\"isNativeMedium\":false,\"isSafariMobile\":false,\"isSafari\":false,\"isFirefox\":false,\"routingEntity\":{\"type\":\"COLLECTION\",\"id\":\"d1baaa8417a4\",\"explicit\":true},\"viewerIsBot\":false},\"debug\":{\"requestId\":\"318709a7-500d-4525-be1c-746fe383d880\",\"hybridDevServices\":[],\"originalSpanCarrier\":{\"traceparent\":\"00-7a67e86aa19aa253c9eccfb9962bc9d6-532ad1ea998f01f1-01\"}},\"multiVote\":{\"clapsPerPost\":{}},\"navigation\":{\"branch\":{\"show\":null,\"hasRendered\":null,\"blockedByCTA\":false},\"hideGoogleOneTap\":false,\"hasRenderedAlternateUserBanner\":null,\"currentLocation\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"host\":\"blog.stackademic.com\",\"hostname\":\"blog.stackademic.com\",\"referrer\":\"\",\"hasSetReferrer\":false,\"susiModal\":{\"step\":null,\"operation\":\"register\"},\"postRead\":false,\"partnerProgram\":{\"selectedCountryCode\":null},\"queryString\":\"?source=topic_portal_recommended_stories------backend---1-107----------backend----------9b0ff235_7ba9_4567_be8a_1f42936dd1f9-------\"},\"config\":{\"nodeEnv\":\"production\",\"version\":\"main-20240913-183058-97d0bdd4c3\",\"target\":\"production\",\"productName\":\"Medium\",\"publicUrl\":\"https:\\u002F\\u002Fcdn-client.medium.com\\u002Flite\",\"authDomain\":\"medium.com\",\"authGoogleClientId\":\"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com\",\"favicon\":\"production\",\"glyphUrl\":\"https:\\u002F\\u002Fglyph.medium.com\",\"branchKey\":\"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm\",\"algolia\":{\"appId\":\"MQ57UUUQZ2\",\"apiKeySearch\":\"394474ced050e3911ae2249ecc774921\",\"indexPrefix\":\"medium_\",\"host\":\"-dsn.algolia.net\"},\"recaptchaKey\":\"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk\",\"recaptcha3Key\":\"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5\",\"recaptchaEnterpriseKeyId\":\"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp\",\"datadog\":{\"applicationId\":\"6702d87d-a7e0-42fe-bbcb-95b469547ea0\",\"clientToken\":\"pub853ea8d17ad6821d9f8f11861d23dfed\",\"rumToken\":\"pubf9cc52896502b9413b68ba36fc0c7162\",\"context\":{\"deployment\":{\"target\":\"production\",\"tag\":\"main-20240913-183058-97d0bdd4c3\",\"commit\":\"97d0bdd4c3d32312bf79945abb12126d81d4ed87\"}},\"datacenter\":\"us\"},\"googleAnalyticsCode\":\"G-7JY7T788PK\",\"googlePay\":{\"apiVersion\":\"2\",\"apiVersionMinor\":\"0\",\"merchantId\":\"BCR2DN6TV7EMTGBM\",\"merchantName\":\"Medium\",\"instanceMerchantId\":\"13685562959212738550\"},\"applePay\":{\"version\":3},\"signInWallCustomDomainCollectionIds\":[\"3a8144eabfe3\",\"336d898217ee\",\"61061eb0c96b\",\"138adf9c44c\",\"819cc2aaeee0\"],\"mediumMastodonDomainName\":\"me.dm\",\"mediumOwnedAndOperatedCollectionIds\":[\"8a9336e5bb4\",\"b7e45b22fec3\",\"193b68bd4fba\",\"8d6b8a439e32\",\"54c98c43354d\",\"3f6ecf56618\",\"d944778ce714\",\"92d2092dc598\",\"ae2a65f35510\",\"1285ba81cada\",\"544c7006046e\",\"fc8964313712\",\"40187e704f1c\",\"88d9857e584e\",\"7b6769f2748b\",\"bcc38c8f6edf\",\"cef6983b292\",\"cb8577c9149e\",\"444d13b52878\",\"713d7dbc99b0\",\"ef8e90590e66\",\"191186aaafa0\",\"55760f21cdc5\",\"9dc80918cc93\",\"bdc4052bbdba\",\"8ccfed20cbb2\"],\"tierOneDomains\":[\"medium.com\",\"thebolditalic.com\",\"arcdigital.media\",\"towardsdatascience.com\",\"uxdesign.cc\",\"codeburst.io\",\"psiloveyou.xyz\",\"writingcooperative.com\",\"entrepreneurshandbook.co\",\"prototypr.io\",\"betterhumans.coach.me\",\"theascent.pub\"],\"topicsToFollow\":[\"d61cf867d93f\",\"8a146bc21b28\",\"1eca0103fff3\",\"4d562ee63426\",\"aef1078a3ef5\",\"e15e46793f8d\",\"6158eb913466\",\"55f1c20aba7a\",\"3d18b94f6858\",\"4861fee224fd\",\"63c6f1f93ee\",\"1d98b3a9a871\",\"decb52b64abf\",\"ae5d4995e225\",\"830cded25262\"],\"topicToTagMappings\":{\"accessibility\":\"accessibility\",\"addiction\":\"addiction\",\"android-development\":\"android-development\",\"art\":\"art\",\"artificial-intelligence\":\"artificial-intelligence\",\"astrology\":\"astrology\",\"basic-income\":\"basic-income\",\"beauty\":\"beauty\",\"biotech\":\"biotech\",\"blockchain\":\"blockchain\",\"books\":\"books\",\"business\":\"business\",\"cannabis\":\"cannabis\",\"cities\":\"cities\",\"climate-change\":\"climate-change\",\"comics\":\"comics\",\"coronavirus\":\"coronavirus\",\"creativity\":\"creativity\",\"cryptocurrency\":\"cryptocurrency\",\"culture\":\"culture\",\"cybersecurity\":\"cybersecurity\",\"data-science\":\"data-science\",\"design\":\"design\",\"digital-life\":\"digital-life\",\"disability\":\"disability\",\"economy\":\"economy\",\"education\":\"education\",\"equality\":\"equality\",\"family\":\"family\",\"feminism\":\"feminism\",\"fiction\":\"fiction\",\"film\":\"film\",\"fitness\":\"fitness\",\"food\":\"food\",\"freelancing\":\"freelancing\",\"future\":\"future\",\"gadgets\":\"gadgets\",\"gaming\":\"gaming\",\"gun-control\":\"gun-control\",\"health\":\"health\",\"history\":\"history\",\"humor\":\"humor\",\"immigration\":\"immigration\",\"ios-development\":\"ios-development\",\"javascript\":\"javascript\",\"justice\":\"justice\",\"language\":\"language\",\"leadership\":\"leadership\",\"lgbtqia\":\"lgbtqia\",\"lifestyle\":\"lifestyle\",\"machine-learning\":\"machine-learning\",\"makers\":\"makers\",\"marketing\":\"marketing\",\"math\":\"math\",\"media\":\"media\",\"mental-health\":\"mental-health\",\"mindfulness\":\"mindfulness\",\"money\":\"money\",\"music\":\"music\",\"neuroscience\":\"neuroscience\",\"nonfiction\":\"nonfiction\",\"outdoors\":\"outdoors\",\"parenting\":\"parenting\",\"pets\":\"pets\",\"philosophy\":\"philosophy\",\"photography\":\"photography\",\"podcasts\":\"podcast\",\"poetry\":\"poetry\",\"politics\":\"politics\",\"privacy\":\"privacy\",\"product-management\":\"product-management\",\"productivity\":\"productivity\",\"programming\":\"programming\",\"psychedelics\":\"psychedelics\",\"psychology\":\"psychology\",\"race\":\"race\",\"relationships\":\"relationships\",\"religion\":\"religion\",\"remote-work\":\"remote-work\",\"san-francisco\":\"san-francisco\",\"science\":\"science\",\"self\":\"self\",\"self-driving-cars\":\"self-driving-cars\",\"sexuality\":\"sexuality\",\"social-media\":\"social-media\",\"society\":\"society\",\"software-engineering\":\"software-engineering\",\"space\":\"space\",\"spirituality\":\"spirituality\",\"sports\":\"sports\",\"startups\":\"startup\",\"style\":\"style\",\"technology\":\"technology\",\"transportation\":\"transportation\",\"travel\":\"travel\",\"true-crime\":\"true-crime\",\"tv\":\"tv\",\"ux\":\"ux\",\"venture-capital\":\"venture-capital\",\"visual-design\":\"visual-design\",\"work\":\"work\",\"world\":\"world\",\"writing\":\"writing\"},\"defaultImages\":{\"avatar\":{\"imageId\":\"1*dmbNkD5D-u45r44go_cf0g.png\",\"height\":150,\"width\":150},\"orgLogo\":{\"imageId\":\"7*V1_7XP4snlmqrc_0Njontw.png\",\"height\":110,\"width\":500},\"postLogo\":{\"imageId\":\"bd978bb536350a710e8efb012513429cabdc4c28700604261aeda246d0f980b7\",\"height\":810,\"width\":1440},\"postPreviewImage\":{\"imageId\":\"1*hn4v1tCaJy7cWMyb0bpNpQ.png\",\"height\":386,\"width\":579}},\"collectionStructuredData\":{\"8d6b8a439e32\":{\"name\":\"Elemental\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fcdn-images-1.medium.com\\u002Fmax\\u002F980\\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png\",\"width\":980,\"height\":159}}},\"3f6ecf56618\":{\"name\":\"Forge\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fcdn-images-1.medium.com\\u002Fmax\\u002F596\\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png\",\"width\":596,\"height\":183}}},\"ae2a65f35510\":{\"name\":\"GEN\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F264\\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png\",\"width\":264,\"height\":140}}},\"88d9857e584e\":{\"name\":\"LEVEL\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F540\\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png\",\"width\":540,\"height\":108}}},\"7b6769f2748b\":{\"name\":\"Marker\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fcdn-images-1.medium.com\\u002Fmax\\u002F383\\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png\",\"width\":383,\"height\":92}}},\"444d13b52878\":{\"name\":\"OneZero\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F540\\u002F1*cw32fIqCbRWzwJaoQw6BUg.png\",\"width\":540,\"height\":123}}},\"8ccfed20cbb2\":{\"name\":\"Zora\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F540\\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png\",\"width\":540,\"height\":106}}}},\"embeddedPostIds\":{\"coronavirus\":\"cd3010f9d81f\"},\"sharedCdcMessaging\":{\"COVID_APPLICABLE_TAG_SLUGS\":[],\"COVID_APPLICABLE_TOPIC_NAMES\":[],\"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE\":[],\"COVID_MESSAGES\":{\"tierA\":{\"text\":\"For more information on the novel coronavirus and Covid-19, visit cdc.gov.\",\"markups\":[{\"start\":66,\"end\":73,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]},\"tierB\":{\"text\":\"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.\",\"markups\":[{\"start\":37,\"end\":45,\"href\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Fcategories\\u002F201931128-Policies-Safety\"},{\"start\":125,\"end\":132,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]},\"paywall\":{\"text\":\"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.\",\"markups\":[{\"start\":56,\"end\":70,\"href\":\"https:\\u002F\\u002Fmedium.com\\u002Fmembership\"},{\"start\":138,\"end\":145,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]},\"unbound\":{\"text\":\"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.\",\"markups\":[{\"start\":45,\"end\":59,\"href\":\"https:\\u002F\\u002Fmedium.com\\u002Fmembership\"},{\"start\":127,\"end\":134,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]}},\"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST\":[\"3b31a67bff4a\"]},\"sharedVoteMessaging\":{\"TAGS\":[\"politics\",\"election-2020\",\"government\",\"us-politics\",\"election\",\"2020-presidential-race\",\"trump\",\"donald-trump\",\"democrats\",\"republicans\",\"congress\",\"republican-party\",\"democratic-party\",\"biden\",\"joe-biden\",\"maga\"],\"TOPICS\":[\"politics\",\"election\"],\"MESSAGE\":{\"text\":\"Find out more about the U.S. election results here.\",\"markups\":[{\"start\":46,\"end\":50,\"href\":\"https:\\u002F\\u002Fcookpolitical.com\\u002F2020-national-popular-vote-tracker\"}]},\"EXCLUDE_POSTS\":[\"397ef29e3ca5\"]},\"embedPostRules\":[],\"recircOptions\":{\"v1\":{\"limit\":3},\"v2\":{\"limit\":8}},\"braintreeClientKey\":\"production_zjkj96jm_m56f8fqpf7ngnrd4\",\"braintree\":{\"enabled\":true,\"merchantId\":\"m56f8fqpf7ngnrd4\",\"merchantAccountId\":{\"usd\":\"AMediumCorporation_instant\",\"eur\":\"amediumcorporation_EUR\",\"cad\":\"amediumcorporation_CAD\"},\"publicKey\":\"ds2nn34bg2z7j5gd\",\"braintreeEnvironment\":\"production\",\"dashboardUrl\":\"https:\\u002F\\u002Fwww.braintreegateway.com\\u002Fmerchants\",\"gracePeriodDurationInDays\":14,\"mediumMembershipPlanId\":{\"monthly\":\"ce105f8c57a3\",\"monthlyV2\":\"e8a5e126-792b-4ee6-8fba-d574c1b02fc5\",\"monthlyWithTrial\":\"d5ee3dbe3db8\",\"monthlyPremium\":\"fa741a9b47a2\",\"yearly\":\"a40ad4a43185\",\"yearlyV2\":\"3815d7d6-b8ca-4224-9b8c-182f9047866e\",\"yearlyStaff\":\"d74fb811198a\",\"yearlyWithTrial\":\"b3bc7350e5c7\",\"yearlyPremium\":\"e21bd2c12166\",\"monthlyOneYearFree\":\"e6c0637a-2bad-4171-ab4f-3c268633d83c\",\"monthly25PercentOffFirstYear\":\"235ecc62-0cdb-49ae-9378-726cd21c504b\",\"monthly20PercentOffFirstYear\":\"ba518864-9c13-4a99-91ca-411bf0cac756\",\"monthly15PercentOffFirstYear\":\"594c029b-9f89-43d5-88f8-8173af4e070e\",\"monthly10PercentOffFirstYear\":\"c6c7bc9a-40f2-4b51-8126-e28511d5bdb0\",\"monthlyForStudents\":\"629ebe51-da7d-41fd-8293-34cd2f2030a8\",\"yearlyOneYearFree\":\"78ba7be9-0d9f-4ece-aa3e-b54b826f2bf1\",\"yearly25PercentOffFirstYear\":\"2dbb010d-bb8f-4eeb-ad5c-a08509f42d34\",\"yearly20PercentOffFirstYear\":\"47565488-435b-47f8-bf93-40d5fbe0ebc8\",\"yearly15PercentOffFirstYear\":\"8259809b-0881-47d9-acf7-6c001c7f720f\",\"yearly10PercentOffFirstYear\":\"9dd694fb-96e1-472c-8d9e-3c868d5c1506\",\"yearlyForStudents\":\"e29345ef-ab1c-4234-95c5-70e50fe6bc23\",\"monthlyCad\":\"p52orjkaceei\",\"yearlyCad\":\"h4q9g2up9ktt\"},\"braintreeDiscountId\":{\"oneMonthFree\":\"MONTHS_FREE_01\",\"threeMonthsFree\":\"MONTHS_FREE_03\",\"sixMonthsFree\":\"MONTHS_FREE_06\",\"fiftyPercentOffOneYear\":\"FIFTY_PERCENT_OFF_ONE_YEAR\"},\"3DSecureVersion\":\"2\",\"defaultCurrency\":\"usd\",\"providerPlanIdCurrency\":{\"4ycw\":\"usd\",\"rz3b\":\"usd\",\"3kqm\":\"usd\",\"jzw6\":\"usd\",\"c2q2\":\"usd\",\"nnsw\":\"usd\",\"q8qw\":\"usd\",\"d9y6\":\"usd\",\"fx7w\":\"cad\",\"nwf2\":\"cad\"}},\"paypalClientId\":\"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v\",\"paypal\":{\"host\":\"https:\\u002F\\u002Fapi.paypal.com:443\",\"clientMode\":\"production\",\"serverMode\":\"live\",\"webhookId\":\"4G466076A0294510S\",\"monthlyPlan\":{\"planId\":\"P-9WR0658853113943TMU5FDQA\",\"name\":\"Medium Membership (Monthly) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"yearlyPlan\":{\"planId\":\"P-7N8963881P8875835MU5JOPQ\",\"name\":\"Medium Membership (Annual) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"oneYearGift\":{\"name\":\"Medium Membership (1 Year, Digital Gift Code)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\\u002Fredeem.\",\"price\":\"50.00\",\"currency\":\"USD\",\"sku\":\"membership-gift-1-yr\"},\"oldMonthlyPlan\":{\"planId\":\"P-96U02458LM656772MJZUVH2Y\",\"name\":\"Medium Membership (Monthly)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"oldYearlyPlan\":{\"planId\":\"P-59P80963JF186412JJZU3SMI\",\"name\":\"Medium Membership (Annual)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"monthlyPlanWithTrial\":{\"planId\":\"P-66C21969LR178604GJPVKUKY\",\"name\":\"Medium Membership (Monthly) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"yearlyPlanWithTrial\":{\"planId\":\"P-6XW32684EX226940VKCT2MFA\",\"name\":\"Medium Membership (Annual) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"oldMonthlyPlanNoSetupFee\":{\"planId\":\"P-4N046520HR188054PCJC7LJI\",\"name\":\"Medium Membership (Monthly)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"oldYearlyPlanNoSetupFee\":{\"planId\":\"P-7A4913502Y5181304CJEJMXQ\",\"name\":\"Medium Membership (Annual)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"sdkUrl\":\"https:\\u002F\\u002Fwww.paypal.com\\u002Fsdk\\u002Fjs\"},\"stripePublishableKey\":\"pk_live_7FReX44VnNIInZwrIIx6ghjl\",\"log\":{\"json\":true,\"level\":\"info\"},\"imageUploadMaxSizeMb\":25,\"staffPicks\":{\"title\":\"Staff Picks\",\"catalogId\":\"c7bc6e1ee00f\"}},\"session\":{\"xsrf\":\"\"}}</script><script>window.__APOLLO_STATE__ = {\"ROOT_QUERY\":{\"__typename\":\"Query\",\"variantFlags\":[{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_client\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pre_pp_v4\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"limit_user_follows\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_image_sharer\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pill_based_home_feed\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_home_post_menu\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_explicit_signals_updated_post_previews\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rex_new_push_notification_endpoint\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tribute_landing_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_import\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_mastodon_avatar_upload\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_new_manage_membership_flow\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_recaptcha_enterprise\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_sharer_create_post_share_key\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_automod\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_google_one_tap\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_moc_load_processor_all_recs_surfaces\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_sharer_validate_post_share_key\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_remove_twitter_onboarding_step\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_friend_links_creation\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_moc_load_processor_c\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tag_recs\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_seamless_social_sharing\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pp_v4\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_update_explore_wtf\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_lists_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"browsable_stream_config_bucket\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"curated-topics\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_webhook\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_archive_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_recommended_publishers_query\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_server_upstream_deadlines\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_should_index_post_query\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_sprig\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_conversion_model_v2\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"group_2\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_intrinsic_automatic_actions\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pp_country_expansion\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_in_app_free_trial\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_lock_responses\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"reader_fair_distribution_non_qp\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_deprecate_legacy_providers_v3\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_members_only_audio\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_newsletter_lo_flow_custom_domains\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rex_aggregator_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_verifications_service\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_iceland_forced_android\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_offline_reading\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_speechify_ios\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_legacy_feed_in_iceland\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_susi_redesign_android\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"onboarding_tags_from_top_views\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"crm_send_contact_to_sendgrid\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_easy_resubscribe\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_eventstats_event_processing\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_iceland_nux\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_continue_this_thread\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_recirc_model\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rex_reading_history\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_google_pay\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_paypal\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_logo_update_phase3\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_mastodon_for_members_username_selection\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_simplified_digest_v2_b\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_social_share_sheet\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_creator_welcome_email\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"price_smoke_test_yearly\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_auto_follow_on_subscribe\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_dynamic_paywall_aspiriational\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"allow_signup\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_topic_portals\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_apple_sign_in\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_footer_app_buttons\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_homepage\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_verified_author\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lo_homepage\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"control\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tipping_v0_ios\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_dynamic_aspirational_paywall\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_new_stripe_customers\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"limit_post_referrers\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"allow_test_auth\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"disallow\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_bg_post_post\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_moc_load_processor_first_story\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_rating_prompt_stories_read_threshold\",\"valueType\":{\"__typename\":\"VariantFlagNumber\"}},{\"__typename\":\"VariantFlag\",\"name\":\"coronavirus_topic_recirc\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_friend_links_postpage_banners\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_author_cards_byline\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_aurora_pub_follower_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_verified_book_author\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"skip_fs_cache_user_vals\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_entities_to_follow_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_google_webhook\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_author_cards\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_configure_pronouns\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_starspace\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"available_monthly_premium_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"12a660186432\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_app_flirty_thirty\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_updated_digest_previews\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"allow_access\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_dynamic_programming_paywall\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_response_markup\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_friend_links_creation\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tipping_v0_android\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_apple_pay\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_cache_less_following_feed\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_medium2_kbfd\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"mobile_custom_app_icon\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_apple_webhook\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_branch_io\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_premium_tier\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_friend_links_postpage_banners\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_marketing_emails\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"glyph_font_set\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"m2-unbound-source-serif-pro\"}},{\"__typename\":\"VariantFlag\",\"name\":\"can_send_tips_v0\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_miro_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_maim_the_meter\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_premium_tier_badge\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"signin_services\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"twitter,facebook,google,email,google-fastidv,google-one-tap,apple\"}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_display_paywall_after_onboarding\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_editor_new_publishing_flow\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_offline_reading\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"reengagement_notification_duration\",\"valueType\":{\"__typename\":\"VariantFlagNumber\"}},{\"__typename\":\"VariantFlag\",\"name\":\"available_annual_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"2c754bcc2995\"}},{\"__typename\":\"VariantFlag\",\"name\":\"rex_generator_max_candidates\",\"valueType\":{\"__typename\":\"VariantFlagNumber\"}},{\"__typename\":\"VariantFlag\",\"name\":\"redefined_top_posts\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_group_gifting\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_mastodon_for_members\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tick_landing_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"can_receive_tips_v0\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rito_upstream_deadlines\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_syntax_highlight\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_dynamic_paywall_programming\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_update_topic_portals_wtf\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"price_smoke_test_monthly\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"\"}},{\"__typename\":\"VariantFlag\",\"name\":\"android_two_hour_refresh\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_diversification_rex\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_autorefresh\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_integration\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_explicit_signals\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ml_rank_rex_anno\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_see_pronouns\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_switch_plan_premium_tier\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_speechify_widget\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"available_annual_premium_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"4a442ace1476\"}},{\"__typename\":\"VariantFlag\",\"name\":\"disable_partner_program_enrollment\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_trial_membership\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_updated_pub_recs_ui\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"textshots_userid\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_susi_redesign_ios\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"signup_services\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"twitter,facebook,google,email,google-fastidv,google-one-tap,apple\"}},{\"__typename\":\"VariantFlag\",\"name\":\"available_monthly_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"60e220181034\"}}],\"viewer\":null,\"collectionByDomainOrSlug({\\\"domainOrSlug\\\":\\\"blog.stackademic.com\\\"})\":{\"__ref\":\"Collection:d1baaa8417a4\"},\"postResult({\\\"id\\\":\\\"eb4071cded30\\\"})\":{\"__ref\":\"Post:eb4071cded30\"}},\"ImageMetadata:1*PHy3rMit8grpdoTXxC9aaw.png\":{\"__typename\":\"ImageMetadata\",\"id\":\"1*PHy3rMit8grpdoTXxC9aaw.png\"},\"Collection:d1baaa8417a4\":{\"__typename\":\"Collection\",\"id\":\"d1baaa8417a4\",\"favicon\":{\"__ref\":\"ImageMetadata:1*PHy3rMit8grpdoTXxC9aaw.png\"},\"customStyleSheet\":{\"__ref\":\"CustomStyleSheet:35f28f62bf26\"},\"colorPalette\":{\"__typename\":\"ColorPalette\",\"highlightSpectrum\":{\"__typename\":\"ColorSpectrum\",\"backgroundColor\":\"#FFFFFFFF\",\"colorPoints\":[{\"__typename\":\"ColorPoint\",\"color\":\"#FFFFFFFF\",\"point\":0},{\"__typename\":\"ColorPoint\",\"color\":\"#FFE8F3E8\",\"point\":0.1},{\"__typename\":\"ColorPoint\",\"color\":\"#FFE8F3E8\",\"point\":0.2},{\"__typename\":\"ColorPoint\",\"color\":\"#FFD1E7D1\",\"point\":0.6},{\"__typename\":\"ColorPoint\",\"color\":\"#FFA3D0A2\",\"point\":1}]},\"defaultBackgroundSpectrum\":{\"__typename\":\"ColorSpectrum\",\"backgroundColor\":\"#FFFFFFFF\",\"colorPoints\":[{\"__typename\":\"ColorPoint\",\"color\":\"#FF1A8917\",\"point\":0},{\"__typename\":\"ColorPoint\",\"color\":\"#FF11800E\",\"point\":0.1},{\"__typename\":\"ColorPoint\",\"color\":\"#FF0F730C\",\"point\":0.2},{\"__typename\":\"ColorPoint\",\"color\":\"#FF095407\",\"point\":1}]},\"tintBackgroundSpectrum\":null},\"googleAnalyticsId\":null,\"editors\":[{\"__typename\":\"CollectionMastheadUserItem\",\"user\":{\"__ref\":\"User:a7b125868703\"}},{\"__typename\":\"CollectionMastheadUserItem\",\"user\":{\"__ref\":\"User:d44045e01651\"}},{\"__typename\":\"CollectionMastheadUserItem\",\"user\":{\"__ref\":\"User:5fddac2241fc\"}}],\"name\":\"Stackademic\",\"avatar\":{\"__ref\":\"ImageMetadata:1*U-kjsW7IZUobnoy1gAp1UQ.png\"},\"domain\":\"blog.stackademic.com\",\"slug\":\"stackademic\",\"description\":\"Stackademic is a learning hub for programmers, devs, coders, and engineers. Our goal is to democratize free coding education for the world.\",\"subscriberCount\":11764,\"viewerEdge\":{\"__ref\":\"CollectionViewerEdge:collectionId:d1baaa8417a4-viewerId:lo_2b0fb1b54663\"},\"twitterUsername\":\"stackademichq\",\"facebookPageId\":null,\"logo\":{\"__ref\":\"ImageMetadata:1*U-kjsW7IZUobnoy1gAp1UQ.png\"}},\"CustomStyleSheet:35f28f62bf26\":{\"__typename\":\"CustomStyleSheet\",\"id\":\"35f28f62bf26\",\"global\":{\"__typename\":\"GlobalStyles\",\"colorPalette\":null,\"fonts\":{\"__typename\":\"StyleSheetFonts\",\"font1\":{\"__typename\":\"StyleSheetFont\",\"name\":\"SANS_SERIF_1\"},\"font2\":{\"__typename\":\"StyleSheetFont\",\"name\":\"SANS_SERIF_1\"},\"font3\":{\"__typename\":\"StyleSheetFont\",\"name\":\"SERIF_2\"}}},\"header\":{\"__typename\":\"HeaderStyles\",\"backgroundImage\":null}},\"User:a7b125868703\":{\"__typename\":\"User\",\"id\":\"a7b125868703\"},\"User:d44045e01651\":{\"__typename\":\"User\",\"id\":\"d44045e01651\"},\"User:5fddac2241fc\":{\"__typename\":\"User\",\"id\":\"5fddac2241fc\"},\"ImageMetadata:1*U-kjsW7IZUobnoy1gAp1UQ.png\":{\"__typename\":\"ImageMetadata\",\"id\":\"1*U-kjsW7IZUobnoy1gAp1UQ.png\",\"originalWidth\":287,\"originalHeight\":287},\"LinkedAccounts:f2cfcdc5c71\":{\"__typename\":\"LinkedAccounts\",\"mastodon\":null,\"id\":\"f2cfcdc5c71\"},\"UserViewerEdge:userId:f2cfcdc5c71-viewerId:lo_2b0fb1b54663\":{\"__typename\":\"UserViewerEdge\",\"id\":\"userId:f2cfcdc5c71-viewerId:lo_2b0fb1b54663\",\"isFollowing\":false,\"isUser\":false,\"isMuting\":false},\"NewsletterV3:ca6d34bf839d\":{\"__typename\":\"NewsletterV3\",\"id\":\"ca6d34bf839d\",\"type\":\"NEWSLETTER_TYPE_AUTHOR\",\"slug\":\"f2cfcdc5c71\",\"name\":\"f2cfcdc5c71\",\"collection\":null,\"user\":{\"__ref\":\"User:f2cfcdc5c71\"}},\"User:f2cfcdc5c71\":{\"__typename\":\"User\",\"id\":\"f2cfcdc5c71\",\"name\":\"Mundhraumang\",\"username\":\"mundhraumang.02\",\"newsletterV3\":{\"__ref\":\"NewsletterV3:ca6d34bf839d\"},\"linkedAccounts\":{\"__ref\":\"LinkedAccounts:f2cfcdc5c71\"},\"isSuspended\":false,\"imageId\":\"0*1pfy5SWOFKWfx4rM\",\"mediumMemberAt\":0,\"verifications\":{\"__typename\":\"VerifiedInfo\",\"isBookAuthor\":false},\"socialStats\":{\"__typename\":\"SocialStats\",\"followerCount\":75},\"customDomainState\":null,\"hasSubdomain\":false,\"bio\":\"\",\"isPartnerProgramEnrolled\":false,\"viewerEdge\":{\"__ref\":\"UserViewerEdge:userId:f2cfcdc5c71-viewerId:lo_2b0fb1b54663\"},\"viewerIsUser\":false,\"postSubscribeMembershipUpsellShownAt\":0,\"allowNotes\":true,\"twitterScreenName\":\"\",\"membership\":null},\"Paragraph:d6b84d41a5ec_0\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_0\",\"name\":\"40b9\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"ImageMetadata:1*E-Fpb9HhcKKlz6W7AsW2LA.png\":{\"__typename\":\"ImageMetadata\",\"id\":\"1*E-Fpb9HhcKKlz6W7AsW2LA.png\",\"originalHeight\":1010,\"originalWidth\":1316,\"focusPercentX\":null,\"focusPercentY\":null,\"alt\":null},\"Paragraph:d6b84d41a5ec_1\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_1\",\"name\":\"9007\",\"type\":\"IMG\",\"href\":null,\"layout\":\"INSET_CENTER\",\"metadata\":{\"__ref\":\"ImageMetadata:1*E-Fpb9HhcKKlz6W7AsW2LA.png\"},\"text\":\"\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_2\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_2\",\"name\":\"fe50\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial. Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":481,\"end\":482,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_3\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_3\",\"name\":\"49a1\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr, an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":154,\"end\":158,\"href\":\"https:\\u002F\\u002Fgofr.dev\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_4\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_4\",\"name\":\"f696\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr & It’s rich set of features:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_5\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_5\",\"name\":\"c04f\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_6\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_6\",\"name\":\"56ef\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"1. Efficient Configuration Management\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_7\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_7\",\"name\":\"9fed\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":205,\"end\":222,\"href\":\"https:\\u002F\\u002F12factor.net\\u002Fconfig\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_8\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_8\",\"name\":\"efcc\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":220,\"end\":224,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":241,\"end\":249,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_9\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_9\",\"name\":\"5e48\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Here is the full list of environment variables supported by GoFr:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":17,\"end\":64,\"href\":\"https:\\u002F\\u002Fgofr.dev\\u002Fdocs\\u002Freferences\\u002Fconfigs\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_10\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_10\",\"name\":\"403b\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"2. Seamless Database Interactions\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_11\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_11\",\"name\":\"b858\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_12\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_12\",\"name\":\"49ea\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of using MySQL and Redis DB inside the handler.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":55,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":55,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_13\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_13\",\"name\":\"aad0\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"func DBHandler(c *gofr.Context) (interface{}, error) {\\n var value int\\n\\n\\u002F\\u002F querying a SQL db\\nerr := c.SQL.QueryRowContext(c, \\\"select 2+2\\\").Scan(&value)\\n if err != nil {\\n  return nil, datasource.ErrorDB{Err: err, Message: \\\"error from sql db\\\"}\\n }\\n\\n\\u002F\\u002F retrieving value from Redis\\n _, err = c.Redis.Get(c, \\\"test\\\").Result()\\n if err != nil && !errors.Is(err, redis.Nil) {\\n  return nil, datasource.ErrorDB{Err: err, Message: \\\"error from redis db\\\"}\\n }\\n\\n return value, nil\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_14\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_14\",\"name\":\"bfaa\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"3. Implementing Publisher-Subscriber architecture with ease:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_15\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_15\",\"name\":\"2fad\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr simplifies Pub\\u002FSub by offering built-in support for popular clients like Kafka, Google Pub\\u002FSub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub\\u002FSub pattern from scratch.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_16\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_16\",\"name\":\"1449\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of using Publisher and Subscriber in a GoFr application:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":64,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":64,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_17\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_17\",\"name\":\"9145\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"package main\\n\\nimport (\\n \\\"encoding\\u002Fjson\\\"\\n\\n \\\"gofr.dev\\u002Fpkg\\u002Fgofr\\\"\\n)\\n\\nfunc main() {\\n app := gofr.New()\\n\\n app.POST(\\\"\\u002Fpublish-product\\\", product)\\n\\n\\u002F\\u002F subscribing to products topic\\n app.Subscribe(\\\"products\\\", func(c *gofr.Context) error {\\n  var productInfo struct {\\n   ProductId string `json:\\\"productId\\\"`\\n   Price     string `json:\\\"price\\\"`\\n  }\\n\\n  err := c.Bind(&productInfo)\\n  if err != nil {\\n   c.Logger.Error(err)\\n\\n   return nil\\n  }\\n\\n  c.Logger.Info(\\\"Received product \\\", productInfo)\\n\\n  return nil\\n })\\n\\n app.Run()\\n}\\n\\nfunc product(ctx *gofr.Context) (interface{}, error) {\\n type productInfo struct {\\n  ProductId string `json:\\\"productId\\\"`\\n  Price     string `json:\\\"price\\\"`\\n }\\n\\n var data productInfo\\n\\n\\u002F\\u002F binding the request data to productInfo struct\\n err := ctx.Bind(&data)\\n if err != nil {\\n  return nil, err\\n }\\n\\n msg, _ := json.Marshal(data)\\n\\n\\u002F\\u002F publishing message to producst topic using gofr context\\n err = ctx.GetPublisher().Publish(ctx, \\\"products\\\", msg)\\n if err != nil {\\n  return nil, err\\n }\\n\\n return \\\"Published\\\", nil\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_18\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_18\",\"name\":\"76a0\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"4. Out of the Box Observability:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_19\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_19\",\"name\":\"a957\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_20\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_20\",\"name\":\"13c4\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Detailed Logging: GoFr offers structured logging with various log levels (INFO, DEBUG, WARN, ERROR, FATAL) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":17,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":74,\"end\":78,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":80,\"end\":85,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":87,\"end\":91,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":93,\"end\":98,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":100,\"end\":105,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_21\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_21\",\"name\":\"a0f3\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":19,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_22\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_22\",\"name\":\"f545\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger. Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":72,\"end\":78,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":83,\"end\":89,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":20,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_23\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_23\",\"name\":\"29e3\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_24\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_24\",\"name\":\"4abf\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"5. Effortless Interservice HTTP Communication:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_25\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_25\",\"name\":\"f639\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":300,\"end\":314,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_26\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_26\",\"name\":\"dcd6\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Configurational Options for HTTP Services:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":41,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_27\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_27\",\"name\":\"3a89\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr offers a variety of configuration options to enhance interservice communication:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_28\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_28\",\"name\":\"3b37\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Authentication: Supports APIKeyConfig, BasicAuthConfig, and OAuthConfig for secure authentication.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":14,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":25,\"end\":37,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":39,\"end\":54,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_29\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_29\",\"name\":\"aa22\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Default Headers: Allows setting default headers for all downstream HTTP service requests.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":15,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_30\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_30\",\"name\":\"3242\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Circuit Breaker: Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":15,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_31\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_31\",\"name\":\"dbf0\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Health Checks: Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":13,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_32\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_32\",\"name\":\"5664\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"These features ensure that interservice communication is secure, reliable, and easily manageable.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_33\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_33\",\"name\":\"26aa\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of connecting to a HTTP Service and sending a GET request:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":66,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":66,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_34\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_34\",\"name\":\"b1c1\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"func main() {\\n a := gofr.New()\\n\\n a.AddHTTPService(\\\"cat-facts\\\", \\\"https:\\u002F\\u002Fcatfact.ninja\\\",\\n  &service.CircuitBreakerConfig{\\n   Threshold: 4,\\n   Interval:  1 * time.Second,\\n  },\\n  &service.HealthConfig{\\n   HealthEndpoint: \\\"breeds\\\",\\n  },\\n )\\n\\na.GET(\\\"\\u002Ffact\\\", Handler)\\n\\n a.Run()\\n}\\n\\nfunc Handler(c *gofr.Context) (any, error) {\\n var data = struct {\\n  Fact   string `json:\\\"fact\\\"`\\n  Length int    `json:\\\"length\\\"`\\n }{}\\n\\n var catFacts = c.GetHTTPService(\\\"cat-facts\\\")\\n\\n resp, err := catFacts.Get(c, \\\"fact\\\", map[string]interface{}{\\n  \\\"max_length\\\": 20,\\n })\\n if err != nil {\\n  return nil, err\\n }\\n\\n b, _ := io.ReadAll(resp.Body)\\n err = json.Unmarshal(b, &data)\\n if err != nil {\\n  return nil, err\\n }\\n\\n return data, nil\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_35\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_35\",\"name\":\"d4e6\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"6. Flexible Middleware Support for Enhanced Control:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_36\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_36\",\"name\":\"cb4e\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_37\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_37\",\"name\":\"9e31\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr empowers developers with middleware support, allowing for request\\u002Fresponse manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":317,\"end\":330,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":410,\"end\":446,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_38\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_38\",\"name\":\"ad5c\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of adding a custom middleware to GoFr application:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":58,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":58,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_39\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_39\",\"name\":\"08a5\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"import (\\n    \\\"net\\u002Fhttp\\\"\\n\\n    gofrHTTP \\\"gofr.dev\\u002Fpkg\\u002Fgofr\\u002Fhttp\\\"\\n)\\n\\n\\u002F\\u002F Define your custom middleware function\\nfunc customMiddleware() gofrHTTP.Middleware {\\n    return func(inner http.Handler) http.Handler {\\n        return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\\n            \\u002F\\u002F Your custom logic here\\n            \\u002F\\u002F For example, logging, authentication, etc.\\n            \\n            \\u002F\\u002F Call the next handler in the chain\\n            inner.ServeHTTP(w, r)\\n        })\\n    }\\n}\\n\\nfunc main() {\\n    \\u002F\\u002F Create a new instance of your GoFr application\\n    app := gofr.New()\\n\\n    \\u002F\\u002F Add your custom middleware to the application\\n    app.UseMiddleware(customMiddleware())\\n\\n    \\u002F\\u002F Define your application routes and handlers\\n    \\u002F\\u002F ...\\n\\n    \\u002F\\u002F Run your GoFr application\\n    app.Run()\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_40\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_40\",\"name\":\"c5b9\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"7. Integrated Authentication Mechanisms:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_41\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_41\",\"name\":\"456e\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_42\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_42\",\"name\":\"cb39\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme. It involves sending the prefix Basic trailed by the Base64-encoded \\u003Cusername\\u003E:\\u003Cpassword\\u003E within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":152,\"end\":157,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":188,\"end\":209,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":230,\"end\":243,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":84,\"end\":119,\"href\":\"https:\\u002F\\u002Fdatatracker.ietf.org\\u002Fdoc\\u002Fhtml\\u002Frfc7617\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":11,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_43\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_43\",\"name\":\"e7ff\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":15,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":15,\"end\":37,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_44\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_44\",\"name\":\"f9b8\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256\\u002F384\\u002F512.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":276,\"end\":282,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":332,\"end\":345,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":411,\"end\":424,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":11,\"end\":16,\"href\":\"https:\\u002F\\u002Fwww.rfc-editor.org\\u002Frfc\\u002Frfc6749\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":11,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_45\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_45\",\"name\":\"17cc\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Refer to the GoFr’s Authentication Documentation to see the examples of how to use these auth mechanisms and know more about it.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":13,\"end\":48,\"href\":\"https:\\u002F\\u002Fgofr.dev\\u002Fdocs\\u002Fadvanced-guide\\u002Fhttp-authentication\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":13,\"end\":49,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":13,\"end\":49,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_46\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_46\",\"name\":\"aef4\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"8. Automatic Swagger UI Rendering:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_47\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_47\",\"name\":\"cd37\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":303,\"end\":318,\"href\":\"https:\\u002F\\u002Fswagger.io\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_48\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_48\",\"name\":\"9c13\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the \\u002F.well-known\\u002Fswagger endpoint.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":242,\"end\":254,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":271,\"end\":277,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":369,\"end\":389,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_49\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_49\",\"name\":\"5d57\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Conclusion\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_50\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_50\",\"name\":\"d4c6\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub\\u002FSub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_51\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_51\",\"name\":\"3bc6\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_52\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_52\",\"name\":\"c357\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_53\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_53\",\"name\":\"76a9\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Get started with GoFr today!\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":28,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_54\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_54\",\"name\":\"2f19\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Here are some helpful resources:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":32,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_55\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_55\",\"name\":\"2860\",\"type\":\"BQ\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr Website: https:\\u002F\\u002Fgofr.dev\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":14,\"end\":30,\"href\":\"https:\\u002F\\u002Fgofr.dev\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_56\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_56\",\"name\":\"dd1d\",\"type\":\"BQ\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr GitHub Repository: https:\\u002F\\u002Fgithub.com\\u002Fgofr-dev\\u002Fgofr\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":24,\"end\":56,\"href\":\"https:\\u002F\\u002Fgithub.com\\u002Fgofr-dev\\u002Fgofr\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_57\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_57\",\"name\":\"31d2\",\"type\":\"BQ\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr Discord Server: https:\\u002F\\u002Fdiscord.gg\\u002FzyJkVhps\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":21,\"end\":48,\"href\":\"https:\\u002F\\u002Fdiscord.gg\\u002FzyJkVhps\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_58\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_58\",\"name\":\"db72\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Stackademic 🎓\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_59\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_59\",\"name\":\"7f50\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Thank you for reading until the end. Before you go:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_60\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_60\",\"name\":\"90fe\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Please consider clapping and following the writer! 👏\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":16,\"end\":24,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":29,\"end\":38,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_61\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_61\",\"name\":\"823b\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Follow us X | LinkedIn | YouTube | Discord\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":10,\"end\":11,\"href\":\"https:\\u002F\\u002Ftwitter.com\\u002Fstackademichq\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":14,\"end\":22,\"href\":\"https:\\u002F\\u002Fwww.linkedin.com\\u002Fcompany\\u002Fstackademic\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":25,\"end\":32,\"href\":\"https:\\u002F\\u002Fwww.youtube.com\\u002Fc\\u002Fstackademic\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":35,\"end\":42,\"href\":\"https:\\u002F\\u002Fdiscord.gg\\u002Fin-plain-english-709094664682340443\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":10,\"end\":11,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":14,\"end\":22,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":25,\"end\":32,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":35,\"end\":42,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_62\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_62\",\"name\":\"3a6c\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Visit our other platforms: In Plain English | CoFeed | Differ\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":27,\"end\":43,\"href\":\"https:\\u002F\\u002Fplainenglish.io\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":46,\"end\":52,\"href\":\"https:\\u002F\\u002Fcofeed.app\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":55,\"end\":61,\"href\":\"https:\\u002F\\u002Fdiffer.blog\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":27,\"end\":43,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":46,\"end\":52,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":55,\"end\":61,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_63\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_63\",\"name\":\"09a3\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"More content at Stackademic.com\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":16,\"end\":31,\"href\":\"https:\\u002F\\u002Fstackademic.com\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":16,\"end\":31,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"CollectionViewerEdge:collectionId:d1baaa8417a4-viewerId:lo_2b0fb1b54663\":{\"__typename\":\"CollectionViewerEdge\",\"id\":\"collectionId:d1baaa8417a4-viewerId:lo_2b0fb1b54663\",\"isEditor\":false,\"isMuting\":false},\"PostViewerEdge:postId:eb4071cded30-viewerId:lo_2b0fb1b54663\":{\"__typename\":\"PostViewerEdge\",\"shouldIndexPostForExternalSearch\":true,\"id\":\"postId:eb4071cded30-viewerId:lo_2b0fb1b54663\"},\"Tag:backend\":{\"__typename\":\"Tag\",\"id\":\"backend\",\"displayTitle\":\"Backend\",\"normalizedTagSlug\":\"backend\"},\"Tag:technology\":{\"__typename\":\"Tag\",\"id\":\"technology\",\"displayTitle\":\"Technology\",\"normalizedTagSlug\":\"technology\"},\"Tag:golang\":{\"__typename\":\"Tag\",\"id\":\"golang\",\"displayTitle\":\"Golang\",\"normalizedTagSlug\":\"golang\"},\"Tag:microservices\":{\"__typename\":\"Tag\",\"id\":\"microservices\",\"displayTitle\":\"Microservices\",\"normalizedTagSlug\":\"microservices\"},\"Tag:framework\":{\"__typename\":\"Tag\",\"id\":\"framework\",\"displayTitle\":\"Framework\",\"normalizedTagSlug\":\"framework\"},\"Post:eb4071cded30\":{\"__typename\":\"Post\",\"id\":\"eb4071cded30\",\"collection\":{\"__ref\":\"Collection:d1baaa8417a4\"},\"content({\\\"postMeteringOptions\\\":{}})\":{\"__typename\":\"PostContent\",\"isLockedPreviewOnly\":false,\"bodyModel\":{\"__typename\":\"RichText\",\"sections\":[{\"__typename\":\"Section\",\"name\":\"2fc6\",\"startIndex\":0,\"textLayout\":null,\"imageLayout\":null,\"backgroundImage\":null,\"videoLayout\":null,\"backgroundVideo\":null},{\"__typename\":\"Section\",\"name\":\"cc93\",\"startIndex\":4,\"textLayout\":null,\"imageLayout\":null,\"backgroundImage\":null,\"videoLayout\":null,\"backgroundVideo\":null},{\"__typename\":\"Section\",\"name\":\"99a5\",\"startIndex\":49,\"textLayout\":null,\"imageLayout\":null,\"backgroundImage\":null,\"videoLayout\":null,\"backgroundVideo\":null}],\"paragraphs\":[{\"__ref\":\"Paragraph:d6b84d41a5ec_0\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_1\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_2\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_3\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_4\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_5\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_6\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_7\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_8\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_9\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_10\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_11\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_12\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_13\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_14\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_15\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_16\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_17\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_18\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_19\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_20\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_21\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_22\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_23\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_24\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_25\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_26\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_27\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_28\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_29\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_30\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_31\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_32\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_33\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_34\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_35\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_36\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_37\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_38\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_39\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_40\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_41\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_42\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_43\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_44\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_45\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_46\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_47\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_48\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_49\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_50\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_51\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_52\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_53\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_54\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_55\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_56\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_57\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_58\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_59\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_60\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_61\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_62\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_63\"}]},\"validatedShareKey\":\"\",\"shareKeyCreator\":null},\"creator\":{\"__ref\":\"User:f2cfcdc5c71\"},\"inResponseToEntityType\":null,\"isLocked\":false,\"isMarkedPaywallOnly\":false,\"lockedSource\":\"LOCKED_POST_SOURCE_NONE\",\"mediumUrl\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"primaryTopic\":null,\"topics\":[{\"__typename\":\"Topic\",\"slug\":\"programming\"}],\"isPublished\":true,\"latestPublishedVersion\":\"d6b84d41a5ec\",\"visibility\":\"PUBLIC\",\"postResponses\":{\"__typename\":\"PostResponses\",\"count\":5},\"clapCount\":272,\"allowResponses\":true,\"isLimitedState\":false,\"title\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"isSeries\":false,\"sequence\":null,\"uniqueSlug\":\"the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"socialTitle\":\"\",\"socialDek\":\"\",\"canonicalUrl\":\"\",\"metaDescription\":\"\",\"latestPublishedAt\":1720596287939,\"readingTime\":7.445283018867925,\"previewContent\":{\"__typename\":\"PreviewContent\",\"subtitle\":\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of…\"},\"previewImage\":{\"__ref\":\"ImageMetadata:1*E-Fpb9HhcKKlz6W7AsW2LA.png\"},\"isShortform\":false,\"seoTitle\":\"\",\"firstPublishedAt\":1720533602981,\"updatedAt\":1721060798814,\"shortformType\":\"SHORTFORM_TYPE_LINK\",\"seoDescription\":\"Discover GoFr, the ultimate Golang framework for microservices. Learn about its powerful features, ease of use, and optimal performance compared to other frameworks\",\"viewerEdge\":{\"__ref\":\"PostViewerEdge:postId:eb4071cded30-viewerId:lo_2b0fb1b54663\"},\"isSuspended\":false,\"license\":\"ALL_RIGHTS_RESERVED\",\"tags\":[{\"__ref\":\"Tag:backend\"},{\"__ref\":\"Tag:technology\"},{\"__ref\":\"Tag:golang\"},{\"__ref\":\"Tag:microservices\"},{\"__ref\":\"Tag:framework\"}],\"isNewsletter\":false,\"statusForCollection\":\"APPROVED\",\"pendingCollection\":null,\"detectedLanguage\":\"en\",\"wordCount\":1920,\"layerCake\":1}}</script><script src=\"https://cdn-client.medium.com/lite/static/js/manifest.d16a4979.js\"></script><script src=\"https://cdn-client.medium.com/lite/static/js/9865.1496d74a.js\"></script><script src=\"https://cdn-client.medium.com/lite/static/js/main.433d740d.js\"></script><script src=\"https://cdn-client.medium.com/lite/static/js/instrumentation.d9108df7.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/reporting.ff22a7a5.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/9120.5df29668.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5049.d1ead72d.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/4810.6318add7.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6618.db187378.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/1386.014e2ad3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/9977.343f5002.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5250.fc15c18c.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/8261.80c0631e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/7975.b019beb1.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2648.a582e725.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2712.0f6c85f5.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2793.01d2b056.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/1530.e5ec276e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/3735.ca2f95e3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5642.0ebb50fd.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6546.ef575ba6.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6834.f2d3924e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2420.0330d157.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2106.21ff89d3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6696.92b2dfc3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5832.a567559e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/3366.1571a1d5.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6040.6ceb7f43.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/4391.fd55a702.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.fcf5bceb.chunk.js\"></script><script>window.main();</script><script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML=\"window.__CF$cv$params={r:'8c348f1c2bb796ab',t:'MTcyNjM2MDc2MC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);\";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body></html>",
  "html": "<!doctype html><html lang=\"en\"><head><title data-rh=\"true\">The Ultimate Golang Framework for Microservices: GoFr | by Mundhraumang | Stackademic</title><meta data-rh=\"true\" charset=\"utf-8\"/><meta data-rh=\"true\" name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1\"/><meta data-rh=\"true\" name=\"theme-color\" content=\"#000000\"/><meta data-rh=\"true\" name=\"twitter:app:name:iphone\" content=\"Medium\"/><meta data-rh=\"true\" name=\"twitter:app:id:iphone\" content=\"828256236\"/><meta data-rh=\"true\" property=\"al:ios:app_name\" content=\"Medium\"/><meta data-rh=\"true\" property=\"al:ios:app_store_id\" content=\"828256236\"/><meta data-rh=\"true\" property=\"al:android:package\" content=\"com.medium.reader\"/><meta data-rh=\"true\" property=\"fb:app_id\" content=\"542599432471018\"/><meta data-rh=\"true\" property=\"og:site_name\" content=\"Medium\"/><meta data-rh=\"true\" property=\"og:type\" content=\"article\"/><meta data-rh=\"true\" property=\"article:published_time\" content=\"2024-07-10T07:24:47.939Z\"/><meta data-rh=\"true\" name=\"title\" content=\"The Ultimate Golang Framework for Microservices: GoFr | by Mundhraumang | Stackademic\"/><meta data-rh=\"true\" property=\"og:title\" content=\"The Ultimate Golang Framework for Microservices: GoFr\"/><meta data-rh=\"true\" property=\"al:android:url\" content=\"medium://p/eb4071cded30\"/><meta data-rh=\"true\" property=\"al:ios:url\" content=\"medium://p/eb4071cded30\"/><meta data-rh=\"true\" property=\"al:android:app_name\" content=\"Medium\"/><meta data-rh=\"true\" name=\"description\" content=\"Discover GoFr, the ultimate Golang framework for microservices. Learn about its powerful features, ease of use, and optimal performance compared to other frameworks\"/><meta data-rh=\"true\" property=\"og:description\" content=\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of…\"/><meta data-rh=\"true\" property=\"og:url\" content=\"https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"/><meta data-rh=\"true\" property=\"al:web:url\" content=\"https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"/><meta data-rh=\"true\" property=\"og:image\" content=\"https://miro.medium.com/v2/resize:fit:1200/1*E-Fpb9HhcKKlz6W7AsW2LA.png\"/><meta data-rh=\"true\" property=\"article:author\" content=\"https://medium.com/@mundhraumang.02\"/><meta data-rh=\"true\" name=\"author\" content=\"Mundhraumang\"/><meta data-rh=\"true\" name=\"robots\" content=\"index,noarchive,follow,max-image-preview:large\"/><meta data-rh=\"true\" name=\"referrer\" content=\"unsafe-url\"/><meta data-rh=\"true\" property=\"twitter:title\" content=\"The Ultimate Golang Framework for Microservices: GoFr\"/><meta data-rh=\"true\" name=\"twitter:site\" content=\"@stackademichq\"/><meta data-rh=\"true\" name=\"twitter:app:url:iphone\" content=\"medium://p/eb4071cded30\"/><meta data-rh=\"true\" property=\"twitter:description\" content=\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of…\"/><meta data-rh=\"true\" name=\"twitter:image:src\" content=\"https://miro.medium.com/v2/resize:fit:1200/1*E-Fpb9HhcKKlz6W7AsW2LA.png\"/><meta data-rh=\"true\" name=\"twitter:card\" content=\"summary_large_image\"/><meta data-rh=\"true\" name=\"twitter:label1\" content=\"Reading time\"/><meta data-rh=\"true\" name=\"twitter:data1\" content=\"8 min read\"/><link data-rh=\"true\" rel=\"icon\" href=\"https://miro.medium.com/v2/resize:fill:256:256/1*PHy3rMit8grpdoTXxC9aaw.png\"/><link data-rh=\"true\" rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"Medium\" href=\"/osd.xml\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"https://miro.medium.com/v2/resize:fill:304:304/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"https://miro.medium.com/v2/resize:fill:240:240/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"https://miro.medium.com/v2/resize:fill:152:152/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"https://miro.medium.com/v2/resize:fill:120:120/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156\"/><link data-rh=\"true\" rel=\"mask-icon\" href=\"https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png\" color=\"#171717\"/><link data-rh=\"true\" id=\"glyph_preload_link\" rel=\"preload\" as=\"style\" type=\"text/css\" href=\"https://glyph.medium.com/css/unbound.css\"/><link data-rh=\"true\" id=\"glyph_link\" rel=\"stylesheet\" type=\"text/css\" href=\"https://glyph.medium.com/css/unbound.css\"/><link data-rh=\"true\" rel=\"author\" href=\"https://medium.com/@mundhraumang.02\"/><link data-rh=\"true\" rel=\"canonical\" href=\"https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"/><link data-rh=\"true\" rel=\"alternate\" href=\"android-app://com.medium.reader/https/medium.com/p/eb4071cded30\"/><script data-rh=\"true\" type=\"application/ld+json\">{\"@context\":\"http:\\u002F\\u002Fschema.org\",\"@type\":\"NewsArticle\",\"image\":[\"https:\\u002F\\u002Fmiro.medium.com\\u002Fv2\\u002Fresize:fit:1200\\u002F1*E-Fpb9HhcKKlz6W7AsW2LA.png\"],\"url\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"dateCreated\":\"2024-07-09T14:00:02.981Z\",\"datePublished\":\"2024-07-09T14:00:02.981Z\",\"dateModified\":\"2024-07-15T16:26:38.814Z\",\"headline\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"name\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"description\":\"Discover GoFr, the ultimate Golang framework for microservices. Learn about its powerful features, ease of use, and optimal performance compared to other frameworks\",\"identifier\":\"eb4071cded30\",\"author\":{\"@type\":\"Person\",\"name\":\"Mundhraumang\",\"url\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002F@mundhraumang.02\"},\"creator\":[\"Mundhraumang\"],\"publisher\":{\"@type\":\"Organization\",\"name\":\"Stackademic\",\"url\":\"blog.stackademic.com\",\"logo\":{\"@type\":\"ImageObject\",\"width\":60,\"height\":60,\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fv2\\u002Fresize:fit:120\\u002F1*U-kjsW7IZUobnoy1gAp1UQ.png\"}},\"mainEntityOfPage\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\"}</script><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"STATIC\">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden=\"true\"]{visibility:hidden;pointer-events:none}.grecaptcha-badge{visibility:hidden}\n/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;\n}/* Gray DOCTYPE selectors like WebKit */\n.xml .hljs-meta {color: #c0c0c0;\n}.hljs-comment,\n.hljs-quote {color: #007400;\n}.hljs-tag,\n.hljs-attribute,\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-literal,\n.hljs-name {color: #aa0d91;\n}.hljs-variable,\n.hljs-template-variable {color: #3F6E74;\n}.hljs-code,\n.hljs-string,\n.hljs-meta .hljs-string {color: #c41a16;\n}.hljs-regexp,\n.hljs-link {color: #0E0EFF;\n}.hljs-title,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-number {color: #1c00cf;\n}.hljs-section,\n.hljs-meta {color: #643820;\n}.hljs-title.class_,\n.hljs-class .hljs-title,\n.hljs-type,\n.hljs-built_in,\n.hljs-params {color: #5c2699;\n}.hljs-attr {color: #836C28;\n}.hljs-subst {color: #000;\n}.hljs-formula {background-color: #eee;font-style: italic;\n}.hljs-addition {background-color: #baeeba;\n}.hljs-deletion {background-color: #ffc8bd;\n}.hljs-selector-id,\n.hljs-selector-class {color: #9b703f;\n}.hljs-doctag,\n.hljs-strong {font-weight: bold;\n}.hljs-emphasis {font-style: italic;\n}\n</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"KEYFRAME\">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{width:auto}.av path{fill:#242424}.aw{height:25px}.ax{margin-left:16px}.ay{border:none}.az{border-radius:20px}.ba{width:240px}.bb{background:#F9F9F9}.bc path{fill:#6B6B6B}.be{outline:none}.bf{font-family:sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif}.bg{font-size:14px}.bh{width:100%}.bi{padding:10px 20px 10px 0}.bj{background-color:transparent}.bk{color:#242424}.bl::placeholder{color:#6B6B6B}.bm{display:inline-block}.bn{margin-left:12px}.bo{margin-right:12px}.bp{border-radius:4px}.bq{margin-left:24px}.br{height:24px}.bx{background-color:#F9F9F9}.by{border-radius:50%}.bz{height:32px}.ca{width:32px}.cb{justify-content:center}.ch{max-width:680px}.ci{min-width:0}.cj{animation:k1 1.2s ease-in-out infinite}.ck{height:100vh}.cl{margin-bottom:16px}.cm{margin-top:48px}.cn{align-items:flex-start}.co{flex-direction:column}.cp{justify-content:space-between}.cq{margin-bottom:24px}.cw{width:80%}.cx{background-color:#F2F2F2}.dd{height:44px}.de{width:44px}.df{margin:auto 0}.dg{margin-bottom:4px}.dh{height:16px}.di{width:120px}.dj{width:80px}.dp{margin-bottom:8px}.dq{width:96%}.dr{width:98%}.ds{width:81%}.dt{margin-left:8px}.du{color:#6B6B6B}.dv{font-size:13px}.dw{height:100%}.ep{color:#FFFFFF}.eq{fill:#FFFFFF}.er{background:#1A8917}.es{border-color:#1A8917}.ew:disabled{cursor:inherit !important}.ex:disabled{opacity:0.3}.ey:disabled:hover{background:#1A8917}.ez:disabled:hover{border-color:#1A8917}.fa{border-radius:99em}.fb{border-width:1px}.fc{border-style:solid}.fd{box-sizing:border-box}.fe{text-decoration:none}.ff{text-align:center}.fi{margin-right:32px}.fj{position:relative}.fk{fill:#6B6B6B}.fn{background:transparent}.fo svg{margin-left:4px}.fp svg{fill:#6B6B6B}.fr{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.fs{position:absolute}.fz{margin:0 24px}.gd{background:rgba(255, 255, 255, 1)}.ge{border:1px solid #F2F2F2}.gf{box-shadow:0 1px 4px #F2F2F2}.gg{max-height:100vh}.gh{overflow-y:auto}.gi{left:0}.gj{top:calc(100vh + 100px)}.gk{bottom:calc(100vh + 100px)}.gl{width:10px}.gm{pointer-events:none}.gn{word-break:break-word}.go{word-wrap:break-word}.gp:after{display:block}.gq:after{content:\"\"}.gr:after{clear:both}.gs{line-height:1.23}.gt{letter-spacing:0}.gu{font-style:normal}.gv{font-weight:700}.ia{align-items:baseline}.ib{width:48px}.ic{height:48px}.id{border:2px solid rgba(255, 255, 255, 1)}.ie{z-index:0}.if{box-shadow:none}.ig{border:1px solid rgba(0, 0, 0, 0.05)}.ih{margin-left:-12px}.ii{width:28px}.ij{height:28px}.ik{z-index:1}.il{width:24px}.im{margin-bottom:2px}.in{flex-wrap:nowrap}.io{font-size:16px}.ip{line-height:24px}.ir{margin:0 8px}.is{display:inline}.it{color:#1A8917}.iu{fill:#1A8917}.ix{flex:0 0 auto}.ja{flex-wrap:wrap}.jd{white-space:pre-wrap}.je{margin-right:4px}.jf{overflow:hidden}.jg{max-height:20px}.jh{text-overflow:ellipsis}.ji{display:-webkit-box}.jj{-webkit-line-clamp:1}.jk{-webkit-box-orient:vertical}.jl{word-break:break-all}.jn{padding-left:8px}.jo{padding-right:8px}.kp> *{flex-shrink:0}.kq{overflow-x:scroll}.kr::-webkit-scrollbar{display:none}.ks{scrollbar-width:none}.kt{-ms-overflow-style:none}.ku{width:74px}.kv{flex-direction:row}.kw{z-index:2}.kz{-webkit-user-select:none}.la{border:0}.lb{fill:rgba(117, 117, 117, 1)}.le{outline:0}.lf{user-select:none}.lg> svg{pointer-events:none}.lp{cursor:progress}.lq{margin-left:4px}.lr{margin-top:0px}.ls{opacity:1}.lt{padding:4px 0}.lw{width:16px}.ly{display:inline-flex}.me{max-width:100%}.mf{padding:8px 2px}.mg svg{color:#6B6B6B}.mx{margin-left:auto}.my{margin-right:auto}.mz{max-width:1316px}.nf{clear:both}.nh{cursor:zoom-in}.ni{z-index:auto}.nk{height:auto}.nl{line-height:1.58}.nm{letter-spacing:-0.004em}.nn{font-family:source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times, serif}.oi{margin-bottom:-0.46em}.oj{text-decoration:underline}.ok{margin-top:32px}.ol{margin-bottom:14px}.om{padding-top:24px}.on{padding-bottom:10px}.oo{background-color:#000000}.op{height:3px}.oq{width:3px}.or{margin-right:20px}.os{line-height:1.12}.ot{letter-spacing:-0.022em}.ou{font-weight:600}.pp{margin-bottom:-0.28em}.pv{line-height:1.18}.qj{margin-bottom:-0.31em}.qk{padding:2px 4px}.ql{font-size:75%}.qm> strong{font-family:inherit}.qn{font-family:source-code-pro, Menlo, Monaco, \"Courier New\", Courier, monospace}.qo{font-style:italic}.qu{overflow-x:auto}.qv{padding:32px}.qw{border:1px solid #E5E5E5}.qx{line-height:1.4}.qy{margin-top:-0.2em}.qz{margin-bottom:-0.2em}.ra{white-space:pre}.rb{min-width:fit-content}.rc{list-style-type:disc}.rd{margin-left:30px}.re{padding-left:0px}.rk{box-shadow:inset 3px 0 0 0 #242424}.rl{padding-left:23px}.rm{margin-left:-20px}.rs{margin-bottom:26px}.rt{margin-top:6px}.ru{margin-top:8px}.rv{margin-right:8px}.rw{padding:8px 16px}.rx{border-radius:100px}.ry{transition:background 300ms ease}.sa{white-space:nowrap}.sb{border-top:none}.sh{height:52px}.si{max-height:52px}.sj{box-sizing:content-box}.sk{position:static}.sm{max-width:155px}.sx{align-items:flex-end}.sy{width:76px}.sz{height:76px}.ta{border:2px solid #F9F9F9}.tb{height:72px}.tc{width:72px}.td{margin-left:-16px}.te{width:36px}.tf{height:36px}.tg{stroke:#F2F2F2}.th{color:#F2F2F2}.ti{fill:#F2F2F2}.tj{background:#F2F2F2}.tk{border-color:#F2F2F2}.tq{font-weight:500}.tr{font-size:24px}.ts{line-height:30px}.tt{letter-spacing:-0.016em}.tu{margin-top:16px}.tv{height:0px}.tw{border-bottom:solid 1px #E5E5E5}.tx{margin-top:72px}.ty{padding:24px 0}.tz{margin-bottom:0px}.ua{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.et:hover{background:#156D12}.eu:hover{border-color:#156D12}.ev:hover{cursor:pointer}.fl:hover{color:#242424}.fm:hover{fill:#242424}.fq:hover svg{fill:#242424}.ft:hover{background-color:rgba(0, 0, 0, 0.1)}.iq:hover{text-decoration:underline}.iv:hover:not(:disabled){color:#156D12}.iw:hover:not(:disabled){fill:#156D12}.ld:hover{fill:rgba(8, 8, 8, 1)}.lu:hover{fill:#000000}.lv:hover p{color:#000000}.lx:hover{color:#000000}.mh:hover svg{color:#000000}.rz:hover{background-color:#F2F2F2}.tl:hover{background:#F2F2F2}.tm:hover{border-color:#F2F2F2}.tn:hover{cursor:wait}.to:hover{color:#F2F2F2}.tp:hover{fill:#F2F2F2}.bd:focus-within path{fill:#242424}.lc:focus{fill:rgba(8, 8, 8, 1)}.mi:focus svg{color:#000000}.nj:focus{transform:scale(1.01)}.lh:active{border-style:none}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 1080px)\">.d{display:none}.bw{width:64px}.cg{margin:0 64px}.cv{height:48px}.dc{margin-bottom:52px}.do{margin-bottom:48px}.ef{font-size:14px}.eg{line-height:20px}.em{font-size:13px}.eo{padding:5px 12px}.fh{display:flex}.fy{margin-bottom:68px}.gc{max-width:680px}.hq{font-size:42px}.hr{margin-top:1.19em}.hs{margin-bottom:32px}.ht{line-height:52px}.hu{letter-spacing:-0.011em}.hz{align-items:center}.kb{border-top:solid 1px #F2F2F2}.kc{border-bottom:solid 1px #F2F2F2}.kd{margin:32px 0 0}.ke{padding:3px 8px}.kn> *{margin-right:24px}.ko> :last-child{margin-right:0}.lo{margin-top:0px}.md{margin:0}.ne{margin-top:40px}.oe{font-size:20px}.of{margin-top:2.14em}.og{line-height:32px}.oh{letter-spacing:-0.003em}.pl{font-size:24px}.pm{margin-top:1.25em}.pn{line-height:30px}.po{letter-spacing:-0.016em}.pu{margin-top:0.94em}.qg{margin-top:1.72em}.qh{line-height:24px}.qi{letter-spacing:0}.qt{margin-top:56px}.rj{margin-top:1.14em}.rr{margin-top:1.95em}.sg{margin-bottom:88px}.sr{display:inline-block}.sw{padding-top:72px}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 1079.98px)\">.e{display:none}.ln{margin-top:0px}.sq{display:inline-block}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 903.98px)\">.f{display:none}.lm{margin-top:0px}.sp{display:inline-block}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 727.98px)\">.g{display:none}.lk{margin-top:0px}.ll{margin-right:0px}.so{display:inline-block}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (max-width: 551.98px)\">.h{display:none}.s{display:flex}.t{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dx{font-size:13px}.dy{line-height:20px}.eh{padding:0px 8px 1px}.fu{margin-bottom:4px}.gw{font-size:32px}.gx{margin-top:1.01em}.gy{margin-bottom:24px}.gz{line-height:38px}.ha{letter-spacing:-0.014em}.hv{align-items:flex-start}.iy{flex-direction:column}.jb{margin-bottom:2px}.jp{margin:24px -24px 0}.jq{padding:0}.kf> *{margin-right:8px}.kg> :last-child{margin-right:24px}.kx{margin-left:0px}.li{margin-top:0px}.lj{margin-right:0px}.lz{margin:0}.mj{border:1px solid #F2F2F2}.mk{border-radius:99em}.ml{padding:0px 16px 0px 12px}.mm{height:38px}.mn{align-items:center}.mp svg{margin-right:8px}.na{margin-top:32px}.no{font-size:18px}.np{margin-top:1.56em}.nq{line-height:28px}.nr{letter-spacing:-0.003em}.ov{font-size:20px}.ow{margin-top:0.93em}.ox{line-height:24px}.oy{letter-spacing:0}.pq{margin-top:0.67em}.pw{font-size:16px}.px{margin-top:1.23em}.qp{margin-top:40px}.rf{margin-top:1.34em}.rn{margin-top:1.2em}.sc{margin-bottom:80px}.sn{display:inline-block}.ss{padding-top:48px}.mo:hover{border-color:#E5E5E5}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 904px) and (max-width: 1079.98px)\">.i{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ed{font-size:14px}.ee{line-height:20px}.ek{font-size:13px}.el{padding:5px 12px}.fg{display:flex}.fx{margin-bottom:68px}.gb{max-width:680px}.hl{font-size:42px}.hm{margin-top:1.19em}.hn{margin-bottom:32px}.ho{line-height:52px}.hp{letter-spacing:-0.011em}.hy{align-items:center}.jx{border-top:solid 1px #F2F2F2}.jy{border-bottom:solid 1px #F2F2F2}.jz{margin:32px 0 0}.ka{padding:3px 8px}.kl> *{margin-right:24px}.km> :last-child{margin-right:0}.mc{margin:0}.nd{margin-top:40px}.oa{font-size:20px}.ob{margin-top:2.14em}.oc{line-height:32px}.od{letter-spacing:-0.003em}.ph{font-size:24px}.pi{margin-top:1.25em}.pj{line-height:30px}.pk{letter-spacing:-0.016em}.pt{margin-top:0.94em}.qd{margin-top:1.72em}.qe{line-height:24px}.qf{letter-spacing:0}.qs{margin-top:56px}.ri{margin-top:1.14em}.rq{margin-top:1.95em}.sf{margin-bottom:88px}.sv{padding-top:72px}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 728px) and (max-width: 903.98px)\">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bu{width:64px}.ce{margin:0 48px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{font-size:13px}.ec{line-height:20px}.ej{padding:0px 8px 1px}.fw{margin-bottom:68px}.ga{max-width:680px}.hg{font-size:42px}.hh{margin-top:1.19em}.hi{margin-bottom:32px}.hj{line-height:52px}.hk{letter-spacing:-0.011em}.hx{align-items:center}.jt{border-top:solid 1px #F2F2F2}.ju{border-bottom:solid 1px #F2F2F2}.jv{margin:32px 0 0}.jw{padding:3px 8px}.kj> *{margin-right:24px}.kk> :last-child{margin-right:0}.mb{margin:0}.nc{margin-top:40px}.nw{font-size:20px}.nx{margin-top:2.14em}.ny{line-height:32px}.nz{letter-spacing:-0.003em}.pd{font-size:24px}.pe{margin-top:1.25em}.pf{line-height:30px}.pg{letter-spacing:-0.016em}.ps{margin-top:0.94em}.qa{margin-top:1.72em}.qb{line-height:24px}.qc{letter-spacing:0}.qr{margin-top:56px}.rh{margin-top:1.14em}.rp{margin-top:1.95em}.se{margin-bottom:88px}.su{padding-top:72px}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"all and (min-width: 552px) and (max-width: 727.98px)\">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bt{width:24px}.cd{margin:0 24px}.cs{height:40px}.cz{margin-bottom:44px}.dl{margin-bottom:32px}.dz{font-size:13px}.ea{line-height:20px}.ei{padding:0px 8px 1px}.fv{margin-bottom:4px}.hb{font-size:32px}.hc{margin-top:1.01em}.hd{margin-bottom:24px}.he{line-height:38px}.hf{letter-spacing:-0.014em}.hw{align-items:flex-start}.iz{flex-direction:column}.jc{margin-bottom:2px}.jr{margin:24px 0 0}.js{padding:0}.kh> *{margin-right:8px}.ki> :last-child{margin-right:8px}.ky{margin-left:0px}.ma{margin:0}.mq{border:1px solid #F2F2F2}.mr{border-radius:99em}.ms{padding:0px 16px 0px 12px}.mt{height:38px}.mu{align-items:center}.mw svg{margin-right:8px}.nb{margin-top:32px}.ns{font-size:18px}.nt{margin-top:1.56em}.nu{line-height:28px}.nv{letter-spacing:-0.003em}.oz{font-size:20px}.pa{margin-top:0.93em}.pb{line-height:24px}.pc{letter-spacing:0}.pr{margin-top:0.67em}.py{font-size:16px}.pz{margin-top:1.23em}.qq{margin-top:40px}.rg{margin-top:1.34em}.ro{margin-top:1.2em}.sd{margin-bottom:80px}.st{padding-top:48px}.mv:hover{border-color:#E5E5E5}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"print\">.sl{display:none}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"(orientation: landscape) and (max-width: 903.98px)\">.jm{max-height:none}</style><style type=\"text/css\" data-fela-rehydration=\"546\" data-fela-type=\"RULE\" media=\"(prefers-reduced-motion: no-preference)\">.ng{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id=\"root\"><div class=\"a b c\"><div class=\"d e f g h i j k\"></div><script>document.domain = document.domain;</script><div class=\"l c\"><div class=\"l m n o c\"><div class=\"p q r s t u v w x i d y z\"><a class=\"du ag dv bf ak b am an ao ap aq ar as at s u w i d q dw z\" href=\"https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Feb4071cded30&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderCollection&amp;source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\">Open in app<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" fill=\"none\" viewBox=\"0 0 10 10\" class=\"dt\"><path fill=\"currentColor\" d=\"M.985 8.485a.375.375 0 1 0 .53.53zM8.75 1.25h.375A.375.375 0 0 0 8.75.875zM8.375 6.5a.375.375 0 1 0 .75 0zM3.5.875a.375.375 0 1 0 0 .75zm-1.985 8.14 7.5-7.5-.53-.53-7.5 7.5zm6.86-7.765V6.5h.75V1.25zM3.5 1.625h5.25v-.75H3.5z\"></path></svg></a><div class=\"ab q\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff\" data-testid=\"headerSignUpButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign up</a></span></p><div class=\"ax l\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSignInButton\" href=\"https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign in</a></span></p></div></div></div><div class=\"p q r ab ac\"><div class=\"ab q ae\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at ab\" aria-label=\"Homepage\" data-testid=\"headerMediumLogo\" href=\"https://medium.com/?source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"719\" height=\"160\" fill=\"none\" viewBox=\"0 0 719 160\" class=\"au av aw\"><path fill=\"#242424\" d=\"m174.104 9.734.215-.047V8.02H130.39L89.6 103.89 48.81 8.021H1.472v1.666l.212.047c8.018 1.81 12.09 4.509 12.09 14.242V137.93c0 9.734-4.087 12.433-12.106 14.243l-.212.047v1.671h32.118v-1.665l-.213-.048c-8.018-1.809-12.089-4.509-12.089-14.242V30.586l52.399 123.305h2.972l53.925-126.743V140.75c-.687 7.688-4.721 10.062-11.982 11.701l-.215.05v1.652h55.948v-1.652l-.215-.05c-7.269-1.639-11.4-4.013-12.087-11.701l-.037-116.774h.037c0-9.733 4.071-12.432 12.087-14.242m25.555 75.488c.915-20.474 8.268-35.252 20.606-35.507 3.806.063 6.998 1.312 9.479 3.714 5.272 5.118 7.751 15.812 7.368 31.793zm-.553 5.77h65.573v-.275c-.186-15.656-4.721-27.834-13.466-36.196-7.559-7.227-18.751-11.203-30.507-11.203h-.263c-6.101 0-13.584 1.48-18.909 4.16-6.061 2.807-11.407 7.003-15.855 12.511-7.161 8.874-11.499 20.866-12.554 34.343q-.05.606-.092 1.212a50 50 0 0 0-.065 1.151 85.807 85.807 0 0 0-.094 5.689c.71 30.524 17.198 54.917 46.483 54.917 25.705 0 40.675-18.791 44.407-44.013l-1.886-.664c-6.557 13.556-18.334 21.771-31.738 20.769-18.297-1.369-32.314-19.922-31.042-42.395m139.722 41.359c-2.151 5.101-6.639 7.908-12.653 7.908s-11.513-4.129-15.418-11.63c-4.197-8.053-6.405-19.436-6.405-32.92 0-28.067 8.729-46.22 22.24-46.22 5.657 0 10.111 2.807 12.236 7.704zm43.499 20.008c-8.019-1.897-12.089-4.722-12.089-14.951V1.309l-48.716 14.353v1.757l.299-.024c6.72-.543 11.278.386 13.925 2.83 2.072 1.915 3.082 4.853 3.082 8.987v18.66c-4.803-3.067-10.516-4.56-17.448-4.56-14.059 0-26.909 5.92-36.176 16.672-9.66 11.205-14.767 26.518-14.767 44.278-.003 31.72 15.612 53.039 38.851 53.039 13.595 0 24.533-7.449 29.54-20.013v16.865h43.711v-1.746zM424.1 19.819c0-9.904-7.468-17.374-17.375-17.374-9.859 0-17.573 7.632-17.573 17.374s7.721 17.374 17.573 17.374c9.907 0 17.375-7.47 17.375-17.374m11.499 132.546c-8.019-1.897-12.089-4.722-12.089-14.951h-.035V43.635l-43.714 12.551v1.705l.263.024c9.458.842 12.047 4.1 12.047 15.152v81.086h43.751v-1.746zm112.013 0c-8.018-1.897-12.089-4.722-12.089-14.951V43.635l-41.621 12.137v1.71l.246.026c7.733.813 9.967 4.257 9.967 15.36v59.279c-2.578 5.102-7.415 8.131-13.274 8.336-9.503 0-14.736-6.419-14.736-18.073V43.638l-43.714 12.55v1.703l.262.024c9.459.84 12.05 4.097 12.05 15.152v50.17a56.3 56.3 0 0 0 .91 10.444l.787 3.423c3.701 13.262 13.398 20.197 28.59 20.197 12.868 0 24.147-7.966 29.115-20.43v17.311h43.714v-1.747zm169.818 1.788v-1.749l-.213-.05c-8.7-2.006-12.089-5.789-12.089-13.49v-63.79c0-19.89-11.171-31.761-29.883-31.761-13.64 0-25.141 7.882-29.569 20.16-3.517-13.01-13.639-20.16-28.606-20.16-13.146 0-23.449 6.938-27.869 18.657V43.643L545.487 55.68v1.715l.263.024c9.345.829 12.047 4.181 12.047 14.95v81.784h40.787v-1.746l-.215-.053c-6.941-1.631-9.181-4.606-9.181-12.239V66.998c1.836-4.289 5.537-9.37 12.853-9.37 9.086 0 13.692 6.296 13.692 18.697v77.828h40.797v-1.746l-.215-.053c-6.94-1.631-9.18-4.606-9.18-12.239V75.066a42 42 0 0 0-.578-7.26c1.947-4.661 5.86-10.177 13.475-10.177 9.214 0 13.691 6.114 13.691 18.696v77.828z\"></path></svg></a><div class=\"ax h\"><div class=\"ab ay az ba bb q bc bd\"><div class=\"bm\" aria-hidden=\"false\" aria-describedby=\"searchResults\" aria-labelledby=\"searchResults\"></div><div class=\"bn bo ab\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z\" clip-rule=\"evenodd\"></path></svg></div><input role=\"combobox\" aria-controls=\"searchResults\" aria-expanded=\"false\" aria-label=\"search\" data-testid=\"headerSearchInput\" tabindex=\"0\" class=\"ay be bf bg z bh bi bj bk bl\" placeholder=\"Search\" value=\"\"/></div></div></div><div class=\"h k w fg fh\"><div class=\"fi ab\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerWriteButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---two_column_layout_nav-----------------------new_post_topnav-----------\" rel=\"noopener follow\"><div class=\"bf b bg z du fj fk ab q fl fm\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" aria-label=\"Write\"><path fill=\"currentColor\" d=\"M14 4a.5.5 0 0 0 0-1zm7 6a.5.5 0 0 0-1 0zm-7-7H4v1h10zM3 4v16h1V4zm1 17h16v-1H4zm17-1V10h-1v10zm-1 1a1 1 0 0 0 1-1h-1zM3 20a1 1 0 0 0 1 1v-1zM4 3a1 1 0 0 0-1 1h1z\"></path><path stroke=\"currentColor\" d=\"m17.5 4.5-8.458 8.458a.25.25 0 0 0-.06.098l-.824 2.47a.25.25 0 0 0 .316.316l2.47-.823a.25.25 0 0 0 .098-.06L19.5 6.5m-2-2 2.323-2.323a.25.25 0 0 1 .354 0l1.646 1.646a.25.25 0 0 1 0 .354L19.5 6.5m-2-2 2 2\"></path></svg><div class=\"dt l\">Write</div></div></a></span></div></div><div class=\"k j i d\"><div class=\"fi ab\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSearchButton\" href=\"https://medium.com/search?source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\"><div class=\"bf b bg z du fj fk ab q fl fm\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" aria-label=\"Search\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z\" clip-rule=\"evenodd\"></path></svg></div></a></div></div><div class=\"fi h k j\"><div class=\"ab q\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff\" data-testid=\"headerSignUpButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign up</a></span></p><div class=\"ax l\"><p class=\"bf b dx dy dz ea eb ec ed ee ef eg du\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSignInButton\" href=\"https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign in</a></span></p></div></div></div><div class=\"l\" aria-hidden=\"false\"><button class=\"ay fn am ab q ao fo fp fq\" aria-label=\"user options menu\" data-testid=\"headerUserIcon\"><div class=\"l fj\"><img alt=\"\" class=\"l fd by bz ca cx\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png\" width=\"32\" height=\"32\" loading=\"lazy\" role=\"presentation\"/><div class=\"fr by l bz ca fs n ay ft\"></div></div></button></div></div></div><div class=\"l\"><div class=\"fu fv fw fx fy l\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"></div></div><article><div class=\"l\"><div class=\"l\"><span class=\"l\"></span><section><div><div class=\"fs gi gj gk gl gm\"></div><div class=\"gn go gp gq gr\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div><h1 id=\"40b9\" class=\"pw-post-title gs gt gu bf gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hk hl hm hn ho hp hq hr hs ht hu bk\" data-testid=\"storyTitle\">The Ultimate Golang Framework for Microservices: GoFr</h1><div><div class=\"speechify-ignore ab cp\"><div class=\"speechify-ignore bh l\"><div class=\"hv hw hx hy hz ab\"><div><div class=\"ab ia\"><a href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l ib ic by id ie\"><div class=\"l fj\"><img alt=\"Mundhraumang\" class=\"l fd by dd de cx\" src=\"https://miro.medium.com/v2/da:true/resize:fill:88:88/0*1pfy5SWOFKWfx4rM\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/><div class=\"if by l dd de fs n ig ft\"></div></div></div></div></div></a><a href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener  ugc nofollow\"><div class=\"ih ab fj\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l ii ij by id ik\"><div class=\"l fj\"><img alt=\"Stackademic\" class=\"l fd by br il cx\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*U-kjsW7IZUobnoy1gAp1UQ.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/><div class=\"if by l br il fs n ig ft\"></div></div></div></div></div></div></a></div></div><div class=\"bn bh l\"><div class=\"ab\"><div style=\"flex:1\"><span class=\"bf b bg z bk\"><div class=\"im ab q\"><div class=\"ab q in\"><div class=\"ab q\"><div><div class=\"bm\" aria-hidden=\"false\"><p class=\"bf b io ip bk\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq\" data-testid=\"authorName\" href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\">Mundhraumang</a></p></div></div></div><span class=\"ir is\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span><p class=\"bf b io ip du\"><span><a class=\"it iu ah ai aj ak al am an ao ap aq ar ex iv iw\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------post_header-----------\" rel=\"noopener follow\">Follow</a></span></p></div></div></span></div></div><div class=\"l ix\"><span class=\"bf b bg z du\"><div class=\"ab cn iy iz ja\"><div class=\"jb jc ab\"><div class=\"bf b bg z du ab jd\"><span class=\"je l ix\">Published in</span><div><div class=\"l\" aria-hidden=\"false\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq ab q\" data-testid=\"publicationName\" href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener  ugc nofollow\"><p class=\"bf b bg z jf jg jh ji jj jk jl jm bk\">Stackademic</p></a></div></div></div><div class=\"h k\"><span class=\"ir is\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span></div></div><span class=\"bf b bg z du\"><div class=\"ab ae\"><span data-testid=\"storyReadTime\">8 min read</span><div class=\"jn jo l\" aria-hidden=\"true\"><span class=\"l\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span></div><span data-testid=\"storyPublishDate\">Jul 9, 2024</span></div></span></div></span></div></div></div><div class=\"ab cp jp jq jr js jt ju jv jw jx jy jz ka kb kc kd ke\"><div class=\"h k w fg fh q\"><div class=\"ku l\"><div class=\"ab q kv kw\"><div class=\"pw-multi-vote-icon fj je kx ky kz\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z\" clip-rule=\"evenodd\"></path></svg></div></div></div></a></span></div><div class=\"pw-multi-vote-count l li lj lk ll lm ln lo\"><p class=\"bf b dv z du\"><span class=\"lp\">--</span></p></div></div></div><div><div class=\"bm\" aria-hidden=\"false\"><button class=\"ao la ls lt ab q fk lu lv\" aria-label=\"responses\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" class=\"lr\"><path d=\"M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z\"></path></svg><p class=\"bf b dv z du\"><span class=\"pw-responses-count lq lr\">5</span></p></button></div></div></div><div class=\"ab q kf kg kh ki kj kk kl km kn ko kp kq kr ks kt\"><div class=\"lw k j i d\"></div><div class=\"h k\"><div><div class=\"bm\" aria-hidden=\"false\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerBookmarkButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=-----eb4071cded30---------------------bookmark_footer-----------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"none\" viewBox=\"0 0 25 25\" class=\"du lx\" aria-label=\"Add to list bookmark button\"><path fill=\"currentColor\" d=\"M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z\"></path></svg></a></span></div></div></div><div class=\"fd ly cn\"><div class=\"l ae\"><div class=\"ab cb\"><div class=\"lz ma mb mc md me ci bh\"><div class=\"ab\"><div class=\"bm bh\" aria-hidden=\"false\"><div><div class=\"bm\" aria-hidden=\"false\"><button aria-label=\"Listen\" data-testid=\"audioPlayButton\" class=\"af fk ah ai aj ak al mf an ao ap ex mg mh lv mi mj mk ml mm s mn mo mp mq mr ms mt u mu mv mw\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0m9-10C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2m3.376 10.416-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416l4.599 3.066a.5.5 0 0 1 0 .832\" clip-rule=\"evenodd\"></path></svg><div class=\"j i d\"><p class=\"bf b bg z du\">Listen</p></div></button></div></div></div></div></div></div></div></div><div class=\"bm\" aria-hidden=\"false\" aria-describedby=\"postFooterSocialMenu\" aria-labelledby=\"postFooterSocialMenu\"><div><div class=\"bm\" aria-hidden=\"false\"><button aria-controls=\"postFooterSocialMenu\" aria-expanded=\"false\" aria-label=\"Share Post\" data-testid=\"headerSocialShareButton\" class=\"af fk ah ai aj ak al mf an ao ap ex mg mh lv mi mj mk ml mm s mn mo mp mq mr ms mt u mu mv mw\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1\" clip-rule=\"evenodd\"></path></svg><div class=\"j i d\"><p class=\"bf b bg z du\">Share</p></div></button></div></div></div></div></div></div></div></div></div><figure class=\"na nb nc nd ne nf mx my paragraph-image\"><div role=\"button\" tabindex=\"0\" class=\"ng nh fj ni bh nj\"><div class=\"mx my mz\"><picture><source srcSet=\"https://miro.medium.com/v2/resize:fit:640/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\" type=\"image/webp\"/><source data-testid=\"og\" srcSet=\"https://miro.medium.com/v2/resize:fit:640/1*E-Fpb9HhcKKlz6W7AsW2LA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*E-Fpb9HhcKKlz6W7AsW2LA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*E-Fpb9HhcKKlz6W7AsW2LA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*E-Fpb9HhcKKlz6W7AsW2LA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*E-Fpb9HhcKKlz6W7AsW2LA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*E-Fpb9HhcKKlz6W7AsW2LA.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\"/><img alt=\"\" class=\"bh me nk c\" width=\"700\" height=\"538\" loading=\"eager\" role=\"presentation\"/></picture></div></div></figure><p id=\"fe50\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.<strong class=\"nn gv\"> </strong>Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves.</p><p id=\"49a1\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about <a class=\"af oj\" href=\"https://gofr.dev\" rel=\"noopener ugc nofollow\" target=\"_blank\">GoFr</a>, an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!</p></div></div></div><div class=\"ab cb ok ol om on\" role=\"separator\"><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq\"></span></div><div class=\"gn go gp gq gr\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><h1 id=\"f696\" class=\"os ot gu bf ou ov ow ox oy oz pa pb pc pd pe pf pg ph pi pj pk pl pm pn po pp bk\">GoFr &amp; It’s rich set of features:</h1><p id=\"c04f\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features:</p><h2 id=\"56ef\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">1. Efficient Configuration Management</h2><p id=\"9fed\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the <a class=\"af oj\" href=\"https://12factor.net/config\" rel=\"noopener ugc nofollow\" target=\"_blank\">Twelve-Factor App</a> methodology and enables applications to be built with portability.</p><p id=\"efcc\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an <code class=\"cx qk ql qm qn b\">.env</code> file inside the <strong class=\"nn gv\">configs </strong>directory of the application and GoFr automatically reads the values from that.</p><p id=\"5e48\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Here is the full <a class=\"af oj\" href=\"https://gofr.dev/docs/references/configs\" rel=\"noopener ugc nofollow\" target=\"_blank\">list of environment variables supported by GoFr</a>:</p><h2 id=\"403b\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">2. Seamless Database Interactions</h2><p id=\"b858\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases.</p><p id=\"49ea\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of using MySQL and Redis DB inside the handler.</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"aad0\" class=\"qx ot gu qn b bg qy qz l ra rb\">func DBHandler(c *gofr.Context) (interface{}, error) {<br/> var value int<br/><br/>// querying a SQL db<br/>err := c.SQL.QueryRowContext(c, &quot;select 2+2&quot;).Scan(&amp;value)<br/> if err != nil {<br/>  return nil, datasource.ErrorDB{Err: err, Message: &quot;error from sql db&quot;}<br/> }<br/><br/>// retrieving value from Redis<br/> _, err = c.Redis.Get(c, &quot;test&quot;).Result()<br/> if err != nil &amp;&amp; !errors.Is(err, redis.Nil) {<br/>  return nil, datasource.ErrorDB{Err: err, Message: &quot;error from redis db&quot;}<br/> }<br/><br/> return value, nil<br/>}</span></pre><h2 id=\"bfaa\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">3. Implementing Publisher-Subscriber architecture with ease:</h2><p id=\"2fad\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch.</p><p id=\"1449\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of using Publisher and Subscriber in a GoFr application:</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"9145\" class=\"qx ot gu qn b bg qy qz l ra rb\">package main<br/><br/>import (<br/> &quot;encoding/json&quot;<br/><br/> &quot;gofr.dev/pkg/gofr&quot;<br/>)<br/><br/>func main() {<br/> app := gofr.New()<br/><br/> app.POST(&quot;/publish-product&quot;, product)<br/><br/>// subscribing to products topic<br/> app.Subscribe(&quot;products&quot;, func(c *gofr.Context) error {<br/>  var productInfo struct {<br/>   ProductId string `json:&quot;productId&quot;`<br/>   Price     string `json:&quot;price&quot;`<br/>  }<br/><br/>  err := c.Bind(&amp;productInfo)<br/>  if err != nil {<br/>   c.Logger.Error(err)<br/><br/>   return nil<br/>  }<br/><br/>  c.Logger.Info(&quot;Received product &quot;, productInfo)<br/><br/>  return nil<br/> })<br/><br/> app.Run()<br/>}<br/><br/>func product(ctx *gofr.Context) (interface{}, error) {<br/> type productInfo struct {<br/>  ProductId string `json:&quot;productId&quot;`<br/>  Price     string `json:&quot;price&quot;`<br/> }<br/><br/> var data productInfo<br/><br/>// binding the request data to productInfo struct<br/> err := ctx.Bind(&amp;data)<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> msg, _ := json.Marshal(data)<br/><br/>// publishing message to producst topic using gofr context<br/> err = ctx.GetPublisher().Publish(ctx, &quot;products&quot;, msg)<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> return &quot;Published&quot;, nil<br/>}</span></pre><h2 id=\"76a0\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">4. Out of the Box Observability:</h2><p id=\"a957\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries.</p><ul class=\"\"><li id=\"13c4\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\"><strong class=\"nn gv\">Detailed Logging:</strong> GoFr offers structured logging with various log levels (<strong class=\"nn gv\">INFO</strong>, <strong class=\"nn gv\">DEBUG</strong>, <strong class=\"nn gv\">WARN</strong>, <strong class=\"nn gv\">ERROR</strong>, <strong class=\"nn gv\">FATAL</strong>) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging.</li><li id=\"a0f3\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Actionable Metrics:</strong> GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance.</li><li id=\"f545\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Distributed Tracing:</strong> GoFr integrates with popular tracing backends like <code class=\"cx qk ql qm qn b\">Zipkin</code> and <code class=\"cx qk ql qm qn b\">Jaeger</code>. Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems.</li></ul><p id=\"29e3\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation.</p><h2 id=\"4abf\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">5. Effortless Interservice HTTP Communication:</h2><p id=\"f639\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the <code class=\"cx qk ql qm qn b\">AddHTTPService</code> method.</p><p id=\"dcd6\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\">Configurational Options for HTTP Services</strong>:</p><p id=\"3a89\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr offers a variety of configuration options to enhance interservice communication:</p><ul class=\"\"><li id=\"3b37\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\"><strong class=\"nn gv\">Authentication</strong>: Supports <strong class=\"nn gv\">APIKeyConfig</strong>, <strong class=\"nn gv\">BasicAuthConfig</strong>, and OAuthConfig for secure authentication.</li><li id=\"aa22\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Default Headers</strong>: Allows setting default headers for all downstream HTTP service requests.</li><li id=\"3242\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Circuit Breaker</strong>: Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages.</li><li id=\"dbf0\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">Health Checks</strong>: Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues.</li></ul><p id=\"5664\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">These features ensure that interservice communication is secure, reliable, and easily manageable.</p><p id=\"26aa\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of connecting to a HTTP Service and sending a GET request:</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"b1c1\" class=\"qx ot gu qn b bg qy qz l ra rb\">func main() {<br/> a := gofr.New()<br/><br/> a.AddHTTPService(&quot;cat-facts&quot;, &quot;https://catfact.ninja&quot;,<br/>  &amp;service.CircuitBreakerConfig{<br/>   Threshold: 4,<br/>   Interval:  1 * time.Second,<br/>  },<br/>  &amp;service.HealthConfig{<br/>   HealthEndpoint: &quot;breeds&quot;,<br/>  },<br/> )<br/><br/>a.GET(&quot;/fact&quot;, Handler)<br/><br/> a.Run()<br/>}<br/><br/>func Handler(c *gofr.Context) (any, error) {<br/> var data = struct {<br/>  Fact   string `json:&quot;fact&quot;`<br/>  Length int    `json:&quot;length&quot;`<br/> }{}<br/><br/> var catFacts = c.GetHTTPService(&quot;cat-facts&quot;)<br/><br/> resp, err := catFacts.Get(c, &quot;fact&quot;, map[string]interface{}{<br/>  &quot;max_length&quot;: 20,<br/> })<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> b, _ := io.ReadAll(resp.Body)<br/> err = json.Unmarshal(b, &amp;data)<br/> if err != nil {<br/>  return nil, err<br/> }<br/><br/> return data, nil<br/>}</span></pre><h2 id=\"d4e6\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">6. Flexible Middleware Support for Enhanced Control:</h2><p id=\"cb4e\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler.</p><p id=\"9e31\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the <code class=\"cx qk ql qm qn b\">UseMiddleware</code> method on your GoFr application instance. Additionally, GoFr includes built-in <strong class=\"nn gv\">CORS (Cross-Origin Resource Sharing)</strong> middleware to handle CORS-related headers.</p><p id=\"ad5c\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\"><em class=\"qo\">Example of adding a custom middleware to GoFr application:</em></strong></p><pre class=\"qp qq qr qs qt qu qn qv bp qw bb bk\"><span id=\"08a5\" class=\"qx ot gu qn b bg qy qz l ra rb\">import (<br/>    &quot;net/http&quot;<br/><br/>    gofrHTTP &quot;gofr.dev/pkg/gofr/http&quot;<br/>)<br/><br/>// Define your custom middleware function<br/>func customMiddleware() gofrHTTP.Middleware {<br/>    return func(inner http.Handler) http.Handler {<br/>        return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {<br/>            // Your custom logic here<br/>            // For example, logging, authentication, etc.<br/>            <br/>            // Call the next handler in the chain<br/>            inner.ServeHTTP(w, r)<br/>        })<br/>    }<br/>}<br/><br/>func main() {<br/>    // Create a new instance of your GoFr application<br/>    app := gofr.New()<br/><br/>    // Add your custom middleware to the application<br/>    app.UseMiddleware(customMiddleware())<br/><br/>    // Define your application routes and handlers<br/>    // ...<br/><br/>    // Run your GoFr application<br/>    app.Run()<br/>}</span></pre><h2 id=\"c5b9\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">7. Integrated Authentication Mechanisms:</h2><p id=\"456e\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch.</p><ul class=\"\"><li id=\"cb39\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\"><strong class=\"nn gv\">Basic Auth:</strong> Basic auth is the simplest way to authenticate your APIs. It’s built on <a class=\"af oj\" href=\"https://datatracker.ietf.org/doc/html/rfc7617\" rel=\"noopener ugc nofollow\" target=\"_blank\">HTTP protocol authentication scheme</a>. It involves sending the prefix <code class=\"cx qk ql qm qn b\">Basic</code> trailed by the Base64-encoded <code class=\"cx qk ql qm qn b\">&lt;username&gt;:&lt;password&gt;</code> within the standard <code class=\"cx qk ql qm qn b\">Authorization</code> header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function.</li><li id=\"e7ff\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">API Keys Auth: </strong><em class=\"qo\">API Key Authentication</em> is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function.</li><li id=\"f9b8\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\"><strong class=\"nn gv\">OAuth 2.0: </strong><a class=\"af oj\" href=\"https://www.rfc-editor.org/rfc/rfc6749\" rel=\"noopener ugc nofollow\" target=\"_blank\">OAuth</a> 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix <code class=\"cx qk ql qm qn b\">Bearer</code> trailed by the encoded token within the standard <code class=\"cx qk ql qm qn b\">Authorization</code> header. GoFr supports authenticating tokens encoded by algorithm <code class=\"cx qk ql qm qn b\">RS256/384/512</code>.</li></ul><p id=\"17cc\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">Refer to the <a class=\"af oj\" href=\"https://gofr.dev/docs/advanced-guide/http-authentication\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\"><em class=\"qo\">GoFr’s Authentication Documentation</em></strong></a><strong class=\"nn gv\"><em class=\"qo\"> </em></strong>to see the examples of how to use these auth mechanisms and know more about it.</p><h2 id=\"aef4\" class=\"pv ot gu bf ou pw px dy oy py pz ea pc nw qa qb qc oa qd qe qf oe qg qh qi qj bk\">8. Automatic Swagger UI Rendering:</h2><p id=\"cd37\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official <a class=\"af oj\" href=\"https://swagger.io/\" rel=\"noopener ugc nofollow\" target=\"_blank\">Swagger website</a>.</p><p id=\"9c13\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your <code class=\"cx qk ql qm qn b\">openapi.json</code> file inside the <code class=\"cx qk ql qm qn b\">static</code> directory of your project. GoFr will automatically render the Swagger documentation at the <code class=\"cx qk ql qm qn b\">/.well-known/swagger</code> endpoint.</p></div></div></div><div class=\"ab cb ok ol om on\" role=\"separator\"><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq or\"></span><span class=\"oo by bm op oq\"></span></div><div class=\"gn go gp gq gr\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><h1 id=\"5d57\" class=\"os ot gu bf ou ov ow ox oy oz pa pb pc pd pe pf pg ph pi pj pk pl pm pn po pp bk\">Conclusion</h1><p id=\"d4c6\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process.</p><p id=\"3bc6\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance.</p><p id=\"c357\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities.</p><p id=\"76a9\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\">Get started with GoFr today!</strong></p><p id=\"2f19\" class=\"pw-post-body-paragraph nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\"><strong class=\"nn gv\">Here are some helpful resources:</strong></p><blockquote class=\"rk rl rm\"><p id=\"2860\" class=\"nl nm qo nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr Website: <a class=\"af oj\" href=\"https://gofr.dev/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://gofr.dev</a></p><p id=\"dd1d\" class=\"nl nm qo nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr GitHub Repository: <a class=\"af oj\" href=\"https://github.com/gofr-dev/gofr\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://github.com/gofr-dev/gofr</a></p><p id=\"31d2\" class=\"nl nm qo nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi gn bk\">GoFr Discord Server: <a class=\"af oj\" href=\"https://discord.gg/zyJkVhps\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://discord.gg/zyJkVhps</a></p></blockquote><h1 id=\"db72\" class=\"os ot gu bf ou ov rn ox oy oz ro pb pc pd rp pf pg ph rq pj pk pl rr pn po pp bk\">Stackademic 🎓</h1><p id=\"7f50\" class=\"pw-post-body-paragraph nl nm gu nn b no pq nq nr ns pr nu nv nw ps ny nz oa pt oc od oe pu og oh oi gn bk\">Thank you for reading until the end. Before you go:</p><ul class=\"\"><li id=\"90fe\" class=\"nl nm gu nn b no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi rc rd re bk\">Please consider <strong class=\"nn gv\">clapping</strong> and <strong class=\"nn gv\">following</strong> the writer! 👏</li><li id=\"823b\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\">Follow us <a class=\"af oj\" href=\"https://twitter.com/stackademichq\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">X</strong></a> | <a class=\"af oj\" href=\"https://www.linkedin.com/company/stackademic\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">LinkedIn</strong></a> | <a class=\"af oj\" href=\"https://www.youtube.com/c/stackademic\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">YouTube</strong></a> | <a class=\"af oj\" href=\"https://discord.gg/in-plain-english-709094664682340443\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Discord</strong></a></li><li id=\"3a6c\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\">Visit our other platforms: <a class=\"af oj\" href=\"https://plainenglish.io/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">In Plain English</strong></a> | <a class=\"af oj\" href=\"https://cofeed.app/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">CoFeed</strong></a> | <a class=\"af oj\" href=\"https://differ.blog/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Differ</strong></a></li><li id=\"09a3\" class=\"nl nm gu nn b no rf nq nr ns rg nu nv nw rh ny nz oa ri oc od oe rj og oh oi rc rd re bk\">More content at <a class=\"af oj\" href=\"https://stackademic.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Stackademic.com</strong></a></li></ul></div></div></div></div></section></div></div></article></div><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"rs rt ab ja\"><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/backend?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Backend</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/technology?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Technology</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/golang?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Golang</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/microservices?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Microservices</div></a></div><div class=\"ru ab\"><a class=\"rv ay am ao\" href=\"https://medium.com/tag/framework?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Framework</div></a></div></div></div></div><div class=\"l\"></div><footer class=\"sb sc sd se sf sg sh si sj ab q sk ik c\"><div class=\"l ae\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"ab cp sl\"><div class=\"ab q kv\"><div class=\"sm l\"><span class=\"l sn so sp e d\"><div class=\"ab q kv kw\"><div class=\"pw-multi-vote-icon fj je kx ky kz\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z\" clip-rule=\"evenodd\"></path></svg></div></div></div></a></span></div><div class=\"pw-multi-vote-count l li lj lk ll lm ln lo\"><p class=\"bf b dv z du\"><span class=\"lp\">--</span></p></div></div></span><span class=\"l h g f sq sr\"><div class=\"ab q kv kw\"><div class=\"pw-multi-vote-icon fj je kx ky kz\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z\" clip-rule=\"evenodd\"></path></svg></div></div></div></a></span></div><div class=\"pw-multi-vote-count l li lj lk ll lm ln lo\"><p class=\"bf b dv z du\"><span class=\"lp\">--</span></p></div></div></span></div><div class=\"bq ab\"><div><div class=\"bm\" aria-hidden=\"false\"><button class=\"ao la ls lt ab q fk lu lv\" aria-label=\"responses\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" class=\"lr\"><path d=\"M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z\"></path></svg><p class=\"bf b bg z du\"><span class=\"pw-responses-count lq lr\">5</span></p></button></div></div></div></div><div class=\"ab q\"><div class=\"or l ix\"><div><div class=\"bm\" aria-hidden=\"false\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerBookmarkButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=--------------------------bookmark_footer-----------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"none\" viewBox=\"0 0 25 25\" class=\"du lx\" aria-label=\"Add to list bookmark button\"><path fill=\"currentColor\" d=\"M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z\"></path></svg></a></span></div></div></div><div class=\"or l ix\"><div class=\"bm\" aria-hidden=\"false\" aria-describedby=\"postFooterSocialMenu\" aria-labelledby=\"postFooterSocialMenu\"><div><div class=\"bm\" aria-hidden=\"false\"><button aria-controls=\"postFooterSocialMenu\" aria-expanded=\"false\" aria-label=\"Share Post\" data-testid=\"footerSocialShareButton\" class=\"af fk ah ai aj ak al mf an ao ap ex mg mh lv mi\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1\" clip-rule=\"evenodd\"></path></svg></button></div></div></div></div></div></div></div></div></div></footer><div class=\"ss st su sv sw l bx\"><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"cl ab sx cp\"><div class=\"ab ia\"><a href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"l sy sz by ta ie\"><div class=\"l fj\"><img alt=\"Mundhraumang\" class=\"l fd by tb tc cx\" src=\"https://miro.medium.com/v2/da:true/resize:fill:144:144/0*1pfy5SWOFKWfx4rM\" width=\"72\" height=\"72\" loading=\"lazy\"/><div class=\"if by l tb tc fs n ig ft\"></div></div></div></a><a href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"td ab fj\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l te tf by ta ik\"><div class=\"l fj\"><img alt=\"Stackademic\" class=\"l fd by bz ca cx\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*U-kjsW7IZUobnoy1gAp1UQ.png\" width=\"32\" height=\"32\" loading=\"lazy\"/><div class=\"if by l bz ca fs n ig ft\"></div></div></div></div></div></div></a></div><div class=\"j i d\"><div class=\"ab\"><span><a class=\"bf b bg z ep rw eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------\" rel=\"noopener follow\">Follow</a></span><div class=\"dt l\"><div><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;newsletterV3=f2cfcdc5c71&amp;newsletterV3Id=ca6d34bf839d&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------subscribe_user-----------\" rel=\"noopener follow\"><button class=\"bf b bg z th am ti tj tk tl tm tn to tp ew ex ey ez fa fb fc fd bm fe ff\" aria-label=\"Subscribe\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" fill=\"none\" viewBox=\"0 0 38 38\" class=\"tg tf te\"><rect width=\"0.5\" height=\"6.5\" x=\"26.25\" y=\"9.25\" rx=\"0.25\"></rect><rect width=\"0.5\" height=\"6.5\" x=\"29.75\" y=\"12.25\" rx=\"0.25\" transform=\"rotate(90 29.75 12.25)\"></rect><path d=\"M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5\"></path><path d=\"M11.5 14.5 19 20l4-3\"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class=\"ab cn cp\"><div class=\"l\"><div class=\"ab q\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at ab q\" href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><h2 class=\"pw-author-name bf tq tr ts tt bk\"><span class=\"gn jo\">Written by <!-- -->Mundhraumang</span></h2></a></div><div class=\"ru ab\"><div class=\"l ix\"><span class=\"pw-follower-count bf b bg z bk\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq\" href=\"https://medium.com/@mundhraumang.02/followers?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\">75 Followers</a></span></div><div class=\"bf b bg z jf jg jh ab jj jk jl jm du jd\"><span class=\"ir l\" aria-hidden=\"true\"><span class=\"bf b bg z du\">·</span></span><span class=\"l ix\">Writer for </span><div><div class=\"l\" aria-hidden=\"false\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar iq ab q\" href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b bg z jf jg jh ji jj jk jl jm bk\">Stackademic</p></a></div></div></div></div><div class=\"tu l\"></div></div><div class=\"h k\"><div class=\"ab\"><span><a class=\"bf b bg z ep rw eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------\" rel=\"noopener follow\">Follow</a></span><div class=\"dt l\"><div><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l\"><span><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;newsletterV3=f2cfcdc5c71&amp;newsletterV3Id=ca6d34bf839d&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------subscribe_user-----------\" rel=\"noopener follow\"><button class=\"bf b bg z th am ti tj tk tl tm tn to tp ew ex ey ez fa fb fc fd bm fe ff\" aria-label=\"Subscribe\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" fill=\"none\" viewBox=\"0 0 38 38\" class=\"tg tf te\"><rect width=\"0.5\" height=\"6.5\" x=\"26.25\" y=\"9.25\" rx=\"0.25\"></rect><rect width=\"0.5\" height=\"6.5\" x=\"29.75\" y=\"12.25\" rx=\"0.25\" transform=\"rotate(90 29.75 12.25)\"></rect><path d=\"M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5\"></path><path d=\"M11.5 14.5 19 20l4-3\"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class=\"tv bh tw na nb nc nd ne\"></div></div></div><div class=\"h k j\"><div class=\"tv bh tw tx\"></div><div class=\"ab cb\"><div class=\"ci bh fz ga gb gc\"><div class=\"ty ab kv ja\"><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://help.medium.com/hc/en-us?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Help</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.statuspage.io/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Status</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/about?autoplay=1&amp;source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">About</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Careers</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"pressinquiries@medium.com?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Press</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://blog.medium.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Blog</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Privacy</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Terms</p></a></div><div class=\"tz ua l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://speechify.com/medium?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Text to speech</p></a></div><div class=\"tz l\"><a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/business?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__=\"main-20240913-183058-97d0bdd4c3\"</script><script>window.__GRAPHQL_URI__ = \"https://blog.stackademic.com/_/graphql\"</script><script>window.__PRELOADED_STATE__ = {\"algolia\":{\"queries\":{}},\"cache\":{\"experimentGroupSet\":true,\"reason\":\"This request is not using the cache middleware worker\",\"group\":\"disabled\",\"tags\":[\"group-edgeCachePosts\",\"post-eb4071cded30\",\"user-f2cfcdc5c71\",\"collection-d1baaa8417a4\"],\"serverVariantState\":\"\",\"middlewareEnabled\":false,\"cacheStatus\":\"DYNAMIC\",\"shouldUseCache\":false,\"vary\":[],\"lohpSummerUpsellEnabled\":false,\"logoUpdatePhase3Enabled\":false},\"client\":{\"hydrated\":false,\"isUs\":false,\"isNativeMedium\":false,\"isSafariMobile\":false,\"isSafari\":false,\"isFirefox\":false,\"routingEntity\":{\"type\":\"COLLECTION\",\"id\":\"d1baaa8417a4\",\"explicit\":true},\"viewerIsBot\":false},\"debug\":{\"requestId\":\"318709a7-500d-4525-be1c-746fe383d880\",\"hybridDevServices\":[],\"originalSpanCarrier\":{\"traceparent\":\"00-7a67e86aa19aa253c9eccfb9962bc9d6-532ad1ea998f01f1-01\"}},\"multiVote\":{\"clapsPerPost\":{}},\"navigation\":{\"branch\":{\"show\":null,\"hasRendered\":null,\"blockedByCTA\":false},\"hideGoogleOneTap\":false,\"hasRenderedAlternateUserBanner\":null,\"currentLocation\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"host\":\"blog.stackademic.com\",\"hostname\":\"blog.stackademic.com\",\"referrer\":\"\",\"hasSetReferrer\":false,\"susiModal\":{\"step\":null,\"operation\":\"register\"},\"postRead\":false,\"partnerProgram\":{\"selectedCountryCode\":null},\"queryString\":\"?source=topic_portal_recommended_stories------backend---1-107----------backend----------9b0ff235_7ba9_4567_be8a_1f42936dd1f9-------\"},\"config\":{\"nodeEnv\":\"production\",\"version\":\"main-20240913-183058-97d0bdd4c3\",\"target\":\"production\",\"productName\":\"Medium\",\"publicUrl\":\"https:\\u002F\\u002Fcdn-client.medium.com\\u002Flite\",\"authDomain\":\"medium.com\",\"authGoogleClientId\":\"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com\",\"favicon\":\"production\",\"glyphUrl\":\"https:\\u002F\\u002Fglyph.medium.com\",\"branchKey\":\"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm\",\"algolia\":{\"appId\":\"MQ57UUUQZ2\",\"apiKeySearch\":\"394474ced050e3911ae2249ecc774921\",\"indexPrefix\":\"medium_\",\"host\":\"-dsn.algolia.net\"},\"recaptchaKey\":\"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk\",\"recaptcha3Key\":\"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5\",\"recaptchaEnterpriseKeyId\":\"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp\",\"datadog\":{\"applicationId\":\"6702d87d-a7e0-42fe-bbcb-95b469547ea0\",\"clientToken\":\"pub853ea8d17ad6821d9f8f11861d23dfed\",\"rumToken\":\"pubf9cc52896502b9413b68ba36fc0c7162\",\"context\":{\"deployment\":{\"target\":\"production\",\"tag\":\"main-20240913-183058-97d0bdd4c3\",\"commit\":\"97d0bdd4c3d32312bf79945abb12126d81d4ed87\"}},\"datacenter\":\"us\"},\"googleAnalyticsCode\":\"G-7JY7T788PK\",\"googlePay\":{\"apiVersion\":\"2\",\"apiVersionMinor\":\"0\",\"merchantId\":\"BCR2DN6TV7EMTGBM\",\"merchantName\":\"Medium\",\"instanceMerchantId\":\"13685562959212738550\"},\"applePay\":{\"version\":3},\"signInWallCustomDomainCollectionIds\":[\"3a8144eabfe3\",\"336d898217ee\",\"61061eb0c96b\",\"138adf9c44c\",\"819cc2aaeee0\"],\"mediumMastodonDomainName\":\"me.dm\",\"mediumOwnedAndOperatedCollectionIds\":[\"8a9336e5bb4\",\"b7e45b22fec3\",\"193b68bd4fba\",\"8d6b8a439e32\",\"54c98c43354d\",\"3f6ecf56618\",\"d944778ce714\",\"92d2092dc598\",\"ae2a65f35510\",\"1285ba81cada\",\"544c7006046e\",\"fc8964313712\",\"40187e704f1c\",\"88d9857e584e\",\"7b6769f2748b\",\"bcc38c8f6edf\",\"cef6983b292\",\"cb8577c9149e\",\"444d13b52878\",\"713d7dbc99b0\",\"ef8e90590e66\",\"191186aaafa0\",\"55760f21cdc5\",\"9dc80918cc93\",\"bdc4052bbdba\",\"8ccfed20cbb2\"],\"tierOneDomains\":[\"medium.com\",\"thebolditalic.com\",\"arcdigital.media\",\"towardsdatascience.com\",\"uxdesign.cc\",\"codeburst.io\",\"psiloveyou.xyz\",\"writingcooperative.com\",\"entrepreneurshandbook.co\",\"prototypr.io\",\"betterhumans.coach.me\",\"theascent.pub\"],\"topicsToFollow\":[\"d61cf867d93f\",\"8a146bc21b28\",\"1eca0103fff3\",\"4d562ee63426\",\"aef1078a3ef5\",\"e15e46793f8d\",\"6158eb913466\",\"55f1c20aba7a\",\"3d18b94f6858\",\"4861fee224fd\",\"63c6f1f93ee\",\"1d98b3a9a871\",\"decb52b64abf\",\"ae5d4995e225\",\"830cded25262\"],\"topicToTagMappings\":{\"accessibility\":\"accessibility\",\"addiction\":\"addiction\",\"android-development\":\"android-development\",\"art\":\"art\",\"artificial-intelligence\":\"artificial-intelligence\",\"astrology\":\"astrology\",\"basic-income\":\"basic-income\",\"beauty\":\"beauty\",\"biotech\":\"biotech\",\"blockchain\":\"blockchain\",\"books\":\"books\",\"business\":\"business\",\"cannabis\":\"cannabis\",\"cities\":\"cities\",\"climate-change\":\"climate-change\",\"comics\":\"comics\",\"coronavirus\":\"coronavirus\",\"creativity\":\"creativity\",\"cryptocurrency\":\"cryptocurrency\",\"culture\":\"culture\",\"cybersecurity\":\"cybersecurity\",\"data-science\":\"data-science\",\"design\":\"design\",\"digital-life\":\"digital-life\",\"disability\":\"disability\",\"economy\":\"economy\",\"education\":\"education\",\"equality\":\"equality\",\"family\":\"family\",\"feminism\":\"feminism\",\"fiction\":\"fiction\",\"film\":\"film\",\"fitness\":\"fitness\",\"food\":\"food\",\"freelancing\":\"freelancing\",\"future\":\"future\",\"gadgets\":\"gadgets\",\"gaming\":\"gaming\",\"gun-control\":\"gun-control\",\"health\":\"health\",\"history\":\"history\",\"humor\":\"humor\",\"immigration\":\"immigration\",\"ios-development\":\"ios-development\",\"javascript\":\"javascript\",\"justice\":\"justice\",\"language\":\"language\",\"leadership\":\"leadership\",\"lgbtqia\":\"lgbtqia\",\"lifestyle\":\"lifestyle\",\"machine-learning\":\"machine-learning\",\"makers\":\"makers\",\"marketing\":\"marketing\",\"math\":\"math\",\"media\":\"media\",\"mental-health\":\"mental-health\",\"mindfulness\":\"mindfulness\",\"money\":\"money\",\"music\":\"music\",\"neuroscience\":\"neuroscience\",\"nonfiction\":\"nonfiction\",\"outdoors\":\"outdoors\",\"parenting\":\"parenting\",\"pets\":\"pets\",\"philosophy\":\"philosophy\",\"photography\":\"photography\",\"podcasts\":\"podcast\",\"poetry\":\"poetry\",\"politics\":\"politics\",\"privacy\":\"privacy\",\"product-management\":\"product-management\",\"productivity\":\"productivity\",\"programming\":\"programming\",\"psychedelics\":\"psychedelics\",\"psychology\":\"psychology\",\"race\":\"race\",\"relationships\":\"relationships\",\"religion\":\"religion\",\"remote-work\":\"remote-work\",\"san-francisco\":\"san-francisco\",\"science\":\"science\",\"self\":\"self\",\"self-driving-cars\":\"self-driving-cars\",\"sexuality\":\"sexuality\",\"social-media\":\"social-media\",\"society\":\"society\",\"software-engineering\":\"software-engineering\",\"space\":\"space\",\"spirituality\":\"spirituality\",\"sports\":\"sports\",\"startups\":\"startup\",\"style\":\"style\",\"technology\":\"technology\",\"transportation\":\"transportation\",\"travel\":\"travel\",\"true-crime\":\"true-crime\",\"tv\":\"tv\",\"ux\":\"ux\",\"venture-capital\":\"venture-capital\",\"visual-design\":\"visual-design\",\"work\":\"work\",\"world\":\"world\",\"writing\":\"writing\"},\"defaultImages\":{\"avatar\":{\"imageId\":\"1*dmbNkD5D-u45r44go_cf0g.png\",\"height\":150,\"width\":150},\"orgLogo\":{\"imageId\":\"7*V1_7XP4snlmqrc_0Njontw.png\",\"height\":110,\"width\":500},\"postLogo\":{\"imageId\":\"bd978bb536350a710e8efb012513429cabdc4c28700604261aeda246d0f980b7\",\"height\":810,\"width\":1440},\"postPreviewImage\":{\"imageId\":\"1*hn4v1tCaJy7cWMyb0bpNpQ.png\",\"height\":386,\"width\":579}},\"collectionStructuredData\":{\"8d6b8a439e32\":{\"name\":\"Elemental\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fcdn-images-1.medium.com\\u002Fmax\\u002F980\\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png\",\"width\":980,\"height\":159}}},\"3f6ecf56618\":{\"name\":\"Forge\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fcdn-images-1.medium.com\\u002Fmax\\u002F596\\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png\",\"width\":596,\"height\":183}}},\"ae2a65f35510\":{\"name\":\"GEN\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F264\\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png\",\"width\":264,\"height\":140}}},\"88d9857e584e\":{\"name\":\"LEVEL\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F540\\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png\",\"width\":540,\"height\":108}}},\"7b6769f2748b\":{\"name\":\"Marker\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fcdn-images-1.medium.com\\u002Fmax\\u002F383\\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png\",\"width\":383,\"height\":92}}},\"444d13b52878\":{\"name\":\"OneZero\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F540\\u002F1*cw32fIqCbRWzwJaoQw6BUg.png\",\"width\":540,\"height\":123}}},\"8ccfed20cbb2\":{\"name\":\"Zora\",\"data\":{\"@type\":\"NewsMediaOrganization\",\"ethicsPolicy\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Farticles\\u002F360043290473\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\u002F\\u002Fmiro.medium.com\\u002Fmax\\u002F540\\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png\",\"width\":540,\"height\":106}}}},\"embeddedPostIds\":{\"coronavirus\":\"cd3010f9d81f\"},\"sharedCdcMessaging\":{\"COVID_APPLICABLE_TAG_SLUGS\":[],\"COVID_APPLICABLE_TOPIC_NAMES\":[],\"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE\":[],\"COVID_MESSAGES\":{\"tierA\":{\"text\":\"For more information on the novel coronavirus and Covid-19, visit cdc.gov.\",\"markups\":[{\"start\":66,\"end\":73,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]},\"tierB\":{\"text\":\"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.\",\"markups\":[{\"start\":37,\"end\":45,\"href\":\"https:\\u002F\\u002Fhelp.medium.com\\u002Fhc\\u002Fen-us\\u002Fcategories\\u002F201931128-Policies-Safety\"},{\"start\":125,\"end\":132,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]},\"paywall\":{\"text\":\"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.\",\"markups\":[{\"start\":56,\"end\":70,\"href\":\"https:\\u002F\\u002Fmedium.com\\u002Fmembership\"},{\"start\":138,\"end\":145,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]},\"unbound\":{\"text\":\"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.\",\"markups\":[{\"start\":45,\"end\":59,\"href\":\"https:\\u002F\\u002Fmedium.com\\u002Fmembership\"},{\"start\":127,\"end\":134,\"href\":\"https:\\u002F\\u002Fwww.cdc.gov\\u002Fcoronavirus\\u002F2019-nCoV\"}]}},\"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST\":[\"3b31a67bff4a\"]},\"sharedVoteMessaging\":{\"TAGS\":[\"politics\",\"election-2020\",\"government\",\"us-politics\",\"election\",\"2020-presidential-race\",\"trump\",\"donald-trump\",\"democrats\",\"republicans\",\"congress\",\"republican-party\",\"democratic-party\",\"biden\",\"joe-biden\",\"maga\"],\"TOPICS\":[\"politics\",\"election\"],\"MESSAGE\":{\"text\":\"Find out more about the U.S. election results here.\",\"markups\":[{\"start\":46,\"end\":50,\"href\":\"https:\\u002F\\u002Fcookpolitical.com\\u002F2020-national-popular-vote-tracker\"}]},\"EXCLUDE_POSTS\":[\"397ef29e3ca5\"]},\"embedPostRules\":[],\"recircOptions\":{\"v1\":{\"limit\":3},\"v2\":{\"limit\":8}},\"braintreeClientKey\":\"production_zjkj96jm_m56f8fqpf7ngnrd4\",\"braintree\":{\"enabled\":true,\"merchantId\":\"m56f8fqpf7ngnrd4\",\"merchantAccountId\":{\"usd\":\"AMediumCorporation_instant\",\"eur\":\"amediumcorporation_EUR\",\"cad\":\"amediumcorporation_CAD\"},\"publicKey\":\"ds2nn34bg2z7j5gd\",\"braintreeEnvironment\":\"production\",\"dashboardUrl\":\"https:\\u002F\\u002Fwww.braintreegateway.com\\u002Fmerchants\",\"gracePeriodDurationInDays\":14,\"mediumMembershipPlanId\":{\"monthly\":\"ce105f8c57a3\",\"monthlyV2\":\"e8a5e126-792b-4ee6-8fba-d574c1b02fc5\",\"monthlyWithTrial\":\"d5ee3dbe3db8\",\"monthlyPremium\":\"fa741a9b47a2\",\"yearly\":\"a40ad4a43185\",\"yearlyV2\":\"3815d7d6-b8ca-4224-9b8c-182f9047866e\",\"yearlyStaff\":\"d74fb811198a\",\"yearlyWithTrial\":\"b3bc7350e5c7\",\"yearlyPremium\":\"e21bd2c12166\",\"monthlyOneYearFree\":\"e6c0637a-2bad-4171-ab4f-3c268633d83c\",\"monthly25PercentOffFirstYear\":\"235ecc62-0cdb-49ae-9378-726cd21c504b\",\"monthly20PercentOffFirstYear\":\"ba518864-9c13-4a99-91ca-411bf0cac756\",\"monthly15PercentOffFirstYear\":\"594c029b-9f89-43d5-88f8-8173af4e070e\",\"monthly10PercentOffFirstYear\":\"c6c7bc9a-40f2-4b51-8126-e28511d5bdb0\",\"monthlyForStudents\":\"629ebe51-da7d-41fd-8293-34cd2f2030a8\",\"yearlyOneYearFree\":\"78ba7be9-0d9f-4ece-aa3e-b54b826f2bf1\",\"yearly25PercentOffFirstYear\":\"2dbb010d-bb8f-4eeb-ad5c-a08509f42d34\",\"yearly20PercentOffFirstYear\":\"47565488-435b-47f8-bf93-40d5fbe0ebc8\",\"yearly15PercentOffFirstYear\":\"8259809b-0881-47d9-acf7-6c001c7f720f\",\"yearly10PercentOffFirstYear\":\"9dd694fb-96e1-472c-8d9e-3c868d5c1506\",\"yearlyForStudents\":\"e29345ef-ab1c-4234-95c5-70e50fe6bc23\",\"monthlyCad\":\"p52orjkaceei\",\"yearlyCad\":\"h4q9g2up9ktt\"},\"braintreeDiscountId\":{\"oneMonthFree\":\"MONTHS_FREE_01\",\"threeMonthsFree\":\"MONTHS_FREE_03\",\"sixMonthsFree\":\"MONTHS_FREE_06\",\"fiftyPercentOffOneYear\":\"FIFTY_PERCENT_OFF_ONE_YEAR\"},\"3DSecureVersion\":\"2\",\"defaultCurrency\":\"usd\",\"providerPlanIdCurrency\":{\"4ycw\":\"usd\",\"rz3b\":\"usd\",\"3kqm\":\"usd\",\"jzw6\":\"usd\",\"c2q2\":\"usd\",\"nnsw\":\"usd\",\"q8qw\":\"usd\",\"d9y6\":\"usd\",\"fx7w\":\"cad\",\"nwf2\":\"cad\"}},\"paypalClientId\":\"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v\",\"paypal\":{\"host\":\"https:\\u002F\\u002Fapi.paypal.com:443\",\"clientMode\":\"production\",\"serverMode\":\"live\",\"webhookId\":\"4G466076A0294510S\",\"monthlyPlan\":{\"planId\":\"P-9WR0658853113943TMU5FDQA\",\"name\":\"Medium Membership (Monthly) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"yearlyPlan\":{\"planId\":\"P-7N8963881P8875835MU5JOPQ\",\"name\":\"Medium Membership (Annual) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"oneYearGift\":{\"name\":\"Medium Membership (1 Year, Digital Gift Code)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\\u002Fredeem.\",\"price\":\"50.00\",\"currency\":\"USD\",\"sku\":\"membership-gift-1-yr\"},\"oldMonthlyPlan\":{\"planId\":\"P-96U02458LM656772MJZUVH2Y\",\"name\":\"Medium Membership (Monthly)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"oldYearlyPlan\":{\"planId\":\"P-59P80963JF186412JJZU3SMI\",\"name\":\"Medium Membership (Annual)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"monthlyPlanWithTrial\":{\"planId\":\"P-66C21969LR178604GJPVKUKY\",\"name\":\"Medium Membership (Monthly) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"yearlyPlanWithTrial\":{\"planId\":\"P-6XW32684EX226940VKCT2MFA\",\"name\":\"Medium Membership (Annual) with setup fee\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"oldMonthlyPlanNoSetupFee\":{\"planId\":\"P-4N046520HR188054PCJC7LJI\",\"name\":\"Medium Membership (Monthly)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed monthly.\"},\"oldYearlyPlanNoSetupFee\":{\"planId\":\"P-7A4913502Y5181304CJEJMXQ\",\"name\":\"Medium Membership (Annual)\",\"description\":\"Unlimited access to the best and brightest stories on Medium. Membership billed annually.\"},\"sdkUrl\":\"https:\\u002F\\u002Fwww.paypal.com\\u002Fsdk\\u002Fjs\"},\"stripePublishableKey\":\"pk_live_7FReX44VnNIInZwrIIx6ghjl\",\"log\":{\"json\":true,\"level\":\"info\"},\"imageUploadMaxSizeMb\":25,\"staffPicks\":{\"title\":\"Staff Picks\",\"catalogId\":\"c7bc6e1ee00f\"}},\"session\":{\"xsrf\":\"\"}}</script><script>window.__APOLLO_STATE__ = {\"ROOT_QUERY\":{\"__typename\":\"Query\",\"variantFlags\":[{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_client\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pre_pp_v4\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"limit_user_follows\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_image_sharer\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pill_based_home_feed\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_home_post_menu\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_explicit_signals_updated_post_previews\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rex_new_push_notification_endpoint\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tribute_landing_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_import\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_mastodon_avatar_upload\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_new_manage_membership_flow\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_recaptcha_enterprise\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_sharer_create_post_share_key\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_automod\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_google_one_tap\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_moc_load_processor_all_recs_surfaces\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_sharer_validate_post_share_key\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_remove_twitter_onboarding_step\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_friend_links_creation\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_moc_load_processor_c\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tag_recs\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_seamless_social_sharing\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pp_v4\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_update_explore_wtf\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_lists_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"browsable_stream_config_bucket\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"curated-topics\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_webhook\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_archive_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_recommended_publishers_query\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_server_upstream_deadlines\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_should_index_post_query\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_sprig\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_conversion_model_v2\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"group_2\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_intrinsic_automatic_actions\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_pp_country_expansion\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_in_app_free_trial\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_lock_responses\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"reader_fair_distribution_non_qp\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_deprecate_legacy_providers_v3\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_members_only_audio\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_newsletter_lo_flow_custom_domains\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rex_aggregator_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_verifications_service\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_iceland_forced_android\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_offline_reading\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_speechify_ios\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_legacy_feed_in_iceland\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_susi_redesign_android\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"onboarding_tags_from_top_views\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"crm_send_contact_to_sendgrid\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_easy_resubscribe\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_eventstats_event_processing\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_iceland_nux\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_continue_this_thread\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_recirc_model\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rex_reading_history\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_google_pay\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_paypal\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_logo_update_phase3\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_mastodon_for_members_username_selection\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_simplified_digest_v2_b\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_social_share_sheet\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_creator_welcome_email\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"price_smoke_test_yearly\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_auto_follow_on_subscribe\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_dynamic_paywall_aspiriational\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"allow_signup\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_topic_portals\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_apple_sign_in\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_footer_app_buttons\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_homepage\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_verified_author\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lo_homepage\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"control\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tipping_v0_ios\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_dynamic_aspirational_paywall\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_new_stripe_customers\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"limit_post_referrers\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"allow_test_auth\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"disallow\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_bg_post_post\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_moc_load_processor_first_story\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_rating_prompt_stories_read_threshold\",\"valueType\":{\"__typename\":\"VariantFlagNumber\"}},{\"__typename\":\"VariantFlag\",\"name\":\"coronavirus_topic_recirc\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_friend_links_postpage_banners\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_author_cards_byline\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_aurora_pub_follower_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_verified_book_author\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"skip_fs_cache_user_vals\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_entities_to_follow_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_google_webhook\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_author_cards\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_configure_pronouns\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_starspace\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"available_monthly_premium_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"12a660186432\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_app_flirty_thirty\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_updated_digest_previews\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"allow_access\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_dynamic_programming_paywall\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_lite_response_markup\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_friend_links_creation\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tipping_v0_android\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_apple_pay\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_cache_less_following_feed\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_medium2_kbfd\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"mobile_custom_app_icon\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_apple_webhook\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_branch_io\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_premium_tier\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_enable_friend_links_postpage_banners\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_marketing_emails\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"glyph_font_set\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"m2-unbound-source-serif-pro\"}},{\"__typename\":\"VariantFlag\",\"name\":\"can_send_tips_v0\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_miro_v2\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_maim_the_meter\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_premium_tier_badge\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"signin_services\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"twitter,facebook,google,email,google-fastidv,google-one-tap,apple\"}},{\"__typename\":\"VariantFlag\",\"name\":\"ios_display_paywall_after_onboarding\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_editor_new_publishing_flow\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_android_offline_reading\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"reengagement_notification_duration\",\"valueType\":{\"__typename\":\"VariantFlagNumber\"}},{\"__typename\":\"VariantFlag\",\"name\":\"available_annual_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"2c754bcc2995\"}},{\"__typename\":\"VariantFlag\",\"name\":\"rex_generator_max_candidates\",\"valueType\":{\"__typename\":\"VariantFlagNumber\"}},{\"__typename\":\"VariantFlag\",\"name\":\"redefined_top_posts\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_group_gifting\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_mastodon_for_members\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_tick_landing_page\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"can_receive_tips_v0\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_rito_upstream_deadlines\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"android_enable_syntax_highlight\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_dynamic_paywall_programming\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_update_topic_portals_wtf\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"price_smoke_test_monthly\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"\"}},{\"__typename\":\"VariantFlag\",\"name\":\"android_two_hour_refresh\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_diversification_rex\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ios_autorefresh\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_integration\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_explicit_signals\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_ml_rank_rex_anno\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_see_pronouns\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_switch_plan_premium_tier\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_speechify_widget\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"available_annual_premium_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"4a442ace1476\"}},{\"__typename\":\"VariantFlag\",\"name\":\"disable_partner_program_enrollment\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_braintree_trial_membership\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_updated_pub_recs_ui\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"textshots_userid\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"\"}},{\"__typename\":\"VariantFlag\",\"name\":\"enable_susi_redesign_ios\",\"valueType\":{\"__typename\":\"VariantFlagBoolean\",\"value\":true}},{\"__typename\":\"VariantFlag\",\"name\":\"signup_services\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"twitter,facebook,google,email,google-fastidv,google-one-tap,apple\"}},{\"__typename\":\"VariantFlag\",\"name\":\"available_monthly_plan\",\"valueType\":{\"__typename\":\"VariantFlagString\",\"value\":\"60e220181034\"}}],\"viewer\":null,\"collectionByDomainOrSlug({\\\"domainOrSlug\\\":\\\"blog.stackademic.com\\\"})\":{\"__ref\":\"Collection:d1baaa8417a4\"},\"postResult({\\\"id\\\":\\\"eb4071cded30\\\"})\":{\"__ref\":\"Post:eb4071cded30\"}},\"ImageMetadata:1*PHy3rMit8grpdoTXxC9aaw.png\":{\"__typename\":\"ImageMetadata\",\"id\":\"1*PHy3rMit8grpdoTXxC9aaw.png\"},\"Collection:d1baaa8417a4\":{\"__typename\":\"Collection\",\"id\":\"d1baaa8417a4\",\"favicon\":{\"__ref\":\"ImageMetadata:1*PHy3rMit8grpdoTXxC9aaw.png\"},\"customStyleSheet\":{\"__ref\":\"CustomStyleSheet:35f28f62bf26\"},\"colorPalette\":{\"__typename\":\"ColorPalette\",\"highlightSpectrum\":{\"__typename\":\"ColorSpectrum\",\"backgroundColor\":\"#FFFFFFFF\",\"colorPoints\":[{\"__typename\":\"ColorPoint\",\"color\":\"#FFFFFFFF\",\"point\":0},{\"__typename\":\"ColorPoint\",\"color\":\"#FFE8F3E8\",\"point\":0.1},{\"__typename\":\"ColorPoint\",\"color\":\"#FFE8F3E8\",\"point\":0.2},{\"__typename\":\"ColorPoint\",\"color\":\"#FFD1E7D1\",\"point\":0.6},{\"__typename\":\"ColorPoint\",\"color\":\"#FFA3D0A2\",\"point\":1}]},\"defaultBackgroundSpectrum\":{\"__typename\":\"ColorSpectrum\",\"backgroundColor\":\"#FFFFFFFF\",\"colorPoints\":[{\"__typename\":\"ColorPoint\",\"color\":\"#FF1A8917\",\"point\":0},{\"__typename\":\"ColorPoint\",\"color\":\"#FF11800E\",\"point\":0.1},{\"__typename\":\"ColorPoint\",\"color\":\"#FF0F730C\",\"point\":0.2},{\"__typename\":\"ColorPoint\",\"color\":\"#FF095407\",\"point\":1}]},\"tintBackgroundSpectrum\":null},\"googleAnalyticsId\":null,\"editors\":[{\"__typename\":\"CollectionMastheadUserItem\",\"user\":{\"__ref\":\"User:a7b125868703\"}},{\"__typename\":\"CollectionMastheadUserItem\",\"user\":{\"__ref\":\"User:d44045e01651\"}},{\"__typename\":\"CollectionMastheadUserItem\",\"user\":{\"__ref\":\"User:5fddac2241fc\"}}],\"name\":\"Stackademic\",\"avatar\":{\"__ref\":\"ImageMetadata:1*U-kjsW7IZUobnoy1gAp1UQ.png\"},\"domain\":\"blog.stackademic.com\",\"slug\":\"stackademic\",\"description\":\"Stackademic is a learning hub for programmers, devs, coders, and engineers. Our goal is to democratize free coding education for the world.\",\"subscriberCount\":11764,\"viewerEdge\":{\"__ref\":\"CollectionViewerEdge:collectionId:d1baaa8417a4-viewerId:lo_2b0fb1b54663\"},\"twitterUsername\":\"stackademichq\",\"facebookPageId\":null,\"logo\":{\"__ref\":\"ImageMetadata:1*U-kjsW7IZUobnoy1gAp1UQ.png\"}},\"CustomStyleSheet:35f28f62bf26\":{\"__typename\":\"CustomStyleSheet\",\"id\":\"35f28f62bf26\",\"global\":{\"__typename\":\"GlobalStyles\",\"colorPalette\":null,\"fonts\":{\"__typename\":\"StyleSheetFonts\",\"font1\":{\"__typename\":\"StyleSheetFont\",\"name\":\"SANS_SERIF_1\"},\"font2\":{\"__typename\":\"StyleSheetFont\",\"name\":\"SANS_SERIF_1\"},\"font3\":{\"__typename\":\"StyleSheetFont\",\"name\":\"SERIF_2\"}}},\"header\":{\"__typename\":\"HeaderStyles\",\"backgroundImage\":null}},\"User:a7b125868703\":{\"__typename\":\"User\",\"id\":\"a7b125868703\"},\"User:d44045e01651\":{\"__typename\":\"User\",\"id\":\"d44045e01651\"},\"User:5fddac2241fc\":{\"__typename\":\"User\",\"id\":\"5fddac2241fc\"},\"ImageMetadata:1*U-kjsW7IZUobnoy1gAp1UQ.png\":{\"__typename\":\"ImageMetadata\",\"id\":\"1*U-kjsW7IZUobnoy1gAp1UQ.png\",\"originalWidth\":287,\"originalHeight\":287},\"LinkedAccounts:f2cfcdc5c71\":{\"__typename\":\"LinkedAccounts\",\"mastodon\":null,\"id\":\"f2cfcdc5c71\"},\"UserViewerEdge:userId:f2cfcdc5c71-viewerId:lo_2b0fb1b54663\":{\"__typename\":\"UserViewerEdge\",\"id\":\"userId:f2cfcdc5c71-viewerId:lo_2b0fb1b54663\",\"isFollowing\":false,\"isUser\":false,\"isMuting\":false},\"NewsletterV3:ca6d34bf839d\":{\"__typename\":\"NewsletterV3\",\"id\":\"ca6d34bf839d\",\"type\":\"NEWSLETTER_TYPE_AUTHOR\",\"slug\":\"f2cfcdc5c71\",\"name\":\"f2cfcdc5c71\",\"collection\":null,\"user\":{\"__ref\":\"User:f2cfcdc5c71\"}},\"User:f2cfcdc5c71\":{\"__typename\":\"User\",\"id\":\"f2cfcdc5c71\",\"name\":\"Mundhraumang\",\"username\":\"mundhraumang.02\",\"newsletterV3\":{\"__ref\":\"NewsletterV3:ca6d34bf839d\"},\"linkedAccounts\":{\"__ref\":\"LinkedAccounts:f2cfcdc5c71\"},\"isSuspended\":false,\"imageId\":\"0*1pfy5SWOFKWfx4rM\",\"mediumMemberAt\":0,\"verifications\":{\"__typename\":\"VerifiedInfo\",\"isBookAuthor\":false},\"socialStats\":{\"__typename\":\"SocialStats\",\"followerCount\":75},\"customDomainState\":null,\"hasSubdomain\":false,\"bio\":\"\",\"isPartnerProgramEnrolled\":false,\"viewerEdge\":{\"__ref\":\"UserViewerEdge:userId:f2cfcdc5c71-viewerId:lo_2b0fb1b54663\"},\"viewerIsUser\":false,\"postSubscribeMembershipUpsellShownAt\":0,\"allowNotes\":true,\"twitterScreenName\":\"\",\"membership\":null},\"Paragraph:d6b84d41a5ec_0\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_0\",\"name\":\"40b9\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"ImageMetadata:1*E-Fpb9HhcKKlz6W7AsW2LA.png\":{\"__typename\":\"ImageMetadata\",\"id\":\"1*E-Fpb9HhcKKlz6W7AsW2LA.png\",\"originalHeight\":1010,\"originalWidth\":1316,\"focusPercentX\":null,\"focusPercentY\":null,\"alt\":null},\"Paragraph:d6b84d41a5ec_1\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_1\",\"name\":\"9007\",\"type\":\"IMG\",\"href\":null,\"layout\":\"INSET_CENTER\",\"metadata\":{\"__ref\":\"ImageMetadata:1*E-Fpb9HhcKKlz6W7AsW2LA.png\"},\"text\":\"\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_2\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_2\",\"name\":\"fe50\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial. Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":481,\"end\":482,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_3\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_3\",\"name\":\"49a1\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr, an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":154,\"end\":158,\"href\":\"https:\\u002F\\u002Fgofr.dev\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_4\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_4\",\"name\":\"f696\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr & It’s rich set of features:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_5\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_5\",\"name\":\"c04f\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_6\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_6\",\"name\":\"56ef\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"1. Efficient Configuration Management\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_7\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_7\",\"name\":\"9fed\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":205,\"end\":222,\"href\":\"https:\\u002F\\u002F12factor.net\\u002Fconfig\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_8\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_8\",\"name\":\"efcc\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":220,\"end\":224,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":241,\"end\":249,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_9\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_9\",\"name\":\"5e48\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Here is the full list of environment variables supported by GoFr:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":17,\"end\":64,\"href\":\"https:\\u002F\\u002Fgofr.dev\\u002Fdocs\\u002Freferences\\u002Fconfigs\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_10\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_10\",\"name\":\"403b\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"2. Seamless Database Interactions\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_11\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_11\",\"name\":\"b858\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_12\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_12\",\"name\":\"49ea\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of using MySQL and Redis DB inside the handler.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":55,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":55,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_13\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_13\",\"name\":\"aad0\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"func DBHandler(c *gofr.Context) (interface{}, error) {\\n var value int\\n\\n\\u002F\\u002F querying a SQL db\\nerr := c.SQL.QueryRowContext(c, \\\"select 2+2\\\").Scan(&value)\\n if err != nil {\\n  return nil, datasource.ErrorDB{Err: err, Message: \\\"error from sql db\\\"}\\n }\\n\\n\\u002F\\u002F retrieving value from Redis\\n _, err = c.Redis.Get(c, \\\"test\\\").Result()\\n if err != nil && !errors.Is(err, redis.Nil) {\\n  return nil, datasource.ErrorDB{Err: err, Message: \\\"error from redis db\\\"}\\n }\\n\\n return value, nil\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_14\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_14\",\"name\":\"bfaa\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"3. Implementing Publisher-Subscriber architecture with ease:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_15\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_15\",\"name\":\"2fad\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr simplifies Pub\\u002FSub by offering built-in support for popular clients like Kafka, Google Pub\\u002FSub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub\\u002FSub pattern from scratch.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_16\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_16\",\"name\":\"1449\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of using Publisher and Subscriber in a GoFr application:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":64,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":64,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_17\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_17\",\"name\":\"9145\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"package main\\n\\nimport (\\n \\\"encoding\\u002Fjson\\\"\\n\\n \\\"gofr.dev\\u002Fpkg\\u002Fgofr\\\"\\n)\\n\\nfunc main() {\\n app := gofr.New()\\n\\n app.POST(\\\"\\u002Fpublish-product\\\", product)\\n\\n\\u002F\\u002F subscribing to products topic\\n app.Subscribe(\\\"products\\\", func(c *gofr.Context) error {\\n  var productInfo struct {\\n   ProductId string `json:\\\"productId\\\"`\\n   Price     string `json:\\\"price\\\"`\\n  }\\n\\n  err := c.Bind(&productInfo)\\n  if err != nil {\\n   c.Logger.Error(err)\\n\\n   return nil\\n  }\\n\\n  c.Logger.Info(\\\"Received product \\\", productInfo)\\n\\n  return nil\\n })\\n\\n app.Run()\\n}\\n\\nfunc product(ctx *gofr.Context) (interface{}, error) {\\n type productInfo struct {\\n  ProductId string `json:\\\"productId\\\"`\\n  Price     string `json:\\\"price\\\"`\\n }\\n\\n var data productInfo\\n\\n\\u002F\\u002F binding the request data to productInfo struct\\n err := ctx.Bind(&data)\\n if err != nil {\\n  return nil, err\\n }\\n\\n msg, _ := json.Marshal(data)\\n\\n\\u002F\\u002F publishing message to producst topic using gofr context\\n err = ctx.GetPublisher().Publish(ctx, \\\"products\\\", msg)\\n if err != nil {\\n  return nil, err\\n }\\n\\n return \\\"Published\\\", nil\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_18\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_18\",\"name\":\"76a0\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"4. Out of the Box Observability:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_19\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_19\",\"name\":\"a957\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_20\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_20\",\"name\":\"13c4\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Detailed Logging: GoFr offers structured logging with various log levels (INFO, DEBUG, WARN, ERROR, FATAL) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":17,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":74,\"end\":78,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":80,\"end\":85,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":87,\"end\":91,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":93,\"end\":98,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":100,\"end\":105,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_21\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_21\",\"name\":\"a0f3\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":19,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_22\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_22\",\"name\":\"f545\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger. Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":72,\"end\":78,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":83,\"end\":89,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":20,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_23\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_23\",\"name\":\"29e3\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_24\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_24\",\"name\":\"4abf\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"5. Effortless Interservice HTTP Communication:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_25\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_25\",\"name\":\"f639\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":300,\"end\":314,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_26\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_26\",\"name\":\"dcd6\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Configurational Options for HTTP Services:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":41,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_27\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_27\",\"name\":\"3a89\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr offers a variety of configuration options to enhance interservice communication:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_28\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_28\",\"name\":\"3b37\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Authentication: Supports APIKeyConfig, BasicAuthConfig, and OAuthConfig for secure authentication.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":14,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":25,\"end\":37,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":39,\"end\":54,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_29\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_29\",\"name\":\"aa22\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Default Headers: Allows setting default headers for all downstream HTTP service requests.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":15,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_30\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_30\",\"name\":\"3242\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Circuit Breaker: Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":15,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_31\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_31\",\"name\":\"dbf0\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Health Checks: Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":13,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_32\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_32\",\"name\":\"5664\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"These features ensure that interservice communication is secure, reliable, and easily manageable.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_33\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_33\",\"name\":\"26aa\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of connecting to a HTTP Service and sending a GET request:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":66,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":66,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_34\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_34\",\"name\":\"b1c1\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"func main() {\\n a := gofr.New()\\n\\n a.AddHTTPService(\\\"cat-facts\\\", \\\"https:\\u002F\\u002Fcatfact.ninja\\\",\\n  &service.CircuitBreakerConfig{\\n   Threshold: 4,\\n   Interval:  1 * time.Second,\\n  },\\n  &service.HealthConfig{\\n   HealthEndpoint: \\\"breeds\\\",\\n  },\\n )\\n\\na.GET(\\\"\\u002Ffact\\\", Handler)\\n\\n a.Run()\\n}\\n\\nfunc Handler(c *gofr.Context) (any, error) {\\n var data = struct {\\n  Fact   string `json:\\\"fact\\\"`\\n  Length int    `json:\\\"length\\\"`\\n }{}\\n\\n var catFacts = c.GetHTTPService(\\\"cat-facts\\\")\\n\\n resp, err := catFacts.Get(c, \\\"fact\\\", map[string]interface{}{\\n  \\\"max_length\\\": 20,\\n })\\n if err != nil {\\n  return nil, err\\n }\\n\\n b, _ := io.ReadAll(resp.Body)\\n err = json.Unmarshal(b, &data)\\n if err != nil {\\n  return nil, err\\n }\\n\\n return data, nil\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_35\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_35\",\"name\":\"d4e6\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"6. Flexible Middleware Support for Enhanced Control:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_36\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_36\",\"name\":\"cb4e\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_37\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_37\",\"name\":\"9e31\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr empowers developers with middleware support, allowing for request\\u002Fresponse manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":317,\"end\":330,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":410,\"end\":446,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_38\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_38\",\"name\":\"ad5c\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Example of adding a custom middleware to GoFr application:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":58,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":0,\"end\":58,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_39\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_39\",\"name\":\"08a5\",\"type\":\"PRE\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"import (\\n    \\\"net\\u002Fhttp\\\"\\n\\n    gofrHTTP \\\"gofr.dev\\u002Fpkg\\u002Fgofr\\u002Fhttp\\\"\\n)\\n\\n\\u002F\\u002F Define your custom middleware function\\nfunc customMiddleware() gofrHTTP.Middleware {\\n    return func(inner http.Handler) http.Handler {\\n        return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\\n            \\u002F\\u002F Your custom logic here\\n            \\u002F\\u002F For example, logging, authentication, etc.\\n            \\n            \\u002F\\u002F Call the next handler in the chain\\n            inner.ServeHTTP(w, r)\\n        })\\n    }\\n}\\n\\nfunc main() {\\n    \\u002F\\u002F Create a new instance of your GoFr application\\n    app := gofr.New()\\n\\n    \\u002F\\u002F Add your custom middleware to the application\\n    app.UseMiddleware(customMiddleware())\\n\\n    \\u002F\\u002F Define your application routes and handlers\\n    \\u002F\\u002F ...\\n\\n    \\u002F\\u002F Run your GoFr application\\n    app.Run()\\n}\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":{\"__typename\":\"CodeBlockMetadata\",\"mode\":\"AUTO\",\"lang\":\"go\"},\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_40\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_40\",\"name\":\"c5b9\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"7. Integrated Authentication Mechanisms:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_41\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_41\",\"name\":\"456e\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_42\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_42\",\"name\":\"cb39\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme. It involves sending the prefix Basic trailed by the Base64-encoded \\u003Cusername\\u003E:\\u003Cpassword\\u003E within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":152,\"end\":157,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":188,\"end\":209,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":230,\"end\":243,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":84,\"end\":119,\"href\":\"https:\\u002F\\u002Fdatatracker.ietf.org\\u002Fdoc\\u002Fhtml\\u002Frfc7617\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":11,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_43\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_43\",\"name\":\"e7ff\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":15,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":15,\"end\":37,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_44\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_44\",\"name\":\"f9b8\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256\\u002F384\\u002F512.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":276,\"end\":282,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":332,\"end\":345,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":411,\"end\":424,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":11,\"end\":16,\"href\":\"https:\\u002F\\u002Fwww.rfc-editor.org\\u002Frfc\\u002Frfc6749\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":11,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_45\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_45\",\"name\":\"17cc\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Refer to the GoFr’s Authentication Documentation to see the examples of how to use these auth mechanisms and know more about it.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":13,\"end\":48,\"href\":\"https:\\u002F\\u002Fgofr.dev\\u002Fdocs\\u002Fadvanced-guide\\u002Fhttp-authentication\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":13,\"end\":49,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"EM\",\"start\":13,\"end\":49,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_46\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_46\",\"name\":\"aef4\",\"type\":\"H4\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"8. Automatic Swagger UI Rendering:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_47\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_47\",\"name\":\"cd37\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":303,\"end\":318,\"href\":\"https:\\u002F\\u002Fswagger.io\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_48\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_48\",\"name\":\"9c13\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the \\u002F.well-known\\u002Fswagger endpoint.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":242,\"end\":254,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":271,\"end\":277,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"CODE\",\"start\":369,\"end\":389,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_49\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_49\",\"name\":\"5d57\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Conclusion\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_50\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_50\",\"name\":\"d4c6\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub\\u002FSub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_51\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_51\",\"name\":\"3bc6\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_52\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_52\",\"name\":\"c357\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities.\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_53\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_53\",\"name\":\"76a9\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Get started with GoFr today!\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":28,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_54\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_54\",\"name\":\"2f19\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Here are some helpful resources:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":0,\"end\":32,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_55\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_55\",\"name\":\"2860\",\"type\":\"BQ\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr Website: https:\\u002F\\u002Fgofr.dev\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":14,\"end\":30,\"href\":\"https:\\u002F\\u002Fgofr.dev\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_56\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_56\",\"name\":\"dd1d\",\"type\":\"BQ\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr GitHub Repository: https:\\u002F\\u002Fgithub.com\\u002Fgofr-dev\\u002Fgofr\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":24,\"end\":56,\"href\":\"https:\\u002F\\u002Fgithub.com\\u002Fgofr-dev\\u002Fgofr\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_57\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_57\",\"name\":\"31d2\",\"type\":\"BQ\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"GoFr Discord Server: https:\\u002F\\u002Fdiscord.gg\\u002FzyJkVhps\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":21,\"end\":48,\"href\":\"https:\\u002F\\u002Fdiscord.gg\\u002FzyJkVhps\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_58\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_58\",\"name\":\"db72\",\"type\":\"H3\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Stackademic 🎓\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_59\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_59\",\"name\":\"7f50\",\"type\":\"P\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Thank you for reading until the end. Before you go:\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_60\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_60\",\"name\":\"90fe\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Please consider clapping and following the writer! 👏\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":16,\"end\":24,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":29,\"end\":38,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_61\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_61\",\"name\":\"823b\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Follow us X | LinkedIn | YouTube | Discord\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":10,\"end\":11,\"href\":\"https:\\u002F\\u002Ftwitter.com\\u002Fstackademichq\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":14,\"end\":22,\"href\":\"https:\\u002F\\u002Fwww.linkedin.com\\u002Fcompany\\u002Fstackademic\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":25,\"end\":32,\"href\":\"https:\\u002F\\u002Fwww.youtube.com\\u002Fc\\u002Fstackademic\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":35,\"end\":42,\"href\":\"https:\\u002F\\u002Fdiscord.gg\\u002Fin-plain-english-709094664682340443\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":10,\"end\":11,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":14,\"end\":22,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":25,\"end\":32,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":35,\"end\":42,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_62\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_62\",\"name\":\"3a6c\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"Visit our other platforms: In Plain English | CoFeed | Differ\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":27,\"end\":43,\"href\":\"https:\\u002F\\u002Fplainenglish.io\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":46,\"end\":52,\"href\":\"https:\\u002F\\u002Fcofeed.app\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":55,\"end\":61,\"href\":\"https:\\u002F\\u002Fdiffer.blog\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":27,\"end\":43,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":46,\"end\":52,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":55,\"end\":61,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"Paragraph:d6b84d41a5ec_63\":{\"__typename\":\"Paragraph\",\"id\":\"d6b84d41a5ec_63\",\"name\":\"09a3\",\"type\":\"ULI\",\"href\":null,\"layout\":null,\"metadata\":null,\"text\":\"More content at Stackademic.com\",\"hasDropCap\":null,\"dropCapImage\":null,\"markups\":[{\"__typename\":\"Markup\",\"type\":\"A\",\"start\":16,\"end\":31,\"href\":\"https:\\u002F\\u002Fstackademic.com\\u002F\",\"anchorType\":\"LINK\",\"userId\":null,\"linkMetadata\":null},{\"__typename\":\"Markup\",\"type\":\"STRONG\",\"start\":16,\"end\":31,\"href\":null,\"anchorType\":null,\"userId\":null,\"linkMetadata\":null}],\"codeBlockMetadata\":null,\"iframe\":null,\"mixtapeMetadata\":null},\"CollectionViewerEdge:collectionId:d1baaa8417a4-viewerId:lo_2b0fb1b54663\":{\"__typename\":\"CollectionViewerEdge\",\"id\":\"collectionId:d1baaa8417a4-viewerId:lo_2b0fb1b54663\",\"isEditor\":false,\"isMuting\":false},\"PostViewerEdge:postId:eb4071cded30-viewerId:lo_2b0fb1b54663\":{\"__typename\":\"PostViewerEdge\",\"shouldIndexPostForExternalSearch\":true,\"id\":\"postId:eb4071cded30-viewerId:lo_2b0fb1b54663\"},\"Tag:backend\":{\"__typename\":\"Tag\",\"id\":\"backend\",\"displayTitle\":\"Backend\",\"normalizedTagSlug\":\"backend\"},\"Tag:technology\":{\"__typename\":\"Tag\",\"id\":\"technology\",\"displayTitle\":\"Technology\",\"normalizedTagSlug\":\"technology\"},\"Tag:golang\":{\"__typename\":\"Tag\",\"id\":\"golang\",\"displayTitle\":\"Golang\",\"normalizedTagSlug\":\"golang\"},\"Tag:microservices\":{\"__typename\":\"Tag\",\"id\":\"microservices\",\"displayTitle\":\"Microservices\",\"normalizedTagSlug\":\"microservices\"},\"Tag:framework\":{\"__typename\":\"Tag\",\"id\":\"framework\",\"displayTitle\":\"Framework\",\"normalizedTagSlug\":\"framework\"},\"Post:eb4071cded30\":{\"__typename\":\"Post\",\"id\":\"eb4071cded30\",\"collection\":{\"__ref\":\"Collection:d1baaa8417a4\"},\"content({\\\"postMeteringOptions\\\":{}})\":{\"__typename\":\"PostContent\",\"isLockedPreviewOnly\":false,\"bodyModel\":{\"__typename\":\"RichText\",\"sections\":[{\"__typename\":\"Section\",\"name\":\"2fc6\",\"startIndex\":0,\"textLayout\":null,\"imageLayout\":null,\"backgroundImage\":null,\"videoLayout\":null,\"backgroundVideo\":null},{\"__typename\":\"Section\",\"name\":\"cc93\",\"startIndex\":4,\"textLayout\":null,\"imageLayout\":null,\"backgroundImage\":null,\"videoLayout\":null,\"backgroundVideo\":null},{\"__typename\":\"Section\",\"name\":\"99a5\",\"startIndex\":49,\"textLayout\":null,\"imageLayout\":null,\"backgroundImage\":null,\"videoLayout\":null,\"backgroundVideo\":null}],\"paragraphs\":[{\"__ref\":\"Paragraph:d6b84d41a5ec_0\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_1\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_2\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_3\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_4\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_5\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_6\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_7\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_8\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_9\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_10\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_11\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_12\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_13\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_14\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_15\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_16\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_17\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_18\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_19\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_20\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_21\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_22\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_23\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_24\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_25\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_26\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_27\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_28\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_29\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_30\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_31\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_32\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_33\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_34\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_35\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_36\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_37\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_38\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_39\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_40\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_41\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_42\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_43\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_44\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_45\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_46\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_47\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_48\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_49\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_50\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_51\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_52\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_53\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_54\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_55\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_56\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_57\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_58\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_59\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_60\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_61\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_62\"},{\"__ref\":\"Paragraph:d6b84d41a5ec_63\"}]},\"validatedShareKey\":\"\",\"shareKeyCreator\":null},\"creator\":{\"__ref\":\"User:f2cfcdc5c71\"},\"inResponseToEntityType\":null,\"isLocked\":false,\"isMarkedPaywallOnly\":false,\"lockedSource\":\"LOCKED_POST_SOURCE_NONE\",\"mediumUrl\":\"https:\\u002F\\u002Fblog.stackademic.com\\u002Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"primaryTopic\":null,\"topics\":[{\"__typename\":\"Topic\",\"slug\":\"programming\"}],\"isPublished\":true,\"latestPublishedVersion\":\"d6b84d41a5ec\",\"visibility\":\"PUBLIC\",\"postResponses\":{\"__typename\":\"PostResponses\",\"count\":5},\"clapCount\":272,\"allowResponses\":true,\"isLimitedState\":false,\"title\":\"The Ultimate Golang Framework for Microservices: GoFr\",\"isSeries\":false,\"sequence\":null,\"uniqueSlug\":\"the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30\",\"socialTitle\":\"\",\"socialDek\":\"\",\"canonicalUrl\":\"\",\"metaDescription\":\"\",\"latestPublishedAt\":1720596287939,\"readingTime\":7.445283018867925,\"previewContent\":{\"__typename\":\"PreviewContent\",\"subtitle\":\"Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of…\"},\"previewImage\":{\"__ref\":\"ImageMetadata:1*E-Fpb9HhcKKlz6W7AsW2LA.png\"},\"isShortform\":false,\"seoTitle\":\"\",\"firstPublishedAt\":1720533602981,\"updatedAt\":1721060798814,\"shortformType\":\"SHORTFORM_TYPE_LINK\",\"seoDescription\":\"Discover GoFr, the ultimate Golang framework for microservices. Learn about its powerful features, ease of use, and optimal performance compared to other frameworks\",\"viewerEdge\":{\"__ref\":\"PostViewerEdge:postId:eb4071cded30-viewerId:lo_2b0fb1b54663\"},\"isSuspended\":false,\"license\":\"ALL_RIGHTS_RESERVED\",\"tags\":[{\"__ref\":\"Tag:backend\"},{\"__ref\":\"Tag:technology\"},{\"__ref\":\"Tag:golang\"},{\"__ref\":\"Tag:microservices\"},{\"__ref\":\"Tag:framework\"}],\"isNewsletter\":false,\"statusForCollection\":\"APPROVED\",\"pendingCollection\":null,\"detectedLanguage\":\"en\",\"wordCount\":1920,\"layerCake\":1}}</script><script src=\"https://cdn-client.medium.com/lite/static/js/manifest.d16a4979.js\"></script><script src=\"https://cdn-client.medium.com/lite/static/js/9865.1496d74a.js\"></script><script src=\"https://cdn-client.medium.com/lite/static/js/main.433d740d.js\"></script><script src=\"https://cdn-client.medium.com/lite/static/js/instrumentation.d9108df7.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/reporting.ff22a7a5.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/9120.5df29668.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5049.d1ead72d.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/4810.6318add7.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6618.db187378.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/1386.014e2ad3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/9977.343f5002.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5250.fc15c18c.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/8261.80c0631e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/7975.b019beb1.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2648.a582e725.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2712.0f6c85f5.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2793.01d2b056.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/1530.e5ec276e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/3735.ca2f95e3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5642.0ebb50fd.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6546.ef575ba6.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6834.f2d3924e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2420.0330d157.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/2106.21ff89d3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6696.92b2dfc3.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/5832.a567559e.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/3366.1571a1d5.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/6040.6ceb7f43.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/4391.fd55a702.chunk.js\"></script>\n<script src=\"https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.fcf5bceb.chunk.js\"></script><script>window.main();</script><script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML=\"window.__CF$cv$params={r:'8c348f1c2bb796ab',t:'MTcyNjM2MDc2MC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);\";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body></html>",
  "text": "The Ultimate Golang Framework for Microservices: GoFr | by Mundhraumang | Stackademic                                                Open in app  Sign up Sign in       Write  Sign up Sign in      The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Backend Technology Golang Microservices Framework   --  --  5       Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow       Help Status About Careers Press Blog Privacy Terms Text to speech Teams                           The Ultimate Golang Framework for Microservices: GoFr | by Mundhraumang | Stackademic                                               The Ultimate Golang Framework for Microservices: GoFr | by Mundhraumang | Stackademic  Open in app  Sign up Sign in       Write  Sign up Sign in      The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Backend Technology Golang Microservices Framework   --  --  5       Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow       Help Status About Careers Press Blog Privacy Terms Text to speech Teams                            Open in app  Sign up Sign in       Write  Sign up Sign in      The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Backend Technology Golang Microservices Framework   --  --  5       Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow       Help Status About Careers Press Blog Privacy Terms Text to speech Teams  Open in app  Sign up Sign in       Write  Sign up Sign in      The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Backend Technology Golang Microservices Framework   --  --  5       Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow       Help Status About Careers Press Blog Privacy Terms Text to speech Teams Open in app  Sign up Sign in       Write  Sign up Sign in      The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Backend Technology Golang Microservices Framework   --  --  5       Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow       Help Status About Careers Press Blog Privacy Terms Text to speech Teams Open in app  Sign up Sign in       Write  Sign up Sign in   Open in app  Sign up Sign in Open in app   Sign up Sign in Sign up Sign up Sign up Sign in Sign in Sign in Sign in       Write  Sign up Sign in                   Write   Write   Write   Write   Write   Write      Sign up Sign in Sign up Sign in Sign up Sign up Sign up Sign in Sign in Sign in Sign in          The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Backend Technology Golang Microservices Framework   --  --  5       Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow       Help Status About Careers Press Blog Privacy Terms Text to speech Teams    The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com    The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com   The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com   The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com  The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com  The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go!    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint.    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go! The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go! The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share    Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves. Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go! The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share The Ultimate Golang Framework for Microservices: GoFr     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024  --  5    Listen  Share     Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024                               Mundhraumang · Follow Published in Stackademic · 8 min read · Jul 9, 2024 Mundhraumang · Follow Mundhraumang · Follow Mundhraumang · Follow Mundhraumang · Follow Mundhraumang · Follow Mundhraumang Mundhraumang Mundhraumang Mundhraumang Mundhraumang · · Follow Follow Follow Published in Stackademic · 8 min read · Jul 9, 2024 Published in Stackademic · 8 min read · Jul 9, 2024 Published in Stackademic · 8 min read · Jul 9, 2024 Published in Stackademic · Published in Stackademic Published in Stackademic Stackademic Stackademic Stackademic · · · 8 min read · Jul 9, 2024 8 min read · Jul 9, 2024 8 min read · · · Jul 9, 2024  --  5    Listen  Share  --  5  --  --        -- -- --  5  5  5  5 5    Listen  Share        Listen  Listen  Listen  Listen  Listen  Listen  Listen  Listen  Listen  Listen Listen  Share  Share  Share  Share  Share Share             Go is a multiparadigm, statically typed, and compiled programming language designed by Google. Many developers have embraced Go because of its garbage collection, memory safety, and structural typing system. Go web frameworks were created to ease Go web development processes without worrying about setups and focusing more on the functionalities of a project. While building small applications, frameworks may not be necessary, but for production-level software, they are crucial.  Frameworks provide additional functionalities and services that can be used by other developers who want to add similar functionalities to their software rather than writing the full-fledged software by themselves.  Choosing the right framework for your needs can enable faster development cycles and easier maintenance down the road. In this article we will talk about GoFr , an opinionated Golang framework for accelerated microservice development. And we will discover why it is your ultimate choice when building microservices in Go! GoFr    GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint. GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint. GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. Here is the full list of environment variables supported by GoFr : 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. Configurational Options for HTTP Services : GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. 8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint. GoFr & It’s rich set of features: What really makes a framework good or bad is the ease of development it provides for its user along with the range of features it offers so the user can purely focus on business logic implementation. GoFr has been built to help developers write fast, scalable and efficient API’s. The framework offers a rich set of features that help developers in writing production grade microservices with ease. Let’s explore some of these features: 1. Efficient Configuration Management Environment variables are the best way to set configuration values for your software application as they can be defined at system-level, independently of the software. This is one of the principles of the Twelve-Factor App methodology and enables applications to be built with portability. Twelve-Factor App GoFr has some predefined environment variables for various purposes like changing log levels, connecting to databases, setting application name and version, setting http ports etc. The user just needs to set these in an .env file inside the configs directory of the application and GoFr automatically reads the values from that. .env configs Here is the full list of environment variables supported by GoFr : list of environment variables supported by GoFr 2. Seamless Database Interactions Managing database connections and interactions can become hectic, especially when working with multiple databases. GoFr handles database connections seamlessly using configuration variables. Not only does it manage the connections, but it also provides direct access to database objects using the GoFr context within handlers. This approach simplifies working with multiple databases. GoFr currently supports all SQL Dialects, Redis, MongoDB, Cassandra and ClickHouse databases. Example of using MySQL and Redis DB inside the handler. Example of using MySQL and Redis DB inside the handler. Example of using MySQL and Redis DB inside the handler. func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } func DBHandler(c *gofr.Context) (interface{}, error) {  var value int   // querying a SQL db  err := c.SQL.QueryRowContext(c, \"select 2+2\").Scan(&value)  if err != nil {  return nil, datasource.ErrorDB{Err: err, Message: \"error from sql db\"}  }   // retrieving value from Redis  _, err = c.Redis.Get(c, \"test\").Result()  if err != nil && !errors.Is(err, redis.Nil) {  return nil, datasource.ErrorDB{Err: err, Message: \"error from redis db\"}  }   return value, nil  } 3. Implementing Publisher-Subscriber architecture with ease: GoFr simplifies Pub/Sub by offering built-in support for popular clients like Kafka, Google Pub/Sub, and MQTT. This eliminates the need for manual configuration or library management, allowing you to focus on your event-driven architecture. Publishing and subscribing to events are streamlined using the GoFr context. Publishing events can be done inside the handler using the context, and to subscribe to an event, you just need to use GoFr’s Subscribe handler. This approach promotes clean code and reduces boilerplate compared to implementing the Pub/Sub pattern from scratch. Example of using Publisher and Subscriber in a GoFr application: Example of using Publisher and Subscriber in a GoFr application: Example of using Publisher and Subscriber in a GoFr application: package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } package main   import (  \"encoding/json\"   \"gofr.dev/pkg/gofr\"  )   func main() {  app := gofr.New()   app.POST(\"/publish-product\", product)   // subscribing to products topic  app.Subscribe(\"products\", func(c *gofr.Context) error {  var productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   err := c.Bind(&productInfo)  if err != nil {  c.Logger.Error(err)   return nil  }   c.Logger.Info(\"Received product \", productInfo)   return nil  })   app.Run()  }   func product(ctx *gofr.Context) (interface{}, error) {  type productInfo struct {  ProductId string `json:\"productId\"`  Price     string `json:\"price\"`  }   var data productInfo   // binding the request data to productInfo struct  err := ctx.Bind(&data)  if err != nil {  return nil, err  }   msg, _ := json.Marshal(data)   // publishing message to producst topic using gofr context  err = ctx.GetPublisher().Publish(ctx, \"products\", msg)  if err != nil {  return nil, err  }   return \"Published\", nil  } 4. Out of the Box Observability: Effective monitoring is crucial for maintaining high-performing microservices. GoFr takes the burden off your shoulders by providing built-in observability features. This eliminates the need for manual configuration of tracing, metrics, and logging libraries. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. Detailed Logging: GoFr offers structured logging with various log levels ( INFO , DEBUG , WARN , ERROR , FATAL ) to capture application events at different granularities. This empowers you to analyze application flow, identify potential issues, and streamline debugging. Detailed Logging: INFO DEBUG WARN ERROR FATAL Actionable Metrics: GoFr automatically collects and exposes application metrics, allowing you to monitor key performance indicators. With metrics readily available, you can quickly identify bottlenecks and optimize application performance. Actionable Metrics: Distributed Tracing: GoFr integrates with popular tracing backends like Zipkin and Jaeger . Distributed tracing allows you to visualize the entire request lifecycle across your microservices, making it easier to pinpoint the root cause of issues within complex systems. Distributed Tracing: Zipkin Jaeger These observability features help users gain detailed insights into the application’s flow and performance, identify and resolve bottlenecks, and ensure smooth operation. 5. Effortless Interservice HTTP Communication: In a microservices architecture, efficient and reliable communication between services is crucial. GoFr simplifies this process by providing a dedicated mechanism to initialize and manage interservice HTTP communication. You can easily register downstream services at the application level using the AddHTTPService method. AddHTTPService Configurational Options for HTTP Services : Configurational Options for HTTP Services GoFr offers a variety of configuration options to enhance interservice communication: Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Default Headers : Allows setting default headers for all downstream HTTP service requests. Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. Authentication : Supports APIKeyConfig , BasicAuthConfig , and OAuthConfig for secure authentication. Authentication APIKeyConfig BasicAuthConfig Default Headers : Allows setting default headers for all downstream HTTP service requests. Default Headers Circuit Breaker : Enhance service resilience with built-in circuit breaker functionality. GoFr allows you to configure thresholds and intervals to gracefully handle failures and prevent cascading outages. Circuit Breaker Health Checks : Proactively monitor the health of your downstream services using GoFr’s health check configuration. Define a health endpoint for each service, and GoFr will automatically verify their availability, allowing for early detection of potential issues. Health Checks These features ensure that interservice communication is secure, reliable, and easily manageable. Example of connecting to a HTTP Service and sending a GET request: Example of connecting to a HTTP Service and sending a GET request: Example of connecting to a HTTP Service and sending a GET request: func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } func main() {  a := gofr.New()   a.AddHTTPService(\"cat-facts\", \"https://catfact.ninja\",  &service.CircuitBreakerConfig{  Threshold: 4,  Interval:  1 * time.Second,  },  &service.HealthConfig{  HealthEndpoint: \"breeds\",  },  )   a.GET(\"/fact\", Handler)   a.Run()  }   func Handler(c *gofr.Context) (any, error) {  var data = struct {  Fact   string `json:\"fact\"`  Length int    `json:\"length\"`  }{}   var catFacts = c.GetHTTPService(\"cat-facts\")   resp, err := catFacts.Get(c, \"fact\", map[string]interface{}{  \"max_length\": 20,  })  if err != nil {  return nil, err  }   b, _ := io.ReadAll(resp.Body)  err = json.Unmarshal(b, &data)  if err != nil {  return nil, err  }   return data, nil  } 6. Flexible Middleware Support for Enhanced Control: Middleware allows you intercepting and manipulating HTTP requests and responses flowing through your application’s router. Middlewares can perform tasks such as authentication, authorization, caching etc. before or after the request reaches your application’s handler. GoFr empowers developers with middleware support, allowing for request/response manipulation and custom logic injection. This provides a powerful mechanism to implement cross-cutting concerns like authentication, authorization, and caching in a modular and reusable way. Middleware functions are registered using the UseMiddleware method on your GoFr application instance. Additionally, GoFr includes built-in CORS (Cross-Origin Resource Sharing) middleware to handle CORS-related headers. UseMiddleware CORS (Cross-Origin Resource Sharing) Example of adding a custom middleware to GoFr application: Example of adding a custom middleware to GoFr application: Example of adding a custom middleware to GoFr application: import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } import (  \"net/http\"   gofrHTTP \"gofr.dev/pkg/gofr/http\"  )   // Define your custom middleware function  func customMiddleware() gofrHTTP.Middleware {  return func(inner http.Handler) http.Handler {  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {  // Your custom logic here  // For example, logging, authentication, etc.    // Call the next handler in the chain  inner.ServeHTTP(w, r)  })  }  }   func main() {  // Create a new instance of your GoFr application  app := gofr.New()   // Add your custom middleware to the application  app.UseMiddleware(customMiddleware())   // Define your application routes and handlers  // ...   // Run your GoFr application  app.Run()  } 7. Integrated Authentication Mechanisms: Securing your microservices with robust authentication is crucial. GoFr streamlines this process by providing built-in support for various industry-standard authentication mechanisms. This empowers you to choose the approach that best suits your application’s needs without writing complex authentication logic from scratch. Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . Basic Auth: Basic auth is the simplest way to authenticate your APIs. It’s built on HTTP protocol authentication scheme . It involves sending the prefix Basic trailed by the Base64-encoded <username>:<password> within the standard Authorization header. GoFr offers two ways to implement basic authentication i.e. using pre-defined credentials as well as defining a custom validation function. Basic Auth: HTTP protocol authentication scheme Basic <username>:<password> Authorization API Keys Auth: API Key Authentication is an HTTP authentication scheme where a unique API key is included in the request header for validation against a store of authorized keys. GoFr offers two ways to implement API Keys authentication i.e. Framework Default Validation as well as defining a Custom Validation Function. API Keys Auth: API Key Authentication OAuth 2.0: OAuth 2.0 is the industry-standard protocol for authorization. It focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. It involves sending the prefix Bearer trailed by the encoded token within the standard Authorization header. GoFr supports authenticating tokens encoded by algorithm RS256/384/512 . OAuth 2.0: OAuth Bearer Authorization RS256/384/512 Refer to the GoFr’s Authentication Documentation  to see the examples of how to use these auth mechanisms and know more about it. GoFr’s Authentication Documentation GoFr’s Authentication Documentation GoFr’s Authentication Documentation   8. Automatic Swagger UI Rendering: Providing clear and interactive API documentation is essential for user adoption and efficient development workflows. API specifications can be written in YAML or JSON. The format is easy to learn and readable to both humans and machines. The complete OpenAPI Specification can be found on the official Swagger website . Swagger website GoFr supports automatic rendering of OpenAPI (also known as Swagger) documentation. This feature allows you to easily provide interactive API documentation for your users. To allow GoFr to render your OpenAPI documentation, simply place your openapi.json file inside the static directory of your project. GoFr will automatically render the Swagger documentation at the /.well-known/swagger endpoint. openapi.json static /.well-known/swagger    Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Conclusion Throughout this article, we’ve explored the rich features of GoFr, an opinionated Golang framework specifically designed to accelerate microservice development. We’ve seen how GoFr simplifies common tasks like configuration management, database interactions, Pub/Sub integration, automatic observability, interservice communication, middleware usage, and authentication. Additionally, GoFr offers built-in support for data migrations, web sockets, cron jobs, and remote log level changes, further streamlining your development process. We benchmarked GoFr against other popular Go frameworks such as Gin, Chi, Echo, and Fiber, and found that GoFr performed optimally, even with its extensive feature set. This means you can leverage all its powerful functionalities without compromising on performance. We encourage you to explore GoFr for yourself. The framework’s comprehensive documentation, tutorials, and active community are valuable resources to guide you on your journey. With GoFr, you can focus on building robust, scalable, and efficiently managed microservices, freeing you to dedicate more time to your application’s core functionalities. Get started with GoFr today! Get started with GoFr today! Here are some helpful resources: Here are some helpful resources: GoFr Website: https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps GoFr Website: https://gofr.dev https://gofr.dev GoFr GitHub Repository: https://github.com/gofr-dev/gofr https://github.com/gofr-dev/gofr GoFr Discord Server: https://discord.gg/zyJkVhps https://discord.gg/zyJkVhps Stackademic 🎓 Thank you for reading until the end. Before you go: Please consider clapping and following the writer! 👏 Follow us X | LinkedIn | YouTube | Discord Visit our other platforms: In Plain English | CoFeed | Differ More content at Stackademic.com Please consider clapping and following the writer! 👏 clapping following Follow us X | LinkedIn | YouTube | Discord X X LinkedIn LinkedIn YouTube YouTube Discord Discord Visit our other platforms: In Plain English | CoFeed | Differ In Plain English In Plain English CoFeed CoFeed Differ Differ More content at Stackademic.com Stackademic.com Stackademic.com Backend Technology Golang Microservices Framework Backend Technology Golang Microservices Framework Backend Technology Golang Microservices Framework Backend Backend Backend Technology Technology Technology Golang Golang Golang Microservices Microservices Microservices Framework Framework Framework  --  --  5    --  --  5    --  --  5    --  --  5    --  --  5    --  --  5  --  --  --  --        -- -- --  --  --        -- -- --  5  5  5  5  5 5                   Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow       Help Status About Careers Press Blog Privacy Terms Text to speech Teams     Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow          Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow          Follow                           Follow     Follow     Follow Follow                                     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Follow     Written by  Mundhraumang 75 Followers · Writer for Stackademic  Written by  Mundhraumang Written by  Mundhraumang Written by  Mundhraumang Written by  Mundhraumang 75 Followers · Writer for Stackademic 75 Followers 75 Followers 75 Followers · Writer for Stackademic · · Writer for Stackademic Stackademic Stackademic Stackademic Follow     Follow     Follow Follow                                      Help Status About Careers Press Blog Privacy Terms Text to speech Teams Help Status About Careers Press Blog Privacy Terms Text to speech Teams Help Status About Careers Press Blog Privacy Terms Text to speech Teams Help Status About Careers Press Blog Privacy Terms Text to speech Teams Help Help Help Status Status Status About About About Careers Careers Careers Press Press Press Blog Blog Blog Privacy Privacy Privacy Terms Terms Terms Text to speech Text to speech Text to speech Teams Teams Teams",
  "links": [
    {
      "id": 1,
      "url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Feb4071cded30&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------",
      "html": "<a class=\"du ag dv bf ak b am an ao ap aq ar as at s u w i d q dw z\" href=\"https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Feb4071cded30&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderCollection&amp;source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\">Open in app<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" fill=\"none\" viewBox=\"0 0 10 10\" class=\"dt\"><path fill=\"currentColor\" d=\"M.985 8.485a.375.375 0 1 0 .53.53zM8.75 1.25h.375A.375.375 0 0 0 8.75.875zM8.375 6.5a.375.375 0 1 0 .75 0zM3.5.875a.375.375 0 1 0 0 .75zm-1.985 8.14 7.5-7.5-.53-.53-7.5 7.5zm6.86-7.765V6.5h.75V1.25zM3.5 1.625h5.25v-.75H3.5z\"></path></svg></a>",
      "text": "Open in app"
    },
    {
      "id": 2,
      "url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&source=post_page---two_column_layout_nav-----------------------global_nav-----------",
      "html": "<a class=\"bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff\" data-testid=\"headerSignUpButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign up</a>",
      "text": "Sign up"
    },
    {
      "id": 3,
      "url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&source=post_page---two_column_layout_nav-----------------------global_nav-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSignInButton\" href=\"https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign in</a>",
      "text": "Sign in"
    },
    {
      "id": 4,
      "url": "https://medium.com/?source=---two_column_layout_nav----------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at ab\" aria-label=\"Homepage\" data-testid=\"headerMediumLogo\" href=\"https://medium.com/?source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"719\" height=\"160\" fill=\"none\" viewBox=\"0 0 719 160\" class=\"au av aw\"><path fill=\"#242424\" d=\"m174.104 9.734.215-.047V8.02H130.39L89.6 103.89 48.81 8.021H1.472v1.666l.212.047c8.018 1.81 12.09 4.509 12.09 14.242V137.93c0 9.734-4.087 12.433-12.106 14.243l-.212.047v1.671h32.118v-1.665l-.213-.048c-8.018-1.809-12.089-4.509-12.089-14.242V30.586l52.399 123.305h2.972l53.925-126.743V140.75c-.687 7.688-4.721 10.062-11.982 11.701l-.215.05v1.652h55.948v-1.652l-.215-.05c-7.269-1.639-11.4-4.013-12.087-11.701l-.037-116.774h.037c0-9.733 4.071-12.432 12.087-14.242m25.555 75.488c.915-20.474 8.268-35.252 20.606-35.507 3.806.063 6.998 1.312 9.479 3.714 5.272 5.118 7.751 15.812 7.368 31.793zm-.553 5.77h65.573v-.275c-.186-15.656-4.721-27.8",
      "text": ""
    },
    {
      "id": 5,
      "url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_topnav-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerWriteButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---two_column_layout_nav-----------------------new_post_topnav-----------\" rel=\"noopener follow\"><div class=\"bf b bg z du fj fk ab q fl fm\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" aria-label=\"Write\"><path fill=\"currentColor\" d=\"M14 4a.5.5 0 0 0 0-1zm7 6a.5.5 0 0 0-1 0zm-7-7H4v1h10zM3 4v16h1V4zm1 17h16v-1H4zm17-1V10h-1v10zm-1 1a1 1 0 0 0 1-1h-1zM3 20a1 1 0 0 0 1 1v-1zM4 3a1 1 0 0 0-1 1h1z\"></path><path stroke=\"currentColor\" d=\"m17.5 4.5-8.458 8.458a.25.25 0 0 0-.06.098l-.824 2.47a.25.25 0 0 0 .316.316l2.47-.823a.25.25 0 0 0 .098-.06L19.5 6.5m-2-2 2.323-2.323a.25.25 0 0 1 .354 0l1.646 1.646a.25.25 0 0 1 0 .354L19.5 6.5m-2-2 2 2\"></path></svg><div class=\"dt l\">Write</div></div></a>",
      "text": "Write"
    },
    {
      "id": 6,
      "url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSearchButton\" href=\"https://medium.com/search?source=---two_column_layout_nav----------------------------------\" rel=\"noopener follow\"><div class=\"bf b bg z du fj fk ab q fl fm\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" aria-label=\"Search\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z\" clip-rule=\"evenodd\"></path></svg></div></a>",
      "text": ""
    },
    {
      "id": 7,
      "url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&source=post_page---two_column_layout_nav-----------------------global_nav-----------",
      "html": "<a class=\"bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff\" data-testid=\"headerSignUpButton\" href=\"https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign up</a>",
      "text": "Sign up"
    },
    {
      "id": 8,
      "url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&source=post_page---two_column_layout_nav-----------------------global_nav-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerSignInButton\" href=\"https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------\" rel=\"noopener follow\">Sign in</a>",
      "text": "Sign in"
    },
    {
      "id": 9,
      "url": "https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l ib ic by id ie\"><div class=\"l fj\"><img alt=\"Mundhraumang\" class=\"l fd by dd de cx\" src=\"https://miro.medium.com/v2/da:true/resize:fill:88:88/0*1pfy5SWOFKWfx4rM\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"><div class=\"if by l dd de fs n ig ft\"></div></div></div></div></div></a>",
      "text": ""
    },
    {
      "id": 10,
      "url": "https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener  ugc nofollow\"><div class=\"ih ab fj\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l ii ij by id ik\"><div class=\"l fj\"><img alt=\"Stackademic\" class=\"l fd by br il cx\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*U-kjsW7IZUobnoy1gAp1UQ.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"><div class=\"if by l br il fs n ig ft\"></div></div></div></div></div></div></a>",
      "text": ""
    },
    {
      "id": 11,
      "url": "https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar iq\" data-testid=\"authorName\" href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\">Mundhraumang</a>",
      "text": "Mundhraumang"
    },
    {
      "id": 12,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&user=Mundhraumang&userId=f2cfcdc5c71&source=post_page-f2cfcdc5c71----eb4071cded30---------------------post_header-----------",
      "html": "<a class=\"it iu ah ai aj ak al am an ao ap aq ar ex iv iw\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------post_header-----------\" rel=\"noopener follow\">Follow</a>",
      "text": "Follow"
    },
    {
      "id": 13,
      "url": "https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar iq ab q\" data-testid=\"publicationName\" href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener  ugc nofollow\"><p class=\"bf b bg z jf jg jh ji jj jk jl jm bk\">Stackademic</p></a>",
      "text": "Stackademic"
    },
    {
      "id": 14,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&user=Mundhraumang&userId=f2cfcdc5c71&source=-----eb4071cded30---------------------clap_footer-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.97",
      "text": ""
    },
    {
      "id": 15,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&source=-----eb4071cded30---------------------bookmark_footer-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"headerBookmarkButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=-----eb4071cded30---------------------bookmark_footer-----------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"none\" viewBox=\"0 0 25 25\" class=\"du lx\" aria-label=\"Add to list bookmark button\"><path fill=\"currentColor\" d=\"M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z\"></path></svg></a>",
      "text": ""
    },
    {
      "id": 16,
      "url": "https://gofr.dev/",
      "html": "<a class=\"af oj\" href=\"https://gofr.dev\" rel=\"noopener ugc nofollow\" target=\"_blank\">GoFr</a>",
      "text": "GoFr"
    },
    {
      "id": 17,
      "url": "https://12factor.net/config",
      "html": "<a class=\"af oj\" href=\"https://12factor.net/config\" rel=\"noopener ugc nofollow\" target=\"_blank\">Twelve-Factor App</a>",
      "text": "Twelve-Factor App"
    },
    {
      "id": 18,
      "url": "https://gofr.dev/docs/references/configs",
      "html": "<a class=\"af oj\" href=\"https://gofr.dev/docs/references/configs\" rel=\"noopener ugc nofollow\" target=\"_blank\">list of environment variables supported by GoFr</a>",
      "text": "list of environment variables supported by GoFr"
    },
    {
      "id": 19,
      "url": "https://datatracker.ietf.org/doc/html/rfc7617",
      "html": "<a class=\"af oj\" href=\"https://datatracker.ietf.org/doc/html/rfc7617\" rel=\"noopener ugc nofollow\" target=\"_blank\">HTTP protocol authentication scheme</a>",
      "text": "HTTP protocol authentication scheme"
    },
    {
      "id": 20,
      "url": "https://www.rfc-editor.org/rfc/rfc6749",
      "html": "<a class=\"af oj\" href=\"https://www.rfc-editor.org/rfc/rfc6749\" rel=\"noopener ugc nofollow\" target=\"_blank\">OAuth</a>",
      "text": "OAuth"
    },
    {
      "id": 21,
      "url": "https://gofr.dev/docs/advanced-guide/http-authentication",
      "html": "<a class=\"af oj\" href=\"https://gofr.dev/docs/advanced-guide/http-authentication\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\"><em class=\"qo\">GoFr’s Authentication Documentation</em></strong></a>",
      "text": "GoFr’s Authentication Documentation"
    },
    {
      "id": 22,
      "url": "https://swagger.io/",
      "html": "<a class=\"af oj\" href=\"https://swagger.io/\" rel=\"noopener ugc nofollow\" target=\"_blank\">Swagger website</a>",
      "text": "Swagger website"
    },
    {
      "id": 23,
      "url": "https://gofr.dev/",
      "html": "<a class=\"af oj\" href=\"https://gofr.dev/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://gofr.dev</a>",
      "text": "https://gofr.dev"
    },
    {
      "id": 24,
      "url": "https://github.com/gofr-dev/gofr",
      "html": "<a class=\"af oj\" href=\"https://github.com/gofr-dev/gofr\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://github.com/gofr-dev/gofr</a>",
      "text": "https://github.com/gofr-dev/gofr"
    },
    {
      "id": 25,
      "url": "https://discord.gg/zyJkVhps",
      "html": "<a class=\"af oj\" href=\"https://discord.gg/zyJkVhps\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://discord.gg/zyJkVhps</a>",
      "text": "https://discord.gg/zyJkVhps"
    },
    {
      "id": 26,
      "url": "https://twitter.com/stackademichq",
      "html": "<a class=\"af oj\" href=\"https://twitter.com/stackademichq\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">X</strong></a>",
      "text": "X"
    },
    {
      "id": 27,
      "url": "https://www.linkedin.com/company/stackademic",
      "html": "<a class=\"af oj\" href=\"https://www.linkedin.com/company/stackademic\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">LinkedIn</strong></a>",
      "text": "LinkedIn"
    },
    {
      "id": 28,
      "url": "https://www.youtube.com/c/stackademic",
      "html": "<a class=\"af oj\" href=\"https://www.youtube.com/c/stackademic\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">YouTube</strong></a>",
      "text": "YouTube"
    },
    {
      "id": 29,
      "url": "https://discord.gg/in-plain-english-709094664682340443",
      "html": "<a class=\"af oj\" href=\"https://discord.gg/in-plain-english-709094664682340443\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Discord</strong></a>",
      "text": "Discord"
    },
    {
      "id": 30,
      "url": "https://plainenglish.io/",
      "html": "<a class=\"af oj\" href=\"https://plainenglish.io/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">In Plain English</strong></a>",
      "text": "In Plain English"
    },
    {
      "id": 31,
      "url": "https://cofeed.app/",
      "html": "<a class=\"af oj\" href=\"https://cofeed.app/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">CoFeed</strong></a>",
      "text": "CoFeed"
    },
    {
      "id": 32,
      "url": "https://differ.blog/",
      "html": "<a class=\"af oj\" href=\"https://differ.blog/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Differ</strong></a>",
      "text": "Differ"
    },
    {
      "id": 33,
      "url": "https://stackademic.com/",
      "html": "<a class=\"af oj\" href=\"https://stackademic.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"nn gv\">Stackademic.com</strong></a>",
      "text": "Stackademic.com"
    },
    {
      "id": 34,
      "url": "https://medium.com/tag/backend?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"rv ay am ao\" href=\"https://medium.com/tag/backend?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Backend</div></a>",
      "text": "Backend"
    },
    {
      "id": 35,
      "url": "https://medium.com/tag/technology?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"rv ay am ao\" href=\"https://medium.com/tag/technology?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Technology</div></a>",
      "text": "Technology"
    },
    {
      "id": 36,
      "url": "https://medium.com/tag/golang?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"rv ay am ao\" href=\"https://medium.com/tag/golang?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Golang</div></a>",
      "text": "Golang"
    },
    {
      "id": 37,
      "url": "https://medium.com/tag/microservices?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"rv ay am ao\" href=\"https://medium.com/tag/microservices?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Microservices</div></a>",
      "text": "Microservices"
    },
    {
      "id": 38,
      "url": "https://medium.com/tag/framework?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"rv ay am ao\" href=\"https://medium.com/tag/framework?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"rw fj cx rx ge ry rz bf b bg z bk sa\">Framework</div></a>",
      "text": "Framework"
    },
    {
      "id": 39,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&user=Mundhraumang&userId=f2cfcdc5c71&source=-----eb4071cded30---------------------clap_footer-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.97",
      "text": ""
    },
    {
      "id": 40,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&user=Mundhraumang&userId=f2cfcdc5c71&source=-----eb4071cded30---------------------clap_footer-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerClapButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fstackademic%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------clap_footer-----------\" rel=\"noopener follow\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"la ao lb lc ld le am lf lg lh kz\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-label=\"clap\"><path fill-rule=\"evenodd\" d=\"M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.97",
      "text": ""
    },
    {
      "id": 41,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&source=--------------------------bookmark_footer-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" data-testid=\"footerBookmarkButton\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feb4071cded30&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;source=--------------------------bookmark_footer-----------\" rel=\"noopener follow\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"none\" viewBox=\"0 0 25 25\" class=\"du lx\" aria-label=\"Add to list bookmark button\"><path fill=\"currentColor\" d=\"M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z\"></path></svg></a>",
      "text": ""
    },
    {
      "id": 42,
      "url": "https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"l sy sz by ta ie\"><div class=\"l fj\"><img alt=\"Mundhraumang\" class=\"l fd by tb tc cx\" src=\"https://miro.medium.com/v2/da:true/resize:fill:144:144/0*1pfy5SWOFKWfx4rM\" width=\"72\" height=\"72\" loading=\"lazy\"><div class=\"if by l tb tc fs n ig ft\"></div></div></div></a>",
      "text": ""
    },
    {
      "id": 43,
      "url": "https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><div class=\"td ab fj\"><div><div class=\"bm\" aria-hidden=\"false\"><div class=\"l te tf by ta ik\"><div class=\"l fj\"><img alt=\"Stackademic\" class=\"l fd by bz ca cx\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*U-kjsW7IZUobnoy1gAp1UQ.png\" width=\"32\" height=\"32\" loading=\"lazy\"><div class=\"if by l bz ca fs n ig ft\"></div></div></div></div></div></div></a>",
      "text": ""
    },
    {
      "id": 44,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&user=Mundhraumang&userId=f2cfcdc5c71&source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------",
      "html": "<a class=\"bf b bg z ep rw eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------\" rel=\"noopener follow\">Follow</a>",
      "text": "Follow"
    },
    {
      "id": 45,
      "url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&newsletterV3=f2cfcdc5c71&newsletterV3Id=ca6d34bf839d&user=Mundhraumang&userId=f2cfcdc5c71&source=-----eb4071cded30---------------------subscribe_user-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;newsletterV3=f2cfcdc5c71&amp;newsletterV3Id=ca6d34bf839d&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------subscribe_user-----------\" rel=\"noopener follow\"><button class=\"bf b bg z th am ti tj tk tl tm tn to tp ew ex ey ez fa fb fc fd bm fe ff\" aria-label=\"Subscribe\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" fill=\"none\" viewBox=\"0 0 38 38\" class=\"tg tf te\"><rect width=\"0.5\" height=\"6.5\" x=\"26.25\" y=\"9.25\" rx=\"0.25\"></rect><rect width=\"0.5\" height=\"6.5\" x=\"29.75\" y=\"12.25\" rx=\"0.25\" transform=\"rotate(90 29.75 12.25)\"></rect><path d=\"M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5\"></path><path d=\"M11.5 14.5 19 20",
      "text": ""
    },
    {
      "id": 46,
      "url": "https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at ab q\" href=\"https://medium.com/@mundhraumang.02?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><h2 class=\"pw-author-name bf tq tr ts tt bk\"><span class=\"gn jo\">Written by <!-- -->Mundhraumang</span></h2></a>",
      "text": "Written by Mundhraumang"
    },
    {
      "id": 47,
      "url": "https://medium.com/@mundhraumang.02/followers?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar iq\" href=\"https://medium.com/@mundhraumang.02/followers?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\">75 Followers</a>",
      "text": "75 Followers"
    },
    {
      "id": 48,
      "url": "https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar iq ab q\" href=\"https://blog.stackademic.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b bg z jf jg jh ji jj jk jl jm bk\">Stackademic</p></a>",
      "text": "Stackademic"
    },
    {
      "id": 49,
      "url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&user=Mundhraumang&userId=f2cfcdc5c71&source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------",
      "html": "<a class=\"bf b bg z ep rw eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff\" href=\"https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2cfcdc5c71&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=post_page-f2cfcdc5c71----eb4071cded30---------------------follow_profile-----------\" rel=\"noopener follow\">Follow</a>",
      "text": "Follow"
    },
    {
      "id": 50,
      "url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&newsletterV3=f2cfcdc5c71&newsletterV3Id=ca6d34bf839d&user=Mundhraumang&userId=f2cfcdc5c71&source=-----eb4071cded30---------------------subscribe_user-----------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca6d34bf839d&amp;operation=register&amp;redirect=https%3A%2F%2Fblog.stackademic.com%2Fthe-ultimate-golang-framework-for-microservices-gofr-eb4071cded30&amp;newsletterV3=f2cfcdc5c71&amp;newsletterV3Id=ca6d34bf839d&amp;user=Mundhraumang&amp;userId=f2cfcdc5c71&amp;source=-----eb4071cded30---------------------subscribe_user-----------\" rel=\"noopener follow\"><button class=\"bf b bg z th am ti tj tk tl tm tn to tp ew ex ey ez fa fb fc fd bm fe ff\" aria-label=\"Subscribe\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" fill=\"none\" viewBox=\"0 0 38 38\" class=\"tg tf te\"><rect width=\"0.5\" height=\"6.5\" x=\"26.25\" y=\"9.25\" rx=\"0.25\"></rect><rect width=\"0.5\" height=\"6.5\" x=\"29.75\" y=\"12.25\" rx=\"0.25\" transform=\"rotate(90 29.75 12.25)\"></rect><path d=\"M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5\"></path><path d=\"M11.5 14.5 19 20",
      "text": ""
    },
    {
      "id": 51,
      "url": "https://help.medium.com/hc/en-us?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://help.medium.com/hc/en-us?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Help</p></a>",
      "text": "Help"
    },
    {
      "id": 52,
      "url": "https://medium.statuspage.io/?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.statuspage.io/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Status</p></a>",
      "text": "Status"
    },
    {
      "id": 53,
      "url": "https://medium.com/about?autoplay=1&source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/about?autoplay=1&amp;source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">About</p></a>",
      "text": "About"
    },
    {
      "id": 54,
      "url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Careers</p></a>",
      "text": "Careers"
    },
    {
      "id": 55,
      "url": "https://blog.stackademic.com/pressinquiries@medium.com?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"pressinquiries@medium.com?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Press</p></a>",
      "text": "Press"
    },
    {
      "id": 56,
      "url": "https://blog.medium.com/?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://blog.medium.com/?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Blog</p></a>",
      "text": "Blog"
    },
    {
      "id": 57,
      "url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Privacy</p></a>",
      "text": "Privacy"
    },
    {
      "id": 58,
      "url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Terms</p></a>",
      "text": "Terms"
    },
    {
      "id": 59,
      "url": "https://speechify.com/medium?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://speechify.com/medium?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Text to speech</p></a>",
      "text": "Text to speech"
    },
    {
      "id": 60,
      "url": "https://medium.com/business?source=post_page-----eb4071cded30--------------------------------",
      "html": "<a class=\"af ag ah ai aj ak al am an ao ap aq ar as at\" href=\"https://medium.com/business?source=post_page-----eb4071cded30--------------------------------\" rel=\"noopener follow\"><p class=\"bf b dv z du\">Teams</p></a>",
      "text": "Teams"
    }
  ],
  "resp": {
    "url": "https://blog.stackademic.com/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30?gi=da69aaf03284&source=topic_portal_recommended_stories------backend---1-107----------backend----------9b0ff235_7ba9_4567_be8a_1f42936dd1f9-------",
    "status": 200,
    "statusText": "OK",
    "headers": {
      "alt-svc": "h3=\":443\"; ma=86400",
      "cache-control": "no-cache, no-store, max-age=0, must-revalidate",
      "cf-cache-status": "DYNAMIC",
      "cf-ray": "8c348f1c2bb796ab-SJC",
      "connection": "keep-alive",
      "content-encoding": "gzip",
      "content-security-policy": "frame-ancestors 'self' https://medium.com",
      "content-type": "text/html; charset=utf-8",
      "date": "Sun, 15 Sep 2024 00:39:20 GMT",
      "link": "<https://glyph.medium.com/css/unbound.css>; as=\"style\"; rel=\"preload\"",
      "medium-fulfilled-by": "edgy/8.8.0, valencia/main-20240911-124520-3f71dfc371, lite/main-20240913-183058-97d0bdd4c3, rito/main-20240913-174653-d855c7953d, tutu/main-20240912-210746-ac18cfe1d1",
      "medium-missing-time": "191",
      "server": "cloudflare",
      "set-cookie": "sid=1:J/irDROSfjOy+gXxnyfpChMagaF+pSdy+/sapsXaIHU9lWOxV5JzVztYAR1hyfAK; Path=/; Expires=Mon, 20 Oct 2025 00:39:19 GMT; HttpOnly; Secure; SameSite=None, uid=lo_2b0fb1b54663; Path=/; Expires=Mon, 20 Oct 2025 00:39:19 GMT; HttpOnly; Secure; SameSite=None, _cfuvid=zchoOSPhF1awGh1VhDPvKek4CSK5K7s1w4AF1VFT7hE-1726360760272-0.0.1.1-604800000; path=/; domain=.blog.stackademic.com; HttpOnly; Secure; SameSite=None",
      "strict-transport-security": "max-age=15552000; includeSubDomains; preload",
      "transfer-encoding": "chunked",
      "vary": "Accept-Encoding",
      "x-content-type-options": "nosniff",
      "x-envoy-upstream-service-time": "415",
      "x-request-received-at": "1726360759778"
    }
  },
  "contentType": "text/html",
  "req": {
    "url": "https://medium.com/stackademic/the-ultimate-golang-framework-for-microservices-gofr-eb4071cded30?source=topic_portal_recommended_stories------backend---1-107----------backend----------9b0ff235_7ba9_4567_be8a_1f42936dd1f9-------"
  }
}